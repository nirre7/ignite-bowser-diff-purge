diff --git a/IgniteDiffApp/.gitignore b/IgniteDiffApp/.gitignore
index d12b94f..b2cee48 100644
--- a/IgniteDiffApp/.gitignore
+++ b/IgniteDiffApp/.gitignore
@@ -64,3 +64,7 @@ buck-out/
 
 # VS Code
 .vscode
+
+# Configurations
+app/config/env.*.js
+!env.js
diff --git a/IgniteDiffApp/.solidarity b/IgniteDiffApp/.solidarity
index 582c35e..cd5e390 100644
--- a/IgniteDiffApp/.solidarity
+++ b/IgniteDiffApp/.solidarity
@@ -2,13 +2,6 @@
   "$schema": "http://json.schemastore.org/solidaritySchema",
   "requirements": {
     "Node": [{ "rule": "cli", "binary": "node", "semver": ">=8.6.0" }],
-    "React Native": [
-      {
-        "rule": "cli",
-        "binary": "react-native",
-        "semver": ">=2.0.1"
-      }
-    ],
     "Xcode": [
       {
         "rule": "cli",
diff --git a/IgniteDiffApp/README.md b/IgniteDiffApp/README.md
index 0b76860..e4514ad 100644
--- a/IgniteDiffApp/README.md
+++ b/IgniteDiffApp/README.md
@@ -129,7 +129,7 @@ This directory will hold your Jest configs and mocks, as well as your [storyshot
 From the command line in your generated app's root directory, enter `yarn run storybook`
 This starts up the storybook server.
 
-In `app/app.tsx`, change `SHOW_STORYBOOK` to `true` and reload the app.
+In `index.js`, change `SHOW_STORYBOOK` to `true` and reload the app.
 
 For Visual Studio Code users, there is a handy extension that makes it easy to load Storybook use cases into a running emulator via tapping on items in the editor sidebar. Install the `React Native Storybook` extension by `Orta`, hit `cmd + shift + P` and select "Reconnect Storybook to VSCode". Expand the STORYBOOK section in the sidebar to see all use cases for components that have `.story.tsx` files in their directories.
 
diff --git a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
index a5f6665..cac41eb 100644
--- a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
+++ b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
@@ -2,9 +2,9 @@ package com.ignitediffapp;
 
 import com.facebook.react.ReactActivity;
 
-      import com.facebook.react.ReactActivityDelegate;
-      import com.facebook.react.ReactRootView;
-      import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
+        import com.facebook.react.ReactActivityDelegate;
+        import com.facebook.react.ReactRootView;
+        import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 
 public class MainActivity extends ReactActivity {
 
diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index bc14458..84b2891 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -1,86 +1,76 @@
-// Welcome to the main entry point of the app.
-//
-// In this file, we'll be kicking off our app or storybook.
-
-import "./i18n"
-import React, { useState, useEffect } from "react"
-import { AppRegistry, YellowBox } from "react-native"
-import { StatefulNavigator, BackButtonHandler, exitRoutes } from "./navigation"
-import { StorybookUIRoot } from "../storybook"
-import { RootStore, RootStoreProvider, setupRootStore } from "./models/root-store"
-
-import { contains } from "ramda"
-
 /**
- * Ignore some yellowbox warnings. Some of these are for deprecated functions
- * that we haven't gotten around to replacing yet.
+ * Welcome to the main entry point of the app. In this file, we'll
+ * be kicking off our app or storybook.
+ *
+ * Most of this file is boilerplate and you shouldn't need to modify
+ * it very often. But take some time to look through and understand
+ * what is going on here.
+ *
+ * The app navigation resides in ./app/navigation, so head over there
+ * if you're interested in adding screens and navigators.
  */
-YellowBox.ignoreWarnings([
-  "componentWillMount is deprecated",
-  "componentWillReceiveProps is deprecated",
-])
+import "./i18n"
+import "./utils/ignore-warnings"
+import React, { useState, useEffect, useRef, FunctionComponent as Component } from "react"
+import { NavigationContainerRef } from "@react-navigation/native"
+import { SafeAreaProvider, initialWindowSafeAreaInsets } from "react-native-safe-area-context"
+import * as storage from "./utils/storage"
+import {
+  useBackButtonHandler,
+  RootNavigator,
+  canExit,
+  setRootNavigation,
+  useNavigationPersistence,
+} from "./navigation"
+import { RootStore, RootStoreProvider, setupRootStore } from "./models"
 
-/**
- * Storybook still wants to use ReactNative's AsyncStorage instead of the
- * react-native-community package; this causes a YellowBox warning. This hack
- * points RN's AsyncStorage at the community one, fixing the warning. Here's the
- * Storybook issue about this: https://github.com/storybookjs/storybook/issues/6078
- */
-const ReactNative = require("react-native")
-Object.defineProperty(ReactNative, "AsyncStorage", {
-  get(): any {
-    return require("@react-native-community/async-storage").default
-  },
-})
+// This puts screens in a native ViewController or Activity. If you want fully native
+// stack navigation, use `createNativeStackNavigator` in place of `createStackNavigator`:
+// https://github.com/kmagiera/react-native-screens#using-native-stack-navigator
+import { enableScreens } from "react-native-screens"
+enableScreens()
 
-/**
- * Are we allowed to exit the app?  This is called when the back button
- * is pressed on android.
- *
- * @param routeName The currently active route name.
- */
-const canExit = (routeName: string) => contains(routeName, exitRoutes)
+export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
 
 /**
  * This is the root component of our app.
  */
-export const App: React.FunctionComponent<{}> = () => {
+const App: Component<{}> = () => {
+  const navigationRef = useRef<NavigationContainerRef>()
   const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)
+
+  setRootNavigation(navigationRef)
+  useBackButtonHandler(navigationRef, canExit)
+  const { initialNavigationState, onNavigationStateChange } = useNavigationPersistence(
+    storage,
+    NAVIGATION_PERSISTENCE_KEY,
+  )
+
+  // Kick off initial async loading actions, like loading fonts and RootStore
   useEffect(() => {
-    setupRootStore().then(setRootStore)
+    ;(async () => {
+      setupRootStore().then(setRootStore)
+    })()
   }, [])
 
   // Before we show the app, we have to wait for our state to be ready.
   // In the meantime, don't render anything. This will be the background
-  // color set in native by rootView's background color.
-  //
-  // This step should be completely covered over by the splash screen though.
-  //
-  // You're welcome to swap in your own component to render if your boot up
-  // sequence is too slow though.
-  if (!rootStore) {
-    return null
-  }
+  // color set in native by rootView's background color. You can replace
+  // with your own loading component if you wish.
+  if (!rootStore) return null
 
   // otherwise, we're ready to render the app
   return (
     <RootStoreProvider value={rootStore}>
-      <BackButtonHandler canExit={canExit}>
-        <StatefulNavigator />
-      </BackButtonHandler>
+      <SafeAreaProvider initialSafeAreaInsets={initialWindowSafeAreaInsets}>
+        <RootNavigator
+          ref={navigationRef}
+          initialState={initialNavigationState}
+          onStateChange={onNavigationStateChange}
+        />
+      </SafeAreaProvider>
     </RootStoreProvider>
   )
 }
 
-/**
- * This needs to match what's found in your app_delegate.m and MainActivity.java.
- */
-const APP_NAME = "IgniteDiffApp"
-
-// Should we show storybook instead of our app?
-//
-// ⚠️ Leave this as `false` when checking into git.
-const SHOW_STORYBOOK = false
-
-const RootComponent = SHOW_STORYBOOK && __DEV__ ? StorybookUIRoot : App
-AppRegistry.registerComponent(APP_NAME, () => RootComponent)
+export default App
diff --git a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
index ca94a41..6a7e06a 100644
--- a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
+++ b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
@@ -1,7 +1,7 @@
 import * as React from "react"
 import { View, ViewStyle, ImageStyle, TextStyle } from "react-native"
-import { Text } from "../text"
-import { Icon } from "../icon"
+import { Text } from "../text/text"
+import { Icon } from "../icon/icon"
 import { spacing } from "../../theme"
 
 const BULLET_ITEM: ViewStyle = {
diff --git a/IgniteDiffApp/app/components/bullet-item/index.ts b/IgniteDiffApp/app/components/bullet-item/index.ts
deleted file mode 100644
index 1facf05..0000000
--- a/IgniteDiffApp/app/components/bullet-item/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./bullet-item"
diff --git a/IgniteDiffApp/app/components/button/button.story.tsx b/IgniteDiffApp/app/components/button/button.story.tsx
index 4ccbde2..94707d9 100644
--- a/IgniteDiffApp/app/components/button/button.story.tsx
+++ b/IgniteDiffApp/app/components/button/button.story.tsx
@@ -2,9 +2,9 @@ import * as React from "react"
 import { ViewStyle, TextStyle, Alert } from "react-native"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Button } from "./"
+import { Button } from "./button"
 
-declare var module
+declare let module
 
 const buttonStyleArray: ViewStyle[] = [{ paddingVertical: 100 }, { borderRadius: 0 }]
 
diff --git a/IgniteDiffApp/app/components/button/button.tsx b/IgniteDiffApp/app/components/button/button.tsx
index bc284d0..d95709d 100644
--- a/IgniteDiffApp/app/components/button/button.tsx
+++ b/IgniteDiffApp/app/components/button/button.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity } from "react-native"
-import { Text } from "../text"
+import { Text } from "../text/text"
 import { viewPresets, textPresets } from "./button.presets"
 import { ButtonProps } from "./button.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/button/index.ts b/IgniteDiffApp/app/components/button/index.ts
deleted file mode 100644
index e93d26f..0000000
--- a/IgniteDiffApp/app/components/button/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./button"
diff --git a/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx b/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx
index 75da42d..fa1309a 100644
--- a/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx
+++ b/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx
@@ -5,10 +5,10 @@ import * as React from "react"
 import { View, ViewStyle } from "react-native"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Checkbox } from "./"
+import { Checkbox } from "./checkbox"
 import { Toggle } from "react-powerplug"
 
-declare var module
+declare let module
 
 const arrayStyle: ViewStyle[] = [{ paddingVertical: 40 }, { alignSelf: "flex-end" }]
 const arrayOutlineStyle: ViewStyle[] = [{ borderColor: "#b443c9" }, { borderWidth: 25 }]
diff --git a/IgniteDiffApp/app/components/checkbox/checkbox.tsx b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
index 65ee796..bdb9825 100644
--- a/IgniteDiffApp/app/components/checkbox/checkbox.tsx
+++ b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity, TextStyle, ViewStyle, View } from "react-native"
-import { Text } from "../text"
+import { Text } from "../text/text"
 import { color, spacing } from "../../theme"
 import { CheckboxProps } from "./checkbox.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/checkbox/index.ts b/IgniteDiffApp/app/components/checkbox/index.ts
deleted file mode 100644
index 1b929d0..0000000
--- a/IgniteDiffApp/app/components/checkbox/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./checkbox"
diff --git a/IgniteDiffApp/app/components/form-row/form-row.story.tsx b/IgniteDiffApp/app/components/form-row/form-row.story.tsx
index d78322d..45bbd89 100644
--- a/IgniteDiffApp/app/components/form-row/form-row.story.tsx
+++ b/IgniteDiffApp/app/components/form-row/form-row.story.tsx
@@ -4,12 +4,11 @@
 import * as React from "react"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { FormRow } from "./form-row"
-import { Text } from "../text"
+import { Text, FormRow } from "../"
 import { color } from "../../theme/color"
 import { ViewStyle } from "react-native"
 
-declare var module
+declare let module
 
 const TEXT_STYLE_OVERRIDE = {
   color: color.storybookTextColor,
diff --git a/IgniteDiffApp/app/components/form-row/index.ts b/IgniteDiffApp/app/components/form-row/index.ts
deleted file mode 100644
index e7b1a23..0000000
--- a/IgniteDiffApp/app/components/form-row/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./form-row"
diff --git a/IgniteDiffApp/app/components/header/header.props.ts b/IgniteDiffApp/app/components/header/header.props.ts
index 365a10d..19e9e3d 100644
--- a/IgniteDiffApp/app/components/header/header.props.ts
+++ b/IgniteDiffApp/app/components/header/header.props.ts
@@ -1,5 +1,5 @@
 import { ViewStyle, TextStyle } from "react-native"
-import { IconTypes } from "../icon"
+import { IconTypes } from "../icon/icons"
 
 export interface HeaderProps {
   /**
diff --git a/IgniteDiffApp/app/components/header/header.story.tsx b/IgniteDiffApp/app/components/header/header.story.tsx
index 2baf761..2ec848c 100644
--- a/IgniteDiffApp/app/components/header/header.story.tsx
+++ b/IgniteDiffApp/app/components/header/header.story.tsx
@@ -5,7 +5,7 @@ import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Header } from "./header"
 import { color } from "../../theme"
 
-declare var module
+declare let module
 
 const VIEWSTYLE = {
   flex: 1,
diff --git a/IgniteDiffApp/app/components/header/header.tsx b/IgniteDiffApp/app/components/header/header.tsx
index 1ac0a3b..1936d84 100644
--- a/IgniteDiffApp/app/components/header/header.tsx
+++ b/IgniteDiffApp/app/components/header/header.tsx
@@ -1,9 +1,9 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { View, ViewStyle, TextStyle } from "react-native"
 import { HeaderProps } from "./header.props"
-import { Button } from "../button"
-import { Icon } from "../icon"
-import { Text } from "../text"
+import { Button } from "../button/button"
+import { Text } from "../text/text"
+import { Icon } from "../icon/icon"
 import { spacing } from "../../theme"
 import { translate } from "../../i18n/"
 
@@ -24,7 +24,7 @@ const RIGHT: ViewStyle = { width: 32 }
 /**
  * Header that appears on many screens. Will hold navigation buttons and screen title.
  */
-export const Header: React.FunctionComponent<HeaderProps> = props => {
+export const Header: Component<HeaderProps> = props => {
   const {
     onLeftPress,
     onRightPress,
diff --git a/IgniteDiffApp/app/components/header/index.ts b/IgniteDiffApp/app/components/header/index.ts
deleted file mode 100644
index 48b9e78..0000000
--- a/IgniteDiffApp/app/components/header/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./header"
diff --git a/IgniteDiffApp/app/components/icon/icon.story.tsx b/IgniteDiffApp/app/components/icon/icon.story.tsx
index 5b0c33e..fa599ac 100644
--- a/IgniteDiffApp/app/components/icon/icon.story.tsx
+++ b/IgniteDiffApp/app/components/icon/icon.story.tsx
@@ -3,7 +3,7 @@ import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Icon } from "./icon"
 
-declare var module
+declare let module
 
 storiesOf("Icon", module)
   .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)
diff --git a/IgniteDiffApp/app/components/icon/icons/index.ts b/IgniteDiffApp/app/components/icon/icons/index.ts
index b701049..00e8a59 100644
--- a/IgniteDiffApp/app/components/icon/icons/index.ts
+++ b/IgniteDiffApp/app/components/icon/icons/index.ts
@@ -1,6 +1,6 @@
 export const icons = {
-  back: require("./arrow-left@2x.png"),
-  bullet: require("./bullet@2x.png"),
+  back: require("./arrow-left.png"),
+  bullet: require("./bullet.png"),
 }
 
 export type IconTypes = keyof typeof icons
diff --git a/IgniteDiffApp/app/components/icon/index.ts b/IgniteDiffApp/app/components/icon/index.ts
deleted file mode 100644
index 144e840..0000000
--- a/IgniteDiffApp/app/components/icon/index.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-export * from "./icon"
-export * from "./icons"
diff --git a/IgniteDiffApp/app/components/index.ts b/IgniteDiffApp/app/components/index.ts
new file mode 100644
index 0000000..0449c9b
--- /dev/null
+++ b/IgniteDiffApp/app/components/index.ts
@@ -0,0 +1,11 @@
+export * from "./bullet-item/bullet-item"
+export * from "./button/button"
+export * from "./checkbox/checkbox"
+export * from "./form-row/form-row"
+export * from "./header/header"
+export * from "./icon/icon"
+export * from "./screen/screen"
+export * from "./switch/switch"
+export * from "./text/text"
+export * from "./text-field/text-field"
+export * from "./wallpaper/wallpaper"
diff --git a/IgniteDiffApp/app/components/screen/index.ts b/IgniteDiffApp/app/components/screen/index.ts
deleted file mode 100644
index 8c7396e..0000000
--- a/IgniteDiffApp/app/components/screen/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./screen"
diff --git a/IgniteDiffApp/app/components/screen/screen.tsx b/IgniteDiffApp/app/components/screen/screen.tsx
index 8631cfc..4943c0b 100644
--- a/IgniteDiffApp/app/components/screen/screen.tsx
+++ b/IgniteDiffApp/app/components/screen/screen.tsx
@@ -1,16 +1,17 @@
 import * as React from "react"
 import { KeyboardAvoidingView, Platform, ScrollView, StatusBar, View } from "react-native"
-import { SafeAreaView } from "react-navigation"
+import { useSafeArea } from "react-native-safe-area-context"
 import { ScreenProps } from "./screen.props"
 import { isNonScrolling, offsets, presets } from "./screen.presets"
 
 const isIos = Platform.OS === "ios"
 
 function ScreenWithoutScrolling(props: ScreenProps) {
-  const preset = presets["fixed"]
+  const insets = useSafeArea()
+  const preset = presets.fixed
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const Wrapper = props.unsafe ? View : SafeAreaView
+  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
 
   return (
     <KeyboardAvoidingView
@@ -19,16 +20,17 @@ function ScreenWithoutScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <Wrapper style={[preset.inner, style]}>{props.children}</Wrapper>
+      <View style={[preset.inner, style, insetStyle]}>{props.children}</View>
     </KeyboardAvoidingView>
   )
 }
 
 function ScreenWithScrolling(props: ScreenProps) {
-  const preset = presets["scroll"]
+  const insets = useSafeArea()
+  const preset = presets.scroll
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const Wrapper = props.unsafe ? View : SafeAreaView
+  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
 
   return (
     <KeyboardAvoidingView
@@ -37,14 +39,14 @@ function ScreenWithScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <Wrapper style={[preset.outer, backgroundStyle]}>
+      <View style={[preset.outer, backgroundStyle, insetStyle]}>
         <ScrollView
           style={[preset.outer, backgroundStyle]}
           contentContainerStyle={[preset.inner, style]}
         >
           {props.children}
         </ScrollView>
-      </Wrapper>
+      </View>
     </KeyboardAvoidingView>
   )
 }
diff --git a/IgniteDiffApp/app/components/switch/index.ts b/IgniteDiffApp/app/components/switch/index.ts
deleted file mode 100644
index b0af0ed..0000000
--- a/IgniteDiffApp/app/components/switch/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./switch"
diff --git a/IgniteDiffApp/app/components/switch/switch.story.tsx b/IgniteDiffApp/app/components/switch/switch.story.tsx
index 02ea37c..d390ab5 100644
--- a/IgniteDiffApp/app/components/switch/switch.story.tsx
+++ b/IgniteDiffApp/app/components/switch/switch.story.tsx
@@ -6,9 +6,9 @@ import { View, ViewStyle } from "react-native"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Toggle } from "react-powerplug"
-import { Switch } from "."
+import { Switch } from "./switch"
 
-declare var module
+declare let module
 
 const styleArray: ViewStyle[] = [{ borderColor: "#686868" }]
 
diff --git a/IgniteDiffApp/app/components/switch/switch.tsx b/IgniteDiffApp/app/components/switch/switch.tsx
index defdf89..e3786e2 100644
--- a/IgniteDiffApp/app/components/switch/switch.tsx
+++ b/IgniteDiffApp/app/components/switch/switch.tsx
@@ -1,4 +1,4 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { ViewStyle, Animated, Easing, TouchableWithoutFeedback } from "react-native"
 import { color } from "../../theme"
 import { SwitchProps } from "./switch.props"
@@ -52,7 +52,7 @@ const enhance = (style, newStyles): any => {
 
 const makeAnimatedValue = switchOn => new Animated.Value(switchOn ? 1 : 0)
 
-export const Switch: React.FunctionComponent<SwitchProps> = props => {
+export const Switch: Component<SwitchProps> = props => {
   const [timer] = React.useState<Animated.Value>(makeAnimatedValue(props.value))
   const startAnimation = React.useMemo(
     () => (newValue: boolean) => {
diff --git a/IgniteDiffApp/app/components/text-field/index.ts b/IgniteDiffApp/app/components/text-field/index.ts
deleted file mode 100644
index 44064b6..0000000
--- a/IgniteDiffApp/app/components/text-field/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./text-field"
diff --git a/IgniteDiffApp/app/components/text-field/text-field.story.tsx b/IgniteDiffApp/app/components/text-field/text-field.story.tsx
index 0566867..46e2af0 100644
--- a/IgniteDiffApp/app/components/text-field/text-field.story.tsx
+++ b/IgniteDiffApp/app/components/text-field/text-field.story.tsx
@@ -4,12 +4,11 @@
 import * as React from "react"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Text } from "../text"
-import { TextField } from "./"
+import { Text, TextField } from "../"
 import { State } from "react-powerplug"
 import { ViewStyle, TextStyle, Alert } from "react-native"
 
-declare var module
+declare let module
 
 const styleArray: ViewStyle[] = [{ paddingHorizontal: 30 }, { borderWidth: 30 }]
 
@@ -25,7 +24,7 @@ const inputStyleArray: TextStyle[] = [
     borderColor: "#7fff00",
   },
 ]
-var alertWhenFocused = true
+let alertWhenFocused = true
 
 storiesOf("TextField", module)
   .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)
diff --git a/IgniteDiffApp/app/components/text-field/text-field.tsx b/IgniteDiffApp/app/components/text-field/text-field.tsx
index 6d0ff1a..69414d2 100644
--- a/IgniteDiffApp/app/components/text-field/text-field.tsx
+++ b/IgniteDiffApp/app/components/text-field/text-field.tsx
@@ -1,8 +1,8 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { View, TextInput, TextStyle, ViewStyle } from "react-native"
 import { color, spacing, typography } from "../../theme"
 import { translate } from "../../i18n"
-import { Text } from "../text"
+import { Text } from "../text/text"
 import { TextFieldProps } from "./text-field.props"
 import { mergeAll, flatten } from "ramda"
 
@@ -32,7 +32,7 @@ const enhance = (style, styleOverride) => {
 /**
  * A component which has a label and an input together.
  */
-export const TextField: React.FunctionComponent<TextFieldProps> = props => {
+export const TextField: Component<TextFieldProps> = props => {
   const {
     placeholderTx,
     placeholder,
diff --git a/IgniteDiffApp/app/components/text/index.ts b/IgniteDiffApp/app/components/text/index.ts
deleted file mode 100644
index 6417a56..0000000
--- a/IgniteDiffApp/app/components/text/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./text"
diff --git a/IgniteDiffApp/app/components/text/text.story.tsx b/IgniteDiffApp/app/components/text/text.story.tsx
index 180ad79..cad1ae6 100644
--- a/IgniteDiffApp/app/components/text/text.story.tsx
+++ b/IgniteDiffApp/app/components/text/text.story.tsx
@@ -8,7 +8,7 @@ import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { color } from "../../theme"
 import { Text } from "./text"
 
-declare var module
+declare let module
 
 const VIEWSTYLE = {
   flex: 1,
@@ -57,7 +57,7 @@ storiesOf("Text", module)
       <UseCase text="tx" usage="Used for looking up i18n keys.">
         <View style={VIEWSTYLE}>
           <Text tx="common.ok" />
-          <Text tx="omglol" />
+          <Text tx="common.cancel" />
         </View>
       </UseCase>
       <UseCase
diff --git a/IgniteDiffApp/app/components/wallpaper/BG.png b/IgniteDiffApp/app/components/wallpaper/bg.png
similarity index 100%
rename from IgniteDiffApp/app/components/wallpaper/BG.png
rename to IgniteDiffApp/app/components/wallpaper/bg.png
diff --git a/IgniteDiffApp/app/components/wallpaper/index.ts b/IgniteDiffApp/app/components/wallpaper/index.ts
deleted file mode 100644
index e66cbc2..0000000
--- a/IgniteDiffApp/app/components/wallpaper/index.ts
+++ /dev/null
@@ -1 +0,0 @@
-export * from "./wallpaper"
diff --git a/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx b/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx
index 18599c6..3516574 100644
--- a/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx
+++ b/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx
@@ -3,7 +3,7 @@ import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Wallpaper } from "./wallpaper"
 
-declare var module
+declare let module
 
 storiesOf("Wallpaper", module)
   .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)
diff --git a/IgniteDiffApp/app/components/wallpaper/wallpaper.tsx b/IgniteDiffApp/app/components/wallpaper/wallpaper.tsx
index 855390a..50e1367 100644
--- a/IgniteDiffApp/app/components/wallpaper/wallpaper.tsx
+++ b/IgniteDiffApp/app/components/wallpaper/wallpaper.tsx
@@ -3,7 +3,7 @@ import { Image } from "react-native"
 import { presets } from "./wallpaper.presets"
 import { WallpaperProps } from "./wallpaper.props"
 
-const defaultImage = require("./bg@2x.png")
+const defaultImage = require("./bg.png")
 
 /**
  * For your text displaying needs.
diff --git a/IgniteDiffApp/app/config/env.js b/IgniteDiffApp/app/config/env.js
new file mode 100644
index 0000000..c5d7ffc
--- /dev/null
+++ b/IgniteDiffApp/app/config/env.js
@@ -0,0 +1 @@
+module.exports = __DEV__ ? require("./env.dev") : require("./env.prod")
diff --git a/IgniteDiffApp/app/i18n/i18n.ts b/IgniteDiffApp/app/i18n/i18n.ts
index e8eed38..79de3d8 100644
--- a/IgniteDiffApp/app/i18n/i18n.ts
+++ b/IgniteDiffApp/app/i18n/i18n.ts
@@ -8,6 +8,7 @@ i18n.fallbacks = true
 i18n.translations = { en, ja }
 
 const fallback = { languageTag: "en", isRTL: false }
+
 const { languageTag } =
   RNLocalize.findBestAvailableLanguage(Object.keys(i18n.translations)) || fallback
 i18n.locale = languageTag
diff --git a/IgniteDiffApp/app/models/environment.ts b/IgniteDiffApp/app/models/environment.ts
index 4277b6a..e8569b1 100644
--- a/IgniteDiffApp/app/models/environment.ts
+++ b/IgniteDiffApp/app/models/environment.ts
@@ -1,6 +1,11 @@
-import { Reactotron } from "../services/reactotron"
 import { Api } from "../services/api"
 
+let ReactotronDev
+if (__DEV__) {
+  const { Reactotron } = require("../services/reactotron")
+  ReactotronDev = Reactotron
+}
+
 /**
  * The environment is a place where services and shared dependencies between
  * models live.  They are made available to every model via dependency injection.
@@ -8,20 +13,25 @@ import { Api } from "../services/api"
 export class Environment {
   constructor() {
     // create each service
-    this.reactotron = new Reactotron()
+    if (__DEV__) {
+      // dev-only services
+      this.reactotron = new ReactotronDev()
+    }
     this.api = new Api()
   }
 
   async setup() {
     // allow each service to setup
-    await this.reactotron.setup()
+    if (__DEV__) {
+      await this.reactotron.setup()
+    }
     await this.api.setup()
   }
 
   /**
    * Reactotron is only available in dev.
    */
-  reactotron: Reactotron
+  reactotron: typeof ReactotronDev
 
   /**
    * Our api.
diff --git a/IgniteDiffApp/app/models/extensions/index.ts b/IgniteDiffApp/app/models/extensions/index.ts
deleted file mode 100644
index 455be6c..0000000
--- a/IgniteDiffApp/app/models/extensions/index.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export * from "./with-environment"
-export * from "./with-root-store"
-export * from "./with-status"
diff --git a/IgniteDiffApp/app/models/extensions/with-root-store.ts b/IgniteDiffApp/app/models/extensions/with-root-store.ts
index 969faf3..eff769c 100644
--- a/IgniteDiffApp/app/models/extensions/with-root-store.ts
+++ b/IgniteDiffApp/app/models/extensions/with-root-store.ts
@@ -1,5 +1,5 @@
 import { getRoot, IStateTreeNode } from "mobx-state-tree"
-import { RootStore } from "../root-store"
+import { RootStoreModel } from "../root-store/root-store"
 
 /**
  * Adds a rootStore property to the node for a convenient
@@ -11,7 +11,7 @@ export const withRootStore = (self: IStateTreeNode) => ({
      * The root store.
      */
     get rootStore() {
-      return getRoot<RootStore>(self)
+      return getRoot<typeof RootStoreModel>(self)
     },
   },
 })
diff --git a/IgniteDiffApp/app/models/index.ts b/IgniteDiffApp/app/models/index.ts
new file mode 100644
index 0000000..3819dcc
--- /dev/null
+++ b/IgniteDiffApp/app/models/index.ts
@@ -0,0 +1,6 @@
+export * from "./extensions/with-environment"
+export * from "./extensions/with-root-store"
+export * from "./extensions/with-status"
+export * from "./root-store/root-store"
+export * from "./root-store/root-store-context"
+export * from "./root-store/setup-root-store"
diff --git a/IgniteDiffApp/app/models/root-store/index.ts b/IgniteDiffApp/app/models/root-store/index.ts
deleted file mode 100644
index 77fd51a..0000000
--- a/IgniteDiffApp/app/models/root-store/index.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export * from "./root-store"
-export * from "./root-store-context"
-export * from "./setup-root-store"
diff --git a/IgniteDiffApp/app/models/root-store/root-store.ts b/IgniteDiffApp/app/models/root-store/root-store.ts
index d191251..3bc0eaa 100644
--- a/IgniteDiffApp/app/models/root-store/root-store.ts
+++ b/IgniteDiffApp/app/models/root-store/root-store.ts
@@ -1,11 +1,11 @@
 import { Instance, SnapshotOut, types } from "mobx-state-tree"
-import { NavigationStoreModel } from "../../navigation/navigation-store"
 
 /**
  * A RootStore model.
  */
+// prettier-ignore
 export const RootStoreModel = types.model("RootStore").props({
-  navigationStore: types.optional(NavigationStoreModel, {}),
+
 })
 
 /**
diff --git a/IgniteDiffApp/app/navigation/back-button-handler.tsx b/IgniteDiffApp/app/navigation/back-button-handler.tsx
deleted file mode 100644
index 439df52..0000000
--- a/IgniteDiffApp/app/navigation/back-button-handler.tsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import { FunctionComponent, useEffect } from "react"
-import { BackHandler } from "react-native"
-import { observer } from "mobx-react-lite"
-import { NavigationActions } from "react-navigation"
-import { useStores } from "../models/root-store"
-
-interface BackButtonHandlerProps {
-  /**
-   * Are we allowed to exit?
-   */
-  canExit(routeName: string): boolean
-}
-
-export const BackButtonHandler: FunctionComponent<BackButtonHandlerProps> = observer(props => {
-  const { navigationStore } = useStores()
-
-  useEffect(() => {
-    // We'll fire this when the back button is pressed on Android.
-    const onBackPress = () => {
-      // grab the current route
-      const routeName = navigationStore.findCurrentRoute().routeName
-
-      // are we allowed to exit?
-      if (props.canExit(routeName)) {
-        // let the system know we've not handled this event
-        return false
-      } else {
-        // we can't exit, so let's turn this into a back action
-        navigationStore.dispatch(NavigationActions.back())
-        // let the system know we've handled this event
-        return true
-      }
-    }
-
-    // Subscribe when we come to life
-    BackHandler.addEventListener("hardwareBackPress", onBackPress)
-
-    // Unsubscribe when we're done
-    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
-  }, [])
-
-  // Just render our children, or nothing if they weren't passed.
-  return (props as any).children
-})
diff --git a/IgniteDiffApp/app/navigation/index.ts b/IgniteDiffApp/app/navigation/index.ts
index 2ac4bde..40a84d1 100644
--- a/IgniteDiffApp/app/navigation/index.ts
+++ b/IgniteDiffApp/app/navigation/index.ts
@@ -1,3 +1,3 @@
-export * from "./back-button-handler"
 export * from "./primary-navigator"
-export * from "./stateful-navigator"
+export * from "./root-navigator"
+export * from "./navigation-utilities"
diff --git a/IgniteDiffApp/app/navigation/navigation-events.ts b/IgniteDiffApp/app/navigation/navigation-events.ts
deleted file mode 100644
index fb6449f..0000000
--- a/IgniteDiffApp/app/navigation/navigation-events.ts
+++ /dev/null
@@ -1,56 +0,0 @@
-import { types } from "mobx-state-tree"
-import { EventType, NavigationEventCallback } from "react-navigation"
-
-/**
- * This mobx-state-tree model bestows a few events for working with `react-navigation`
- * events.
- *
- * You use can `compose` or build directly off this to mixin these features.
- */
-export const NavigationEvents = types.model("NavigationEvents").volatile(() => {
-  // who is currently subscribed to react-navigation events
-  const subs = new Set<NavigationEventCallback>()
-
-  /**
-   * Fires after we change our state.  You call this from the dispatch
-   * to ensure any subscribers are told about state changes.
-   *
-   * @param action The react-navigation action which triggered this update.
-   * @param oldState The previous navigation state.
-   * @param newState The next navigation state.
-   */
-  const fireSubscribers = (action: any, oldState: any, newState: any) => {
-    // tell each subscriber out this
-    subs.forEach(subscriber => {
-      subscriber({
-        type: "action",
-        action,
-        state: newState,
-        lastState: oldState,
-      })
-    })
-  }
-
-  /**
-   * Provides a way from screens (for example) to subscribe to `react-navigation`
-   * events.
-   *
-   * @param eventName The event.
-   * @param handler Some strange handler
-   */
-  const addListener = (eventName: EventType, handler: NavigationEventCallback) => {
-    if (eventName !== "action") {
-      return { remove: () => {} }
-    }
-
-    // subscribe
-    subs.add(handler)
-
-    // return the instructions on how to unsubscribe
-    return {
-      remove: () => subs.delete(handler),
-    }
-  }
-
-  return { addListener, fireSubscribers, subs }
-})
diff --git a/IgniteDiffApp/app/navigation/navigation-store.ts b/IgniteDiffApp/app/navigation/navigation-store.ts
deleted file mode 100644
index 005d415..0000000
--- a/IgniteDiffApp/app/navigation/navigation-store.ts
+++ /dev/null
@@ -1,92 +0,0 @@
-import { Instance, types } from "mobx-state-tree"
-import { RootNavigator } from "./root-navigator"
-import { NavigationActions, NavigationAction } from "react-navigation"
-import { NavigationEvents } from "./navigation-events"
-
-const DEFAULT_STATE = RootNavigator.router.getStateForAction(NavigationActions.init(), null)
-
-/**
- * Finds the current route.
- *
- * @param navState the current nav state
- */
-function findCurrentRoute(navState) {
-  const route = navState.routes[navState.index]
-  if (route.routes) {
-    return findCurrentRoute(route)
-  }
-  return route
-}
-
-/**
- * Tracks the navigation state for `react-navigation` as well as providers
- * the actions for changing that state.
- */
-export const NavigationStoreModel = NavigationEvents.named("NavigationStore")
-  .props({
-    /**
-     * the navigation state tree (Frozen here means it is immutable.)
-     */
-    state: types.optional(types.frozen(), DEFAULT_STATE),
-  })
-  .preProcessSnapshot(snapshot => {
-    if (!snapshot || !snapshot.state) return snapshot
-
-    try {
-      // make sure react-navigation can handle our state
-      RootNavigator.router.getPathAndParamsForState(snapshot.state)
-      return snapshot
-    } catch (e) {
-      // otherwise restore default state
-      return { ...snapshot, state: DEFAULT_STATE }
-    }
-  })
-  .actions(self => ({
-    /**
-     * Return all subscribers
-     */
-    actionSubscribers() {
-      return self.subs
-    },
-
-    /**
-     * Fires when navigation happens.
-     *
-     * Our job is to update the state for this new navigation action.
-     *
-     * @param action The new navigation action to perform
-     * @param shouldPush Should we push or replace the whole stack?
-     */
-    dispatch(action: NavigationAction, shouldPush: boolean = true) {
-      const previousNavState = shouldPush ? self.state : null
-      self.state = RootNavigator.router.getStateForAction(action, previousNavState) || self.state
-      self.fireSubscribers(action, previousNavState, self.state)
-      return true
-    },
-
-    /**
-     * Resets the navigation back to the start.
-     */
-    reset() {
-      self.state = DEFAULT_STATE
-    },
-
-    /**
-     * Finds the current route.
-     */
-    findCurrentRoute() {
-      return findCurrentRoute(self.state)
-    },
-  }))
-  .actions(self => ({
-    /**
-     * Navigate to another place.
-     *
-     * @param routeName The route name.
-     */
-    navigateTo(routeName: string) {
-      self.dispatch(NavigationActions.navigate({ routeName }))
-    },
-  }))
-
-export type NavigationStore = Instance<typeof NavigationStoreModel>
diff --git a/IgniteDiffApp/app/navigation/navigation-utilities.tsx b/IgniteDiffApp/app/navigation/navigation-utilities.tsx
new file mode 100644
index 0000000..6f59feb
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/navigation-utilities.tsx
@@ -0,0 +1,127 @@
+import React, { useState, useEffect, useRef } from "react"
+import { BackHandler } from "react-native"
+import { PartialState, NavigationState, NavigationContainerRef } from "@react-navigation/native"
+
+export const RootNavigation = {
+  navigate(name: string) {
+    name // eslint-disable-line no-unused-expressions
+  },
+  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function
+  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function
+  getRootState(): NavigationState {
+    return {} as any
+  },
+}
+
+export const setRootNavigation = (ref: React.RefObject<NavigationContainerRef>) => {
+  for (const method in RootNavigation) {
+    RootNavigation[method] = (...args: any) => {
+      if (ref.current) {
+        return ref.current[method](...args)
+      }
+    }
+  }
+}
+
+/**
+ * Gets the current screen from any navigation state.
+ */
+export function getActiveRouteName(state: NavigationState | PartialState<NavigationState>) {
+  const route = state.routes[state.index]
+
+  // Found the active route -- return the name
+  if (!route.state) return route.name
+
+  // Recursive call to deal with nested routers
+  return getActiveRouteName(route.state)
+}
+
+/**
+ * Hook that handles Android back button presses and forwards those on to
+ * the navigation or allows exiting the app.
+ */
+export function useBackButtonHandler(
+  ref: React.RefObject<NavigationContainerRef>,
+  canExit: (routeName: string) => boolean,
+) {
+  const canExitRef = useRef(canExit)
+
+  useEffect(() => {
+    canExitRef.current = canExit
+  }, [canExit])
+
+  useEffect(() => {
+    // We'll fire this when the back button is pressed on Android.
+    const onBackPress = () => {
+      const navigation = ref.current
+
+      if (navigation == null) {
+        return false
+      }
+
+      // grab the current route
+      const routeName = getActiveRouteName(navigation.getRootState())
+
+      // are we allowed to exit?
+      if (canExitRef.current(routeName)) {
+        // let the system know we've not handled this event
+        return false
+      }
+
+      // we can't exit, so let's turn this into a back action
+      if (navigation.canGoBack()) {
+        navigation.goBack()
+
+        return true
+      }
+
+      return false
+    }
+
+    // Subscribe when we come to life
+    BackHandler.addEventListener("hardwareBackPress", onBackPress)
+
+    // Unsubscribe when we're done
+    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
+  }, [ref])
+}
+
+/**
+ * Custom hook for persisting navigation state.
+ */
+export function useNavigationPersistence(storage: any, persistenceKey: string) {
+  const [initialNavigationState, setInitialNavigationState] = useState()
+  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(true)
+
+  const routeNameRef = useRef()
+  const onNavigationStateChange = state => {
+    const previousRouteName = routeNameRef.current
+    const currentRouteName = getActiveRouteName(state)
+
+    if (previousRouteName !== currentRouteName) {
+      // track screens.
+      __DEV__ && console.tron.log(currentRouteName)
+    }
+
+    // Save the current route name for later comparision
+    routeNameRef.current = currentRouteName
+
+    // Persist state to storage
+    storage.save(persistenceKey, state)
+  }
+
+  const restoreState = async () => {
+    try {
+      const state = await storage.load(persistenceKey)
+      if (state) setInitialNavigationState(state)
+    } finally {
+      setIsRestoringNavigationState(false)
+    }
+  }
+
+  useEffect(() => {
+    if (isRestoringNavigationState) restoreState()
+  }, [isRestoringNavigationState])
+
+  return { onNavigationStateChange, restoreState, initialNavigationState }
+}
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.ts b/IgniteDiffApp/app/navigation/primary-navigator.ts
deleted file mode 100644
index 2f980f5..0000000
--- a/IgniteDiffApp/app/navigation/primary-navigator.ts
+++ /dev/null
@@ -1,22 +0,0 @@
-import { createStackNavigator } from "react-navigation"
-import { WelcomeScreen } from "../screens/welcome-screen"
-import { DemoScreen } from "../screens/demo-screen"
-
-export const PrimaryNavigator = createStackNavigator(
-  {
-    welcome: { screen: WelcomeScreen },
-    demo: { screen: DemoScreen },
-  },
-  {
-    headerMode: "none",
-  },
-)
-
-/**
- * A list of routes from which we're allowed to leave the app when
- * the user presses the back button on Android.
- *
- * Anything not on this list will be a standard `back` action in
- * react-navigation.
- */
-export const exitRoutes: string[] = ["welcome"]
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.tsx b/IgniteDiffApp/app/navigation/primary-navigator.tsx
new file mode 100644
index 0000000..36255b3
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/primary-navigator.tsx
@@ -0,0 +1,56 @@
+/**
+ * This is the navigator you will modify to display the logged-in screens of your app.
+ * You can use RootNavigator to also display an auth flow or other user flows.
+ *
+ * You'll likely spend most of your time in this file.
+ */
+import React from "react"
+
+import { createNativeStackNavigator } from "react-native-screens/native-stack"
+import { WelcomeScreen, DemoScreen } from "../screens"
+
+/**
+ * This type allows TypeScript to know what routes are defined in this navigator
+ * as well as what properties (if any) they might take when navigating to them.
+ *
+ * If no params are allowed, pass through `undefined`. Generally speaking, we
+ * recommend using your MobX-State-Tree store(s) to keep application state
+ * rather than passing state through navigation params.
+ *
+ * For more information, see this documentation:
+ *   https://reactnavigation.org/docs/params/
+ *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
+ */
+export type PrimaryParamList = {
+  welcome: undefined
+  demo: undefined
+}
+
+// Documentation: https://github.com/software-mansion/react-native-screens/tree/master/native-stack
+const Stack = createNativeStackNavigator<PrimaryParamList>()
+
+export function PrimaryNavigator() {
+  return (
+    <Stack.Navigator
+      screenOptions={{
+        headerShown: false,
+        gestureEnabled: true,
+      }}
+    >
+      <Stack.Screen name="welcome" component={WelcomeScreen} />
+      <Stack.Screen name="demo" component={DemoScreen} />
+    </Stack.Navigator>
+  )
+}
+
+/**
+ * A list of routes from which we're allowed to leave the app when
+ * the user presses the back button on Android.
+ *
+ * Anything not on this list will be a standard `back` action in
+ * react-navigation.
+ *
+ * `canExit` is used in ./app/app.tsx in the `useBackButtonHandler` hook.
+ */
+const exitRoutes = ["welcome"]
+export const canExit = (routeName: string) => exitRoutes.includes(routeName)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.ts b/IgniteDiffApp/app/navigation/root-navigator.ts
deleted file mode 100644
index a2fe3f1..0000000
--- a/IgniteDiffApp/app/navigation/root-navigator.ts
+++ /dev/null
@@ -1,12 +0,0 @@
-import { createStackNavigator } from "react-navigation"
-import { PrimaryNavigator } from "./primary-navigator"
-
-export const RootNavigator = createStackNavigator(
-  {
-    primaryStack: { screen: PrimaryNavigator },
-  },
-  {
-    headerMode: "none",
-    navigationOptions: { gesturesEnabled: false },
-  },
-)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.tsx b/IgniteDiffApp/app/navigation/root-navigator.tsx
new file mode 100644
index 0000000..2016685
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/root-navigator.tsx
@@ -0,0 +1,61 @@
+/**
+ * The root navigator is used to switch between major navigation flows of your app.
+ * Generally speaking, it will contain an auth flow (registration, login, forgot password)
+ * and a "main" flow (which is contained in your PrimaryNavigator) which the user
+ * will use once logged in.
+ */
+import React from "react"
+import { NavigationContainer, NavigationContainerRef } from "@react-navigation/native"
+
+import { createNativeStackNavigator } from "react-native-screens/native-stack"
+import { PrimaryNavigator } from "./primary-navigator"
+
+/**
+ * This type allows TypeScript to know what routes are defined in this navigator
+ * as well as what properties (if any) they might take when navigating to them.
+ *
+ * We recommend using MobX-State-Tree store(s) to handle state rather than navigation params.
+ *
+ * For more information, see this documentation:
+ *   https://reactnavigation.org/docs/params/
+ *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
+ */
+export type RootParamList = {
+  primaryStack: undefined
+}
+
+const Stack = createNativeStackNavigator<RootParamList>()
+
+const RootStack = () => {
+  return (
+    <Stack.Navigator
+      screenOptions={{
+        headerShown: false,
+        gestureEnabled: true,
+
+        stackPresentation: "modal",
+      }}
+    >
+      <Stack.Screen
+        name="primaryStack"
+        component={PrimaryNavigator}
+        options={{
+          headerShown: false,
+        }}
+      />
+    </Stack.Navigator>
+  )
+}
+
+export const RootNavigator = React.forwardRef<
+  NavigationContainerRef,
+  Partial<React.ComponentProps<typeof NavigationContainer>>
+>((props, ref) => {
+  return (
+    <NavigationContainer {...props} ref={ref}>
+      <RootStack />
+    </NavigationContainer>
+  )
+})
+
+RootNavigator.displayName = "RootNavigator"
diff --git a/IgniteDiffApp/app/navigation/stateful-navigator.tsx b/IgniteDiffApp/app/navigation/stateful-navigator.tsx
deleted file mode 100644
index 9c8ca70..0000000
--- a/IgniteDiffApp/app/navigation/stateful-navigator.tsx
+++ /dev/null
@@ -1,25 +0,0 @@
-import * as React from "react"
-import { observer } from "mobx-react-lite"
-// @ts-ignore: until they update @type/react-navigation
-import { getNavigation, NavigationScreenProp, NavigationState } from "react-navigation"
-import { useStores } from "../models/root-store"
-import { RootNavigator } from "./root-navigator"
-
-let currentNavigation: NavigationScreenProp<NavigationState> | undefined
-
-export const StatefulNavigator: React.FunctionComponent<{}> = observer(() => {
-  const {
-    navigationStore: { state, dispatch, actionSubscribers },
-  } = useStores()
-
-  currentNavigation = getNavigation(
-    RootNavigator.router,
-    state,
-    dispatch,
-    actionSubscribers(),
-    {},
-    () => currentNavigation,
-  )
-
-  return <RootNavigator navigation={currentNavigation} />
-})
diff --git a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
index da79d06..b0146ff 100644
--- a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
+++ b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
@@ -1,16 +1,13 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { Image, ImageStyle, Platform, TextStyle, View, ViewStyle } from "react-native"
-import { NavigationScreenProps } from "react-navigation"
-import { Screen } from "../../components/screen"
-import { Text } from "../../components/text"
-import { Button } from "../../components/button"
-import { Wallpaper } from "../../components/wallpaper"
-import { Header } from "../../components/header"
+import { useNavigation } from "@react-navigation/native"
+import { observer } from "mobx-react-lite"
+import { BulletItem, Button, Header, Text, Screen, Wallpaper } from "../../components"
 import { color, spacing } from "../../theme"
-import { logoIgnite, heart } from "./"
-import { BulletItem } from "../../components/bullet-item"
 import { Api } from "../../services/api"
 import { save } from "../../utils/storage"
+export const logoIgnite = require("./logo-ignite.png")
+export const heart = require("./heart.png")
 
 const FULL: ViewStyle = { flex: 1 }
 const CONTAINER: ViewStyle = {
@@ -80,10 +77,9 @@ const HINT: TextStyle = {
   marginVertical: spacing[2],
 }
 
-export interface DemoScreenProps extends NavigationScreenProps<{}> {}
-
-export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
-  const goBack = React.useMemo(() => () => props.navigation.goBack(null), [props.navigation])
+export const DemoScreen: Component = observer(function DemoScreen() {
+  const navigation = useNavigation()
+  const goBack = () => navigation.goBack()
 
   const demoReactotron = React.useMemo(
     () => async () => {
@@ -103,7 +99,9 @@ export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
               },
             },
           },
-          functionNames: function hello() {},
+          functionNames: function hello() {
+            /* dummy function */
+          },
         },
         preview: "More control with display()",
         important: true,
@@ -156,4 +154,4 @@ export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
       </Screen>
     </View>
   )
-}
+})
diff --git a/IgniteDiffApp/app/screens/demo-screen/index.ts b/IgniteDiffApp/app/screens/demo-screen/index.ts
deleted file mode 100644
index 7108f30..0000000
--- a/IgniteDiffApp/app/screens/demo-screen/index.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export * from "./demo-screen"
-export const logoIgnite = require("./logo-ignite.png")
-export const heart = require("./heart.png")
diff --git a/IgniteDiffApp/app/screens/index.ts b/IgniteDiffApp/app/screens/index.ts
new file mode 100644
index 0000000..7f8af77
--- /dev/null
+++ b/IgniteDiffApp/app/screens/index.ts
@@ -0,0 +1,2 @@
+export * from "./welcome-screen/welcome-screen"
+export * from "./demo-screen/demo-screen"
diff --git a/IgniteDiffApp/app/screens/welcome-screen/index.ts b/IgniteDiffApp/app/screens/welcome-screen/index.ts
deleted file mode 100644
index 680fba4..0000000
--- a/IgniteDiffApp/app/screens/welcome-screen/index.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-export * from "./welcome-screen"
-export const bowserLogo = require("./bowser.png")
diff --git a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
index 57d54da..c9093f6 100644
--- a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
+++ b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
@@ -1,13 +1,10 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { View, Image, ViewStyle, TextStyle, ImageStyle, SafeAreaView } from "react-native"
-import { NavigationScreenProps } from "react-navigation"
-import { Text } from "../../components/text"
-import { Button } from "../../components/button"
-import { Screen } from "../../components/screen"
-import { Wallpaper } from "../../components/wallpaper"
-import { Header } from "../../components/header"
+import { useNavigation } from "@react-navigation/native"
+import { observer } from "mobx-react-lite"
+import { Button, Header, Screen, Text, Wallpaper } from "../../components"
 import { color, spacing } from "../../theme"
-import { bowserLogo } from "./"
+const bowserLogo = require("./bowser.png")
 
 const FULL: ViewStyle = { flex: 1 }
 const CONTAINER: ViewStyle = {
@@ -78,12 +75,9 @@ const FOOTER_CONTENT: ViewStyle = {
   paddingHorizontal: spacing[4],
 }
 
-export interface WelcomeScreenProps extends NavigationScreenProps<{}> {}
-
-export const WelcomeScreen: React.FunctionComponent<WelcomeScreenProps> = props => {
-  const nextScreen = React.useMemo(() => () => props.navigation.navigate("demo"), [
-    props.navigation,
-  ])
+export const WelcomeScreen: Component = observer(function WelcomeScreen() {
+  const navigation = useNavigation()
+  const nextScreen = () => navigation.navigate("demo")
 
   return (
     <View testID="WelcomeScreen" style={FULL}>
@@ -119,4 +113,4 @@ export const WelcomeScreen: React.FunctionComponent<WelcomeScreenProps> = props
       </SafeAreaView>
     </View>
   )
-}
+})
diff --git a/IgniteDiffApp/app/services/api/api-config.ts b/IgniteDiffApp/app/services/api/api-config.ts
index 1fec60e..3061563 100644
--- a/IgniteDiffApp/app/services/api/api-config.ts
+++ b/IgniteDiffApp/app/services/api/api-config.ts
@@ -1,4 +1,7 @@
-import { API_URL } from "react-native-dotenv"
+// Use this import if you want to use "env.js" file
+// const { API_URL } = require("../../config/env")
+// Or just specify it directly like this:
+const API_URL = "http://example.com"
 
 /**
  * The options used to configure the API.
diff --git a/IgniteDiffApp/app/services/reactotron/reactotron.ts b/IgniteDiffApp/app/services/reactotron/reactotron.ts
index 51e2c79..94af9c7 100644
--- a/IgniteDiffApp/app/services/reactotron/reactotron.ts
+++ b/IgniteDiffApp/app/services/reactotron/reactotron.ts
@@ -5,6 +5,7 @@ import { onSnapshot } from "mobx-state-tree"
 import { ReactotronConfig, DEFAULT_REACTOTRON_CONFIG } from "./reactotron-config"
 import { mst } from "reactotron-mst"
 import { clear } from "../../utils/storage"
+import { RootNavigation } from "../../navigation"
 
 // Teach TypeScript about the bad things we want to do.
 declare global {
@@ -150,12 +151,22 @@ export class Reactotron {
       })
 
       Tron.onCustomCommand({
-        title: "Reset Navigation Store",
-        description: "Resets the navigation store",
+        title: "Reset Navigation State",
+        description: "Resets the navigation state",
         command: "resetNavigation",
         handler: () => {
-          console.tron.log("resetting navigation store")
-          this.rootStore.navigationStore.reset()
+          console.tron.log("resetting navigation state")
+          RootNavigation.resetRoot({ routes: [] })
+        },
+      })
+
+      Tron.onCustomCommand({
+        title: "Go Back",
+        description: "Goes back",
+        command: "goBack",
+        handler: () => {
+          console.tron.log("Going back")
+          RootNavigation.goBack()
         },
       })
 
diff --git a/IgniteDiffApp/app/theme/spacing.ts b/IgniteDiffApp/app/theme/spacing.ts
index 8f3a556..b1b7935 100644
--- a/IgniteDiffApp/app/theme/spacing.ts
+++ b/IgniteDiffApp/app/theme/spacing.ts
@@ -1,7 +1,7 @@
 /**
  * NOTE TO DEVS:
  *
- * Spacing should consistent and whitespace thought of as a first class technique up
+ * Spacing should be consistent and whitespace thought of as a first class technique up
  * there with color and typefaces.
  *
  * Which type of scale you use is based on the design.
diff --git a/IgniteDiffApp/app/utils/ignore-warnings.ts b/IgniteDiffApp/app/utils/ignore-warnings.ts
new file mode 100644
index 0000000..60db24e
--- /dev/null
+++ b/IgniteDiffApp/app/utils/ignore-warnings.ts
@@ -0,0 +1,11 @@
+/**
+ * Ignore some yellowbox warnings. Some of these are for deprecated functions
+ * that we haven't gotten around to replacing yet.
+ */
+import { YellowBox } from "react-native"
+
+YellowBox.ignoreWarnings([
+  "componentWillMount is deprecated",
+  "componentWillReceiveProps is deprecated",
+  "Require cycle:",
+])
diff --git a/IgniteDiffApp/app/utils/keychain.ts b/IgniteDiffApp/app/utils/keychain.ts
index b6e4bf2..34774bb 100644
--- a/IgniteDiffApp/app/utils/keychain.ts
+++ b/IgniteDiffApp/app/utils/keychain.ts
@@ -25,8 +25,8 @@ export async function load(server?: string) {
   if (server) {
     const creds = await ReactNativeKeychain.getInternetCredentials(server)
     return {
-      username: creds.username,
-      password: creds.password,
+      username: creds ? creds.username : null,
+      password: creds ? creds.password : null,
       server,
     }
   } else {
diff --git a/IgniteDiffApp/app/utils/storage/storage.test.ts b/IgniteDiffApp/app/utils/storage/storage.test.ts
index bbee423..b93ac04 100644
--- a/IgniteDiffApp/app/utils/storage/storage.test.ts
+++ b/IgniteDiffApp/app/utils/storage/storage.test.ts
@@ -1,4 +1,5 @@
 import AsyncStorage from "@react-native-community/async-storage"
+
 import { load, loadString, save, saveString, clear, remove } from "./storage"
 
 // fixtures
diff --git a/IgniteDiffApp/babel.config.js b/IgniteDiffApp/babel.config.js
index 5d82a08..ceacb2b 100644
--- a/IgniteDiffApp/babel.config.js
+++ b/IgniteDiffApp/babel.config.js
@@ -1,5 +1,5 @@
 module.exports = {
-  presets: ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
+  presets: ["module:metro-react-native-babel-preset"],
   env: {
     production: {},
   },
diff --git a/IgniteDiffApp/ignite/ignite.json b/IgniteDiffApp/ignite/ignite.json
index bcfbc2c..b9bb9d6 100644
--- a/IgniteDiffApp/ignite/ignite.json
+++ b/IgniteDiffApp/ignite/ignite.json
@@ -1,6 +1,7 @@
 {
+  "navigation": "react-navigation",
   "generators": {},
-  "createdWith": "3.1.6",
+  "createdWith": "3.5.1",
   "boilerplate": "ignite-bowser",
-  "boilerplateVersion": "4.8.0"
+  "boilerplateVersion": "5.1.2"
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/index.js b/IgniteDiffApp/index.js
index 461a75b..7d7bb43 100644
--- a/IgniteDiffApp/index.js
+++ b/IgniteDiffApp/index.js
@@ -7,5 +7,24 @@
 // side effect of breaking other tooling like mobile-center and react-native-rename.
 //
 // It's easier just to leave it here.
+import App from "./app/app.tsx"
+import { AppRegistry } from "react-native"
 
-import "./app/app.tsx"
+/**
+ * This needs to match what's found in your app_delegate.m and MainActivity.java.
+ */
+const APP_NAME = "IgniteDiffApp"
+
+// Should we show storybook instead of our app?
+//
+// ⚠️ Leave this as `false` when checking into git.
+const SHOW_STORYBOOK = false
+
+let RootComponent = App
+if (__DEV__ && SHOW_STORYBOOK) {
+  // Only include Storybook if we're in dev mode
+  const { StorybookUIRoot } = require("./storybook")
+  RootComponent = StorybookUIRoot
+}
+
+AppRegistry.registerComponent(APP_NAME, () => RootComponent)
diff --git a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
index f93fc41..d189b71 100644
--- a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
+++ b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
@@ -5,9 +5,10 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
-		0074A0C242D080FBB590D214 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 700A1B027D4C8A0A3942FC52 /* libPods-IgniteDiffApp-tvOS.a */; };
 		00E356F31AD99517003FC87E /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
+		115730DA256056AA32E7C46C /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BDAA3AAEC50986D24D2F3993 /* libPods-IgniteDiffApp-tvOS.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
@@ -16,27 +17,27 @@
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		2DCD954D1E0B4F2C00145EB5 /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
-		6B5AFB51247060E05B6CEE4F /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2BA09117B365FADAEC6B46A4 /* libPods-IgniteDiffApp-tvOSTests.a */; };
-		8765298CCDA7578A7066EEB6 /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 48CB84437D662C02CA972171 /* libPods-IgniteDiffAppTests.a */; };
-		9E6FA1DACC5D9D9706330EB1 /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B9CC431BCDF83A05F9E88588 /* libPods-IgniteDiffApp.a */; };
-		23A9FDBA532449EB87B92106 /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BB1083D5C0574FBB965FC5C4 /* Montserrat-Black.ttf */; };
-		5910842224BF4E2F98982CF4 /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 64D1719C688D4D1FBAA6C5C3 /* Montserrat-BlackItalic.ttf */; };
-		0A4BC99F21894A7D9B63A234 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 051C960D42AA4FE8BEE78714 /* Montserrat-Bold.ttf */; };
-		D5F831A0DC1340CD83D2E925 /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B715E9A73F364EF984F111D0 /* Montserrat-BoldItalic.ttf */; };
-		044753EFED9748D3B0B930E6 /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E73DA24050BE437593D1AD9E /* Montserrat-ExtraBold.ttf */; };
-		1D9004C316834E438418CF8D /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9322D8F4CC8B41349FB316BD /* Montserrat-ExtraBoldItalic.ttf */; };
-		C060882F2C9148AC86A7B066 /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 64CA2D33CED54DB98FE12690 /* Montserrat-ExtraLight.ttf */; };
-		1D93D2DC690648138D7DA084 /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2DB449E3085A43A388E98EDE /* Montserrat-ExtraLightItalic.ttf */; };
-		4B27D13D9FDD4CCB9D70098F /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 800F3B48F5244892AB8293A2 /* Montserrat-Italic.ttf */; };
-		6E3168A8FA6644B284BA8875 /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 98CF1A43A3554705841A5D78 /* Montserrat-Light.ttf */; };
-		2B0955BB447343A4AD5C4BAD /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BC9E2A7B65EF49C5AED44082 /* Montserrat-LightItalic.ttf */; };
-		ED5B64396DD84A11BE6ADEA3 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E6E199F8757041FE978DAE83 /* Montserrat-Medium.ttf */; };
-		8868F0D9CF92446885583806 /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0FE4DF1358C1403F80B57366 /* Montserrat-MediumItalic.ttf */; };
-		EDEBDF7B294440CABE762604 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 03738BE827D047B0A47CB576 /* Montserrat-Regular.ttf */; };
-		EE600BB0D5D24119850FE69E /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = FA2DDC1D5DBD41EDB7CC7B14 /* Montserrat-SemiBold.ttf */; };
-		9100E7F1F08F460183553B56 /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6BDE44540C174D5EB69BE7DD /* Montserrat-SemiBoldItalic.ttf */; };
-		DFD2084A44CA4D21A69B933C /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 80706A37E8BD4EAB81EA9A98 /* Montserrat-Thin.ttf */; };
-		7184FE85D2FB4242B46145EF /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 35748240BA3949C594253E56 /* Montserrat-ThinItalic.ttf */; };
+		5EA5FB75FA93C6FA2A2C4435 /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CA3A680E0B10595D56BB7A6F /* libPods-IgniteDiffApp.a */; };
+		8F4DAB67FA98FD120518DB19 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BB59F472D86A98AB32436095 /* libPods-IgniteDiffApp-tvOSTests.a */; };
+		C5D4A9F8FBE6433E02A639DF /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6B8701784FB4229E78DEFDD0 /* libPods-IgniteDiffAppTests.a */; };
+		80BE3161710B4AEFB26A2AB3 /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = DFF0AF96A5E14A06AD837CB6 /* Montserrat-Black.ttf */; };
+		49F015A99D944EFF82727BCE /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 65CDE1A1346641E698502920 /* Montserrat-BlackItalic.ttf */; };
+		2BB0854F15A544B9B835E005 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B42414093E184137B0B91CE0 /* Montserrat-Bold.ttf */; };
+		4089F68E32034126999A763A /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B15B45A43E41473EA7C79A95 /* Montserrat-BoldItalic.ttf */; };
+		4D4CB4F4E5094A00A9638110 /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9A9F7C3499A34A9D9972B45E /* Montserrat-ExtraBold.ttf */; };
+		DA5BAA86A2F6492C8CB9E164 /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1FFA851292424480B330EAAC /* Montserrat-ExtraBoldItalic.ttf */; };
+		EDBB9588A4FF4408B83781C5 /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BAF1BDC5BEB747E482A2A4BD /* Montserrat-ExtraLight.ttf */; };
+		5D82858A6FDB490F957FB37E /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4F98EE948E20493A97B56F06 /* Montserrat-ExtraLightItalic.ttf */; };
+		B2AE5E6338F8484EBDDF9E53 /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4EED44CB38F84C9AB7F57BD0 /* Montserrat-Italic.ttf */; };
+		CBCCB46A744D422DB8B9CFF6 /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 87193E7A42F743F0B263AE26 /* Montserrat-Light.ttf */; };
+		A2483C0F4A0940FE9B9F3230 /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = DA6DCDEE81894C2780C0BDBB /* Montserrat-LightItalic.ttf */; };
+		3C41C789957B445EB05A7EFE /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4CF025630EEE40E5A5E522EB /* Montserrat-Medium.ttf */; };
+		19372F33A87A4ED29B0605C8 /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8C68782D04C04DE0BE337C32 /* Montserrat-MediumItalic.ttf */; };
+		4FAFCBAED159430F991F44D8 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8978B0EB8D014A12BC39B268 /* Montserrat-Regular.ttf */; };
+		A79E64D37D7C4DD6822AC2F5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1D4ED4AA9E584EA3BE231661 /* Montserrat-SemiBold.ttf */; };
+		14EBDA2A918340AFA144C5DB /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E2AFDC86B99E4E31BEF0C690 /* Montserrat-SemiBoldItalic.ttf */; };
+		616CA2DA3244485E92E53BA2 /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A97AF426E58D4E1A89CC80FD /* Montserrat-Thin.ttf */; };
+		2E621F5CEC0E4F22B0658458 /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 04B3E1B8287446BF94B0CE4C /* Montserrat-ThinItalic.ttf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -61,7 +62,6 @@
 		00E356EE1AD99517003FC87E /* IgniteDiffAppTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = IgniteDiffAppTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = IgniteDiffAppTests.m; sourceTree = "<group>"; };
-		119F9D707EC4841F119391F9 /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* IgniteDiffApp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = IgniteDiffApp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = IgniteDiffApp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = IgniteDiffApp/AppDelegate.m; sourceTree = "<group>"; };
@@ -69,39 +69,40 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = IgniteDiffApp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = IgniteDiffApp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = IgniteDiffApp/main.m; sourceTree = "<group>"; };
-		1542D51D1800D0820ACFD23E /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
-		2BA09117B365FADAEC6B46A4 /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		2B5A40E0B64D8061328CDAC2 /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* IgniteDiffApp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "IgniteDiffApp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* IgniteDiffApp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "IgniteDiffApp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
-		48CB84437D662C02CA972171 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		6C2F53E5AC33EAF8D50BBE79 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		700A1B027D4C8A0A3942FC52 /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		89B217A4035CDE8F3251A48B /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		A9FAC1F45D6A3CC3F49A02C1 /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
-		AD26729ECC5E8C5AF6A41A3B /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		B4A40AB866F775C0254E5A8F /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
-		B9CC431BCDF83A05F9E88588 /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		C404034E93BCF2367820FA81 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
+		3699CCA3EF934D91B01AA500 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
+		6B8701784FB4229E78DEFDD0 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		77B457FDB4D019E534187E0E /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
+		81D3A08435F3AB6AAD1A3591 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
+		B6CD803295BBD8E9C8034716 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		BB59F472D86A98AB32436095 /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		BDAA3AAEC50986D24D2F3993 /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		BE96DBC3F4BE069C5216FF4C /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
+		CA3A680E0B10595D56BB7A6F /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		D2FFBB85577889C10C5C2FFA /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
 		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
-		BB1083D5C0574FBB965FC5C4 /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		64D1719C688D4D1FBAA6C5C3 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		051C960D42AA4FE8BEE78714 /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		B715E9A73F364EF984F111D0 /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		E73DA24050BE437593D1AD9E /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		9322D8F4CC8B41349FB316BD /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		64CA2D33CED54DB98FE12690 /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		2DB449E3085A43A388E98EDE /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		800F3B48F5244892AB8293A2 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		98CF1A43A3554705841A5D78 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		BC9E2A7B65EF49C5AED44082 /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		E6E199F8757041FE978DAE83 /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		0FE4DF1358C1403F80B57366 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		03738BE827D047B0A47CB576 /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		FA2DDC1D5DBD41EDB7CC7B14 /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		6BDE44540C174D5EB69BE7DD /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		80706A37E8BD4EAB81EA9A98 /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		35748240BA3949C594253E56 /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		FD9B8DC4CB380882C32D97AC /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
+		DFF0AF96A5E14A06AD837CB6 /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		65CDE1A1346641E698502920 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		B42414093E184137B0B91CE0 /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		B15B45A43E41473EA7C79A95 /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		9A9F7C3499A34A9D9972B45E /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		1FFA851292424480B330EAAC /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		BAF1BDC5BEB747E482A2A4BD /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		4F98EE948E20493A97B56F06 /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		4EED44CB38F84C9AB7F57BD0 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		87193E7A42F743F0B263AE26 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		DA6DCDEE81894C2780C0BDBB /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		4CF025630EEE40E5A5E522EB /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		8C68782D04C04DE0BE337C32 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		8978B0EB8D014A12BC39B268 /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		1D4ED4AA9E584EA3BE231661 /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		E2AFDC86B99E4E31BEF0C690 /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		A97AF426E58D4E1A89CC80FD /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		04B3E1B8287446BF94B0CE4C /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -109,7 +110,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				8765298CCDA7578A7066EEB6 /* libPods-IgniteDiffAppTests.a in Frameworks */,
+				C5D4A9F8FBE6433E02A639DF /* libPods-IgniteDiffAppTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -117,7 +118,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				9E6FA1DACC5D9D9706330EB1 /* libPods-IgniteDiffApp.a in Frameworks */,
+				5EA5FB75FA93C6FA2A2C4435 /* libPods-IgniteDiffApp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -125,7 +126,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				0074A0C242D080FBB590D214 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
+				115730DA256056AA32E7C46C /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -133,7 +134,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				6B5AFB51247060E05B6CEE4F /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
+				8F4DAB67FA98FD120518DB19 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -176,25 +177,25 @@
 			children = (
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
 				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
-				B9CC431BCDF83A05F9E88588 /* libPods-IgniteDiffApp.a */,
-				700A1B027D4C8A0A3942FC52 /* libPods-IgniteDiffApp-tvOS.a */,
-				2BA09117B365FADAEC6B46A4 /* libPods-IgniteDiffApp-tvOSTests.a */,
-				48CB84437D662C02CA972171 /* libPods-IgniteDiffAppTests.a */,
+				CA3A680E0B10595D56BB7A6F /* libPods-IgniteDiffApp.a */,
+				BDAA3AAEC50986D24D2F3993 /* libPods-IgniteDiffApp-tvOS.a */,
+				BB59F472D86A98AB32436095 /* libPods-IgniteDiffApp-tvOSTests.a */,
+				6B8701784FB4229E78DEFDD0 /* libPods-IgniteDiffAppTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		49107870AEB6D6C57698B536 /* Pods */ = {
+		34DECEDEA409C8A0F5932493 /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				A9FAC1F45D6A3CC3F49A02C1 /* Pods-IgniteDiffApp.debug.xcconfig */,
-				1542D51D1800D0820ACFD23E /* Pods-IgniteDiffApp.release.xcconfig */,
-				89B217A4035CDE8F3251A48B /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
-				AD26729ECC5E8C5AF6A41A3B /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
-				6C2F53E5AC33EAF8D50BBE79 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
-				C404034E93BCF2367820FA81 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
-				B4A40AB866F775C0254E5A8F /* Pods-IgniteDiffAppTests.debug.xcconfig */,
-				119F9D707EC4841F119391F9 /* Pods-IgniteDiffAppTests.release.xcconfig */,
+				2B5A40E0B64D8061328CDAC2 /* Pods-IgniteDiffApp.debug.xcconfig */,
+				FD9B8DC4CB380882C32D97AC /* Pods-IgniteDiffApp.release.xcconfig */,
+				BE96DBC3F4BE069C5216FF4C /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
+				B6CD803295BBD8E9C8034716 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
+				3699CCA3EF934D91B01AA500 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
+				D2FFBB85577889C10C5C2FFA /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
+				81D3A08435F3AB6AAD1A3591 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
+				77B457FDB4D019E534187E0E /* Pods-IgniteDiffAppTests.release.xcconfig */,
 			);
 			name = Pods;
 			path = Pods;
@@ -215,8 +216,8 @@
 				00E356EF1AD99517003FC87E /* IgniteDiffAppTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				49107870AEB6D6C57698B536 /* Pods */,
-				B850C72F6EEA4C76A914B53C /* Resources */,
+				34DECEDEA409C8A0F5932493 /* Pods */,
+				700D72990A964CAA8938664C /* Resources */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -234,27 +235,27 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		B850C72F6EEA4C76A914B53C /* Resources */ = {
+		700D72990A964CAA8938664C /* Resources */ = {
 			isa = "PBXGroup";
 			children = (
-				BB1083D5C0574FBB965FC5C4 /* Montserrat-Black.ttf */,
-				64D1719C688D4D1FBAA6C5C3 /* Montserrat-BlackItalic.ttf */,
-				051C960D42AA4FE8BEE78714 /* Montserrat-Bold.ttf */,
-				B715E9A73F364EF984F111D0 /* Montserrat-BoldItalic.ttf */,
-				E73DA24050BE437593D1AD9E /* Montserrat-ExtraBold.ttf */,
-				9322D8F4CC8B41349FB316BD /* Montserrat-ExtraBoldItalic.ttf */,
-				64CA2D33CED54DB98FE12690 /* Montserrat-ExtraLight.ttf */,
-				2DB449E3085A43A388E98EDE /* Montserrat-ExtraLightItalic.ttf */,
-				800F3B48F5244892AB8293A2 /* Montserrat-Italic.ttf */,
-				98CF1A43A3554705841A5D78 /* Montserrat-Light.ttf */,
-				BC9E2A7B65EF49C5AED44082 /* Montserrat-LightItalic.ttf */,
-				E6E199F8757041FE978DAE83 /* Montserrat-Medium.ttf */,
-				0FE4DF1358C1403F80B57366 /* Montserrat-MediumItalic.ttf */,
-				03738BE827D047B0A47CB576 /* Montserrat-Regular.ttf */,
-				FA2DDC1D5DBD41EDB7CC7B14 /* Montserrat-SemiBold.ttf */,
-				6BDE44540C174D5EB69BE7DD /* Montserrat-SemiBoldItalic.ttf */,
-				80706A37E8BD4EAB81EA9A98 /* Montserrat-Thin.ttf */,
-				35748240BA3949C594253E56 /* Montserrat-ThinItalic.ttf */,
+				DFF0AF96A5E14A06AD837CB6 /* Montserrat-Black.ttf */,
+				65CDE1A1346641E698502920 /* Montserrat-BlackItalic.ttf */,
+				B42414093E184137B0B91CE0 /* Montserrat-Bold.ttf */,
+				B15B45A43E41473EA7C79A95 /* Montserrat-BoldItalic.ttf */,
+				9A9F7C3499A34A9D9972B45E /* Montserrat-ExtraBold.ttf */,
+				1FFA851292424480B330EAAC /* Montserrat-ExtraBoldItalic.ttf */,
+				BAF1BDC5BEB747E482A2A4BD /* Montserrat-ExtraLight.ttf */,
+				4F98EE948E20493A97B56F06 /* Montserrat-ExtraLightItalic.ttf */,
+				4EED44CB38F84C9AB7F57BD0 /* Montserrat-Italic.ttf */,
+				87193E7A42F743F0B263AE26 /* Montserrat-Light.ttf */,
+				DA6DCDEE81894C2780C0BDBB /* Montserrat-LightItalic.ttf */,
+				4CF025630EEE40E5A5E522EB /* Montserrat-Medium.ttf */,
+				8C68782D04C04DE0BE337C32 /* Montserrat-MediumItalic.ttf */,
+				8978B0EB8D014A12BC39B268 /* Montserrat-Regular.ttf */,
+				1D4ED4AA9E584EA3BE231661 /* Montserrat-SemiBold.ttf */,
+				E2AFDC86B99E4E31BEF0C690 /* Montserrat-SemiBoldItalic.ttf */,
+				A97AF426E58D4E1A89CC80FD /* Montserrat-Thin.ttf */,
+				04B3E1B8287446BF94B0CE4C /* Montserrat-ThinItalic.ttf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
@@ -267,7 +268,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "IgniteDiffAppTests" */;
 			buildPhases = (
-				FA95E630619994300717E7D7 /* [CP] Check Pods Manifest.lock */,
+				2F0853FEA26AC99DE44C1F18 /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -286,7 +287,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "IgniteDiffApp" */;
 			buildPhases = (
-				62C91FA9F739BD7A4A04C400 /* [CP] Check Pods Manifest.lock */,
+				5D7A19652077239435769482 /* [CP] Check Pods Manifest.lock */,
 				FD10A7F022414F080027D42C /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
@@ -306,7 +307,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOS" */;
 			buildPhases = (
-				A114154C3D754856774B3B87 /* [CP] Check Pods Manifest.lock */,
+				15A84931CCD88A2E922E9361 /* [CP] Check Pods Manifest.lock */,
 				FD10A7F122414F3F0027D42C /* Start Packager */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
@@ -326,7 +327,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOSTests" */;
 			buildPhases = (
-				F5EA0A25FC0FBFB3F8B18342 /* [CP] Check Pods Manifest.lock */,
+				884300C09B71A2FC683FE88F /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -400,24 +401,24 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				23A9FDBA532449EB87B92106 /* Montserrat-Black.ttf in Resources */,
-				5910842224BF4E2F98982CF4 /* Montserrat-BlackItalic.ttf in Resources */,
-				0A4BC99F21894A7D9B63A234 /* Montserrat-Bold.ttf in Resources */,
-				D5F831A0DC1340CD83D2E925 /* Montserrat-BoldItalic.ttf in Resources */,
-				044753EFED9748D3B0B930E6 /* Montserrat-ExtraBold.ttf in Resources */,
-				1D9004C316834E438418CF8D /* Montserrat-ExtraBoldItalic.ttf in Resources */,
-				C060882F2C9148AC86A7B066 /* Montserrat-ExtraLight.ttf in Resources */,
-				1D93D2DC690648138D7DA084 /* Montserrat-ExtraLightItalic.ttf in Resources */,
-				4B27D13D9FDD4CCB9D70098F /* Montserrat-Italic.ttf in Resources */,
-				6E3168A8FA6644B284BA8875 /* Montserrat-Light.ttf in Resources */,
-				2B0955BB447343A4AD5C4BAD /* Montserrat-LightItalic.ttf in Resources */,
-				ED5B64396DD84A11BE6ADEA3 /* Montserrat-Medium.ttf in Resources */,
-				8868F0D9CF92446885583806 /* Montserrat-MediumItalic.ttf in Resources */,
-				EDEBDF7B294440CABE762604 /* Montserrat-Regular.ttf in Resources */,
-				EE600BB0D5D24119850FE69E /* Montserrat-SemiBold.ttf in Resources */,
-				9100E7F1F08F460183553B56 /* Montserrat-SemiBoldItalic.ttf in Resources */,
-				DFD2084A44CA4D21A69B933C /* Montserrat-Thin.ttf in Resources */,
-				7184FE85D2FB4242B46145EF /* Montserrat-ThinItalic.ttf in Resources */,
+				80BE3161710B4AEFB26A2AB3 /* Montserrat-Black.ttf in Resources */,
+				49F015A99D944EFF82727BCE /* Montserrat-BlackItalic.ttf in Resources */,
+				2BB0854F15A544B9B835E005 /* Montserrat-Bold.ttf in Resources */,
+				4089F68E32034126999A763A /* Montserrat-BoldItalic.ttf in Resources */,
+				4D4CB4F4E5094A00A9638110 /* Montserrat-ExtraBold.ttf in Resources */,
+				DA5BAA86A2F6492C8CB9E164 /* Montserrat-ExtraBoldItalic.ttf in Resources */,
+				EDBB9588A4FF4408B83781C5 /* Montserrat-ExtraLight.ttf in Resources */,
+				5D82858A6FDB490F957FB37E /* Montserrat-ExtraLightItalic.ttf in Resources */,
+				B2AE5E6338F8484EBDDF9E53 /* Montserrat-Italic.ttf in Resources */,
+				CBCCB46A744D422DB8B9CFF6 /* Montserrat-Light.ttf in Resources */,
+				A2483C0F4A0940FE9B9F3230 /* Montserrat-LightItalic.ttf in Resources */,
+				3C41C789957B445EB05A7EFE /* Montserrat-Medium.ttf in Resources */,
+				19372F33A87A4ED29B0605C8 /* Montserrat-MediumItalic.ttf in Resources */,
+				4FAFCBAED159430F991F44D8 /* Montserrat-Regular.ttf in Resources */,
+				A79E64D37D7C4DD6822AC2F5 /* Montserrat-SemiBold.ttf in Resources */,
+				14EBDA2A918340AFA144C5DB /* Montserrat-SemiBoldItalic.ttf in Resources */,
+				616CA2DA3244485E92E53BA2 /* Montserrat-Thin.ttf in Resources */,
+				2E621F5CEC0E4F22B0658458 /* Montserrat-ThinItalic.ttf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -453,43 +454,43 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
+		15A84931CCD88A2E922E9361 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
+			inputFileListPaths = (
+			);
 			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
 			);
-			name = "Bundle React Native Code And Images";
 			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
 		};
-		62C91FA9F739BD7A4A04C400 /* [CP] Check Pods Manifest.lock */ = {
+		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputFileListPaths = (
-			);
 			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
 			);
+			name = "Bundle React Native Code And Images";
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
+			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		A114154C3D754856774B3B87 /* [CP] Check Pods Manifest.lock */ = {
+		2F0853FEA26AC99DE44C1F18 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -504,14 +505,14 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffAppTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		F5EA0A25FC0FBFB3F8B18342 /* [CP] Check Pods Manifest.lock */ = {
+		5D7A19652077239435769482 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -526,14 +527,14 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		FA95E630619994300717E7D7 /* [CP] Check Pods Manifest.lock */ = {
+		884300C09B71A2FC683FE88F /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -548,7 +549,7 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffAppTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -660,7 +661,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = B4A40AB866F775C0254E5A8F /* Pods-IgniteDiffAppTests.debug.xcconfig */;
+			baseConfigurationReference = 81D3A08435F3AB6AAD1A3591 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -683,7 +684,7 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 119F9D707EC4841F119391F9 /* Pods-IgniteDiffAppTests.release.xcconfig */;
+			baseConfigurationReference = 77B457FDB4D019E534187E0E /* Pods-IgniteDiffAppTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
@@ -703,7 +704,7 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = A9FAC1F45D6A3CC3F49A02C1 /* Pods-IgniteDiffApp.debug.xcconfig */;
+			baseConfigurationReference = 2B5A40E0B64D8061328CDAC2 /* Pods-IgniteDiffApp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -723,7 +724,7 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 1542D51D1800D0820ACFD23E /* Pods-IgniteDiffApp.release.xcconfig */;
+			baseConfigurationReference = FD9B8DC4CB380882C32D97AC /* Pods-IgniteDiffApp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -742,7 +743,7 @@
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 89B217A4035CDE8F3251A48B /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
+			baseConfigurationReference = BE96DBC3F4BE069C5216FF4C /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -770,7 +771,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AD26729ECC5E8C5AF6A41A3B /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
+			baseConfigurationReference = B6CD803295BBD8E9C8034716 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -798,7 +799,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 6C2F53E5AC33EAF8D50BBE79 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
+			baseConfigurationReference = 3699CCA3EF934D91B01AA500 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -825,7 +826,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = C404034E93BCF2367820FA81 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
+			baseConfigurationReference = D2FFBB85577889C10C5C2FFA /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index 7a619bf..4944e17 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -7,96 +7,93 @@
     "ios": "react-native run-ios",
     "start": "react-native start",
     "test": "jest",
-    "lint": "eslint index.js app --fix --ext .js,.ts,.tsx",
+    "lint": "eslint index.js app storybook test --fix --ext .js,.ts,.tsx",
     "test:e2e": "detox test -c ios.sim.debug",
     "build:e2e": "detox build -c ios.sim.debug",
     "ci:test:e2e": "detox test -c ios.sim.release -l verbose --cleanup",
     "ci:build:e2e": "detox build -c ios.sim.release",
     "compile": "tsc --noEmit -p . --pretty",
     "format": "npm-run-all format:*",
-    "format:js": "prettier --write {.,**}/*.js",
-    "format:json": "prettier --write {.,**}/*.json",
-    "format:md": "prettier --write {.,**}/*.md",
-    "format:ts": "prettier --write {.,**}/*.{ts,tsx}",
+    "format:js": "prettier --write '**/*.js'",
+    "format:json": "prettier --write '**/*.json'",
+    "format:md": "prettier --write '**/*.md'",
+    "format:ts": "prettier --write '**/*.ts{,x}'",
     "hack:types-react-navigation": "rimraf node_modules/@types/react-navigation/node_modules/@types",
     "hack:types-react-native": "rimraf node_modules/@types/react-native/node_modules/@types",
     "hack:types-react-test-renderer": "rimraf node_modules/@types/react-test-renderer/node_modules/@types",
     "patch": "patch-package",
     "postinstall": "node ./bin/postInstall",
     "prepare": "npm-run-all patch hack:*",
-    "storybook": "storybook start -p 9001 --skip-packager",
+    "storybook": "start-storybook -p 9001 -c ./storybook",
     "adb": "adb reverse tcp:9090 tcp:9090 && adb reverse tcp:3000 tcp:3000 && adb reverse tcp:9001 tcp:9001 && adb reverse tcp:8081 tcp:8081"
   },
   "dependencies": {
-    "@react-native-community/async-storage": "^1.5.1",
-    "apisauce": "1.0.3",
+    "@react-native-community/async-storage": "^1.9.0",
+    "@react-native-community/masked-view": "0.1.5",
+    "@react-navigation/native": "^5.1.5",
+    "apisauce": "1.1.1",
     "i18n-js": "^3.0.11",
     "lodash.throttle": "4.1.1",
-    "mobx": "^4.13.0",
+    "mobx": "^4.15.4",
     "mobx-react-lite": "^1.4.1",
     "mobx-state-tree": "^3.14.1",
-    "ramda": "0.26.1",
+    "ramda": "0.27.0",
     "react": "16.9.0",
-    "react-native": "0.61.2",
-    "react-native-gesture-handler": "^1.3.0",
-    "react-native-keychain": "3.1.3",
+    "react-native": "0.61.5",
+    "react-native-gesture-handler": "^1.5.0",
+    "react-native-keychain": "5.0.1",
     "react-native-localize": "^1.0.0",
-    "react-native-splash-screen": "3.1.1",
-    "react-navigation": "3.11.1",
+    "react-native-safe-area-context": "0.7.3",
+    "react-native-safe-area-view": "1.0.0",
+    "react-native-screens": "^2.5.0",
+    "react-native-splash-screen": "3.2.0",
     "reactotron-mst": "^3.1.1",
     "reactotron-react-native": "^4.0.0-beta.1",
     "validate.js": "0.13.1"
   },
   "devDependencies": {
-    "@babel/core": "^7.6.4",
+    "@babel/core": "^7.10.2",
     "@babel/plugin-proposal-decorators": "^7.0.0",
     "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
-    "@babel/runtime": "^7.6.3",
-    "@emotion/core": "^10.0.15",
-    "@storybook/addon-storyshots": "5.1.11",
-    "@storybook/react-native": "5.1.11",
-    "@types/jest": "24.0.18",
-    "@types/ramda": "0.26.18",
-    "@types/react": "16.8.24",
-    "@types/react-native": "0.60.19",
-    "@types/react-navigation": "3.0.7",
-    "@types/react-test-renderer": "16.8.3",
-    "@typescript-eslint/eslint-plugin": "^1.1.0",
-    "@typescript-eslint/parser": "^1.1.0",
-    "babel-jest": "^24.9.0",
-    "detox": "^14.0.1",
-    "emotion-theming": "^10.0.14",
-    "eslint": "^6.5.1",
+    "@babel/runtime": "^7.10.2",
+    "@storybook/addon-storyshots": "5.3.17",
+    "@storybook/react-native": "5.3.17",
+    "@storybook/react-native-server": "5.3.17",
+    "@types/jest": "25.2.2",
+    "@types/ramda": "0.26.44",
+    "@types/react": "16.9.23",
+    "@types/react-native": "0.61.23",
+    "@types/react-test-renderer": "16.9.2",
+    "@typescript-eslint/eslint-plugin": "^2.24.0",
+    "@typescript-eslint/parser": "^2.24.0",
+    "babel-jest": "^26.0.1",
+    "detox": "^16.0.0",
+    "eslint": "^6.6.0",
     "eslint-config-prettier": "^6.0.0",
-    "eslint-config-standard": "^13.0.1",
+    "eslint-config-standard": "^14.1.0",
     "eslint-plugin-import": "^2.15.0",
-    "eslint-plugin-node": "^9.1.0",
+    "eslint-plugin-node": "^11.0.0",
     "eslint-plugin-promise": "^4.0.1",
     "eslint-plugin-react": "^7.12.4",
     "eslint-plugin-react-native": "^3.6.0",
     "eslint-plugin-standard": "^4.0.0",
-    "ignite-bowser": "4.8.0",
-    "jest": "^24.9.0",
+    "ignite-bowser": "5.1.2",
+    "jest": "25.5.4",
     "jetifier": "^1.6.1",
-    "metro-react-native-babel-preset": "^0.56.0",
+    "metro-react-native-babel-preset": "^0.59.0",
     "npm-run-all": "4.1.5",
-    "patch-package": "6.1.2",
+    "patch-package": "6.2.1",
     "postinstall-prepare": "1.0.1",
-    "prettier": "1.18.2",
-    "react-devtools-core": "3.6.3",
-    "react-native-dotenv": "^0.2.0",
+    "prettier": "1.19.1",
+    "react-devtools-core": "4.5.0",
     "react-powerplug": "1.0.0",
     "react-test-renderer": "16.9.0",
-    "rimraf": "2.6.3",
+    "rimraf": "3.0.2",
     "solidarity": "2.3.1",
-    "typescript": "3.5.3"
+    "typescript": "3.9.3"
   },
   "jest": {
     "preset": "react-native",
-    "moduleNameMapper": {
-      "^[./a-zA-Z0-9$_-]+\\.(bmp|gif|jpg|jpeg|png|psd|svg|webp|ttf|otf)$": "RelativeImageStub",
-      "^React$": "<rootDir>/node_modules/react"
-    },
     "setupFiles": [
       "<rootDir>/node_modules/react-native/jest/setup.js",
       "<rootDir>/test/setup.ts"
@@ -106,7 +103,7 @@
       "/e2e"
     ],
     "transformIgnorePatterns": [
-      "node_modules/(?!(jest-)?react-native|react-native|react-navigation|@react-navigation|@storybook|@react-native-community)"
+      "node_modules/(?!(jest-)?react-native|react-native|@react-navigation|@storybook|@react-native-community)"
     ]
   },
   "prettier": {
@@ -180,6 +177,7 @@
       "react/prop-types": "off",
       "react-native/no-raw-text": 0,
       "space-before-function-paren": 0,
+      "@typescript-eslint/ban-ts-ignore": 0,
       "@typescript-eslint/indent": 0,
       "@typescript-eslint/explicit-member-accessibility": 0,
       "@typescript-eslint/explicit-function-return-type": 0,
diff --git a/IgniteDiffApp/storybook/storybook.tsx b/IgniteDiffApp/storybook/storybook.tsx
index 725be9b..e84d97a 100644
--- a/IgniteDiffApp/storybook/storybook.tsx
+++ b/IgniteDiffApp/storybook/storybook.tsx
@@ -1,23 +1,29 @@
-import React, { useEffect } from "react"
+import React, { useEffect, FunctionComponent } from "react"
 import { getStorybookUI, configure } from "@storybook/react-native"
-import SplashScreen from "react-native-splash-screen"
 
-declare var module
+declare let module
 
 configure(() => {
   require("./storybook-registry")
 }, module)
 
-const StorybookUI = getStorybookUI({ port: 9001, host: "localhost", onDeviceUI: true })
+const StorybookUI = getStorybookUI({
+  port: 9001,
+  host: "localhost",
+  onDeviceUI: true,
 
-export const StorybookUIRoot: React.FunctionComponent = () => {
+  asyncStorage: require("@react-native-community/async-storage").default,
+})
+
+export const StorybookUIRoot: FunctionComponent = () => {
   useEffect(() => {
-    SplashScreen.hide()
-    if (typeof __TEST__ === "undefined" || !__TEST__) {
-      const Reactotron = require("../app/services/reactotron")
-      const reactotron = new Reactotron.Reactotron()
-      reactotron.setup()
-    }
+    ;(async () => {
+      if (typeof __TEST__ === "undefined" || !__TEST__) {
+        const Reactotron = require("../app/services/reactotron")
+        const reactotron = new Reactotron.Reactotron()
+        reactotron.setup()
+      }
+    })()
   }, [])
 
   return <StorybookUI />
diff --git a/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap b/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap
index c25da26..28a8a64 100644
--- a/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap
+++ b/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap
@@ -2913,7 +2913,7 @@ exports[`Storyshots Header Behavior 1`] = `
                     <Image
                       source={
                         Object {
-                          "testUri": "../../../app/components/icon/icons/arrow-left@2x.png",
+                          "testUri": "../../../app/components/icon/icons/arrow-left.png",
                         }
                       }
                       style={
@@ -3108,7 +3108,7 @@ exports[`Storyshots Header Behavior 1`] = `
                     <Image
                       source={
                         Object {
-                          "testUri": "../../../app/components/icon/icons/bullet@2x.png",
+                          "testUri": "../../../app/components/icon/icons/bullet.png",
                         }
                       }
                       style={
@@ -3235,7 +3235,7 @@ exports[`Storyshots Icon Names 1`] = `
               <Image
                 source={
                   Object {
-                    "testUri": "../../../app/components/icon/icons/arrow-left@2x.png",
+                    "testUri": "../../../app/components/icon/icons/arrow-left.png",
                   }
                 }
                 style={
@@ -3329,7 +3329,7 @@ exports[`Storyshots Icon Names 1`] = `
               <Image
                 source={
                   Object {
-                    "testUri": "../../../app/components/icon/icons/bullet@2x.png",
+                    "testUri": "../../../app/components/icon/icons/bullet.png",
                   }
                 }
                 style={
@@ -4281,7 +4281,7 @@ exports[`Storyshots Text Passing Content 1`] = `
                   }
                 }
               >
-                omglol.test
+                common.cancel.test
               </Text>
             </View>
           </View>
@@ -5997,7 +5997,7 @@ exports[`Storyshots Wallpaper Style Presets 1`] = `
             <Image
               source={
                 Object {
-                  "testUri": "../../../app/components/wallpaper/bg@2x.png",
+                  "testUri": "../../../app/components/wallpaper/bg.png",
                 }
               }
               style={
diff --git a/IgniteDiffApp/test/i18n.test.ts b/IgniteDiffApp/test/i18n.test.ts
new file mode 100644
index 0000000..376cfdf
--- /dev/null
+++ b/IgniteDiffApp/test/i18n.test.ts
@@ -0,0 +1,62 @@
+const en = require("../app/i18n/en.json")
+const { exec } = require("child_process")
+
+// Use this array for keys that for whatever reason aren't greppable so they
+// don't hold your test suite hostage by always failing.
+const EXCEPTIONS = [
+  // "welcomeScreen.readyForLaunch",
+]
+
+function iterate(obj, stack, array) {
+  for (const property in obj) {
+    if (Object.prototype.hasOwnProperty.call(obj, property)) {
+      if (typeof obj[property] === "object") {
+        iterate(obj[property], `${stack}.${property}`, array)
+      } else {
+        array.push(`${stack.slice(1)}.${property}`)
+      }
+    }
+  }
+
+  return array
+}
+
+/**
+ * This tests your codebase for missing i18n strings so you can avoid error strings at render time
+ *
+ * It was taken from https://gist.github.com/Michaelvilleneuve/8808ba2775536665d95b7577c9d8d5a1
+ * and modified slightly to account for our Bowser higher order components,
+ * which take 'tx' and 'fooTx' props.
+ * The grep command is nasty looking, but it's essentially searching the codebase for 3 things:
+ *
+ * tx="*"
+ * Tx=""
+ * translate(""
+ *
+ * and then grabs the i18n key between the double quotes
+ *
+ * This approach isn't 100% perfect. If you are storing your key string in a variable because you
+ * are setting it conditionally, then it won't be picked up.
+ *
+ */
+
+describe("i18n", () => {
+  test("There are no missing keys", done => {
+    // Actual command output:
+    // grep "Tx=\"\S*\"\|tx=\"\S*\"\|translate(\"\S*\"" -ohr './app' | grep -o "\".*\""
+    const command = `grep "Tx=\\"\\S*\\"\\|tx=\\"\\S*\\"\\|translate(\\"\\S*\\"" -ohr '../app' | grep -o "\\".*\\""`
+    exec(command, (_, stdout) => {
+      const allTranslationsDefined = iterate(en, "", [])
+      const allTranslationsUsed = stdout.replace(new RegExp('"', "g"), "").split("\n")
+      allTranslationsUsed.splice(-1, 1)
+
+      for (let i = 0; i < allTranslationsUsed.length; i += 1) {
+        if (!EXCEPTIONS.includes(allTranslationsUsed[i])) {
+          // You can add keys to EXCEPTIONS (above) if you don't want them included in the test
+          expect(allTranslationsDefined).toContainEqual(allTranslationsUsed[i])
+        }
+      }
+      done()
+    })
+  }, 240000)
+})
diff --git a/IgniteDiffApp/test/mock-reactotron.ts b/IgniteDiffApp/test/mock-reactotron.ts
index 832ec7b..6366dae 100644
--- a/IgniteDiffApp/test/mock-reactotron.ts
+++ b/IgniteDiffApp/test/mock-reactotron.ts
@@ -1,2 +1 @@
-declare var tron
-tron = null
+declare const tron
diff --git a/IgniteDiffApp/test/setup.ts b/IgniteDiffApp/test/setup.ts
index 21a5db9..1bb0a69 100644
--- a/IgniteDiffApp/test/setup.ts
+++ b/IgniteDiffApp/test/setup.ts
@@ -8,5 +8,5 @@ import "./mock-react-native-localize"
 import "./mock-reactotron"
 
 declare global {
-  var __TEST__
+  let __TEST__
 }
diff --git a/IgniteDiffApp/tsconfig.json b/IgniteDiffApp/tsconfig.json
index e05bf0c..ea13117 100644
--- a/IgniteDiffApp/tsconfig.json
+++ b/IgniteDiffApp/tsconfig.json
@@ -11,10 +11,10 @@
     "noImplicitThis": true,
     "noUnusedLocals": true,
     "sourceMap": true,
-    "target": "es2015",
-    "lib": ["es6"],
+    "target": "esnext",
+    "lib": ["esnext"],
     "skipLibCheck": true
   },
   "exclude": ["node_modules"],
-  "include": ["app", "test", "storybook"]
+  "include": ["index.js", "app", "test", "storybook"]
 }
