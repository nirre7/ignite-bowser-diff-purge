diff --git a/IgniteDiffApp/.babelrc b/IgniteDiffApp/.babelrc
new file mode 100644
index 0000000..a9e56b2
--- /dev/null
+++ b/IgniteDiffApp/.babelrc
@@ -0,0 +1,15 @@
+{
+  "presets": ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
+  "env": {
+    "production": {}
+  },
+  "plugins": [
+    [
+      "@babel/plugin-proposal-decorators",
+      {
+        "legacy": true
+      }
+    ],
+    ["@babel/plugin-proposal-optional-catch-binding"]
+  ]
+}
diff --git a/IgniteDiffApp/.gitignore b/IgniteDiffApp/.gitignore
index b2cee48..2204481 100644
--- a/IgniteDiffApp/.gitignore
+++ b/IgniteDiffApp/.gitignore
@@ -20,6 +20,7 @@ DerivedData
 *.hmap
 *.ipa
 *.xcuserstate
+project.xcworkspace
 
 # Android/IntelliJ
 #
@@ -39,32 +40,13 @@ yarn-error.log
 buck-out/
 \.buckd/
 *.keystore
-!debug.keystore
 
-# fastlane
-#
-# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
-# screenshots whenever they are needed.
-# For more information about the recommended setup visit:
-# https://docs.fastlane.tools/best-practices/source-control/
+# VS Code
+.vscode
+
+# Cocoapods
+/ios/Pods
 
-*/fastlane/report.xml
-*/fastlane/Preview.html
-*/fastlane/screenshots
 
 # Bundle artifact
 *.jsbundle
-
-# CocoaPods
-/ios/Pods/
-
-# Bowser-specific items
-# You can safely replace everything above this comment with whatever is
-# in the default .gitignore generated by React-Native CLI
-
-# VS Code
-.vscode
-
-# Configurations
-app/config/env.*.js
-!env.js
diff --git a/IgniteDiffApp/.solidarity b/IgniteDiffApp/.solidarity
index cd5e390..582c35e 100644
--- a/IgniteDiffApp/.solidarity
+++ b/IgniteDiffApp/.solidarity
@@ -2,6 +2,13 @@
   "$schema": "http://json.schemastore.org/solidaritySchema",
   "requirements": {
     "Node": [{ "rule": "cli", "binary": "node", "semver": ">=8.6.0" }],
+    "React Native": [
+      {
+        "rule": "cli",
+        "binary": "react-native",
+        "semver": ">=2.0.1"
+      }
+    ],
     "Xcode": [
       {
         "rule": "cli",
diff --git a/IgniteDiffApp/android/app/build.gradle b/IgniteDiffApp/android/app/build.gradle
index 6126bc0..8971877 100644
--- a/IgniteDiffApp/android/app/build.gradle
+++ b/IgniteDiffApp/android/app/build.gradle
@@ -176,6 +176,15 @@ android {
 
         }
     }
+
+    packagingOptions {
+        pickFirst '**/armeabi-v7a/libc++_shared.so'
+        pickFirst '**/x86/libc++_shared.so'
+        pickFirst '**/arm64-v8a/libc++_shared.so'
+        pickFirst '**/x86_64/libc++_shared.so'
+        pickFirst '**/x86/libjsc.so'
+        pickFirst '**/armeabi-v7a/libjsc.so'
+    }
 }
 
 dependencies {
@@ -183,11 +192,11 @@ dependencies {
     implementation "com.facebook.react:react-native:+"  // From node_modules
 
     if (enableHermes) {
-        def hermesPath = "../../node_modules/hermes-engine/android/";
-        debugImplementation files(hermesPath + "hermes-debug.aar")
-        releaseImplementation files(hermesPath + "hermes-release.aar")
+      def hermesPath = "../../node_modules/hermesvm/android/";
+      debugImplementation files(hermesPath + "hermes-debug.aar")
+      releaseImplementation files(hermesPath + "hermes-release.aar")
     } else {
-        implementation jscFlavor
+      implementation jscFlavor
     }
 }
 
diff --git a/IgniteDiffApp/android/app/debug.keystore b/IgniteDiffApp/android/app/debug.keystore
deleted file mode 100644
index 364e105ed39fbfd62001429a68140672b06ec0de..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2257
zcmchYXEfYt8;7T1^dLH$VOTZ%2NOdOH5j5LYLtZ0q7x-V8_6gU5)#7dkq{HTmsfNq
zB3ZqcAxeY^G10@?efK?Q&)M(qInVv!xjx+IKEL}p*K@LYvIzo#AZG>st5|P)<NSTx
zaX4qkKvxgvduLn=+uyMU0?|MKJnRHup=FSw1;fCS5H>KF1_Z;y){W{<7K{nl!CPuE
z_^(!C<zwx~4vkzfMSaP=kxXVvQwM3%Ay_ek2-`cPW95k|{C@Z&h`EF*zn$>(Ol0n8
zK13*rzAtW>(wULKPRYLd7G18F8#1P`V*9`(Poj26eOXYyBVZPno~Cvvhx7vPjAuZo
zF?VD!zB~QG(!zbw#qsxT8%BSpqMZ4f70ZPn-3y$L8{EVbbN9$H`B&Z1quk9tgp5FM
zuxp3pJ0b8u|3+#5bkJ4SRnCF2l7#DyLYXYY8*?OuAwK4E6J{0N=O3QNVzQ$L#FKkR
zi-c@&!nDvezOV$i$Lr}iF$XEcwnybQ6WZrMKuw8gCL^U#D;q3t&HpTbq<OCu4=vvx
z+*t&~u`D?fzM7w1KV(PGnl;+>yD<vfkh#(e<fd+>%vG=TeDlzCT~MXUPC|Leb-Uk+
z=vnMd(|>ld?Fh>V8poP;q;;nc@en$|rnP0ytzD&fFkCeUE^kG9Kx4wUh!!rpjwKDP
zyw_e|a<e3|`{mv3r2M=Y@^U!pm#7j^ThHRQVk?Vnmer%caOEVp(qq~_F)5>^x_w3E
zP}}@$g>*LLJ4i0`Gx)qltL}@;mDv}D*xR^oeWcWdPkW@Uu)B^X&4W1$p6}ze!zudJ
zyiLg@uggoMIArBr*27EZV7djDg@W1MaL+rcZ-lrANJQ%%>u8)ZMWU@R2qtnmG(acP
z0d_^!<x#%Gz}~$zWXeGVMaRb7^24s-QHIx@R~bqYM+=6&K0KNnaD8=`HoL$>t>}5W
zpT`*2NR+0+SpTHb+6Js4b;%LJB;B_-ChhnU5py}iJtku*hm5F0!iql8Hrpcy1aYbT
z1*dKC5ua6pMX@@iO<YVC*(hAY;gal|Q`P50n*yIgxM$AhPpp<)-!cZBBZ}d;v*}Ya
zX#PNA;zxbnMQ@#Ol=y`iwpg-gLhKg+HAR0>NI?Hpr%h;&YaXp9n!ND7-=a%BD7v&g
zOO41M6EbE24mJ#S$Ui0-b<Pg^Ot>rR5M<ND3tGBdHh`%H&yL@xA9_yD8+*q%4YmrD
z;m%{o(%A28w7(ive$sbquebHRW}lET7&a4ndKh^l+NNZxy34<uKagv+RlH<!PhP-(
zUZt+lx~>L%@|ndz^)YLMMV1atna{Fw<;TF@>d&F|!Z>8eg>>hkFrV)W+uv=`^F9^e
zzzM2*oOjT9%gLoub<y5^rO=<NS}R)0)Dr@qml0fp7>%(R57p-`TXFe#oh1_{&N-YN
z<}artH|m=d8TQuKSWE)Z%puU|g|^^NFwC#N=@dPhasyYjoy(fdEVfKR@cXK<O0Jlt
z3A6)hMtVOAow~=y#0-unc_Aq{-*TH#56?JNBQHJ!M$7!ZqD=N)iH}N@p(#?0I;-+p
z5%Wu^=WkB!M?DcOt><c4vmQ<|QmDFDiChNBw>HZV-`06HsP`|Ftx;8<a2I7Rrpa@d
za7$*%uou_c2APjM#XWjjQ9p6NrdKb%k>(YD$fFXumLWbGnu$GMqRncXYY9mwz9$ap
zQtfZB^_BeNYITh^hA7+(XNFox5WMeG_LtJ%*Q}$8VKDI_p8^pqX)}NMb`0e|wgF7D
zuQACY_Ua<1ri{;Jwt@_1sW9zzdgnyh_O#8y+C;LcZq6=4e^cs6KvmK@$vVpKFGbQ=
z$)Eux5C|Fx;Gtmv9^#Y-g@7Rt7*eLp5n!gJmn7&B_L$G?NCN`AP>cXQEz}%F%K<UJ
zjyiYd&$A1hgU;OB!`mm=`+tP)UxeXbgpq?z<G*%BaRKN5>;vUs{+l4Q{}eWW;ATe2
zqvXzxoIDy(u;F2q1JH7Sf;{jy_<s+C2Mhl*lCvKJiU+fT06drhf(L^^DRbV4U;8{q
zwSNgo6s0oXoEZ#m8V_~tgoJ-uE9JT}%4uJC-NUMtH{()HFPE!t^h3BHdSIi`Po!((
z{Xh^oO_Q*YNRv=1ySlG1HE8vK&gSM1J;hi{j~`aC$1miMRE4r7E^V7MMmH*bEj3=9
zti8Pmw`3cR)6th6Y04yOI8^cD3j-%;0^DPdxYgSFEw>j})F+cKlIOmNfjBGHoG^CN
zM|Ho&&X|L-36f}Q-obEACz`sI%2f&k>z5c$2TyTSj~vmO)BW~+N^kt`Jt@R|s!){H
ze1_eCrlNaPkJQhL$WG&iRvF*YG=gXd1IyYQ9ew|iYn7r~g!wOnw;@n42>enAxBv*A
zEmV*N#sxdicyNM=A4<rw+G=O0XVDU$K<*&^8RFTyItvjDau^EYeD~3b=Nh|7dm~%m
zR?Ff+mr>|yaOC5MByts}s_Hpfj|y<6G=o=!3S@eIFKDdpR7|FY>L&Wat&oW&cm&X~
z5Bt>Fcq(fgnvlvLSYg&o6>&f<Cb8<D;~_?*j~^uo1`M+gz-Q8qvWHW%3dm!nySArT
ztI3V0ch+e~E}Ll`j%ID2_g3*Ex(thKv8URgjMB>Y`ODg4`V^lWWD=%oJ#Kbad2u~!
zLECFS*??>|vDsNR&pH=Ze0Eo`sC_G`OjoEKVHY|wmwlX&(XBE<@sx3Hd^gt<UzUXA
z9W!iDc7hl1L;!79D7&$KkM*I;>d-fNwUHsylg06p`U2y_={u}Bc<WnGT`_h0VE8u8
EA81kH<^TWy

diff --git a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
index cac41eb..051fcff 100644
--- a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
+++ b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
@@ -2,9 +2,9 @@ package com.ignitediffapp;
 
 import com.facebook.react.ReactActivity;
 
-        import com.facebook.react.ReactActivityDelegate;
-        import com.facebook.react.ReactRootView;
-        import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
+      import com.facebook.react.ReactActivityDelegate;
+      import com.facebook.react.ReactRootView;
+      import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 
 public class MainActivity extends ReactActivity {
 
@@ -18,12 +18,12 @@ public class MainActivity extends ReactActivity {
     };
   }
 
-  /**
-   * Returns the name of the main component registered from JavaScript. This is used to schedule
-   * rendering of the component.
-   */
-  @Override
-  protected String getMainComponentName() {
-    return "IgniteDiffApp";
-  }
+    /**
+     * Returns the name of the main component registered from JavaScript.
+     * This is used to schedule rendering of the component.
+     */
+    @Override
+    protected String getMainComponentName() {
+        return "IgniteDiffApp";
+    }
 }
diff --git a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java
index f431a78..567588c 100644
--- a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java
+++ b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java
@@ -1,38 +1,40 @@
 package com.ignitediffapp;
 
 import android.app.Application;
-import android.content.Context;
+import android.util.Log;
+
 import com.facebook.react.PackageList;
+import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
+import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.soloader.SoLoader;
-import java.lang.reflect.InvocationTargetException;
+
 import java.util.List;
 
 public class MainApplication extends Application implements ReactApplication {
 
-  private final ReactNativeHost mReactNativeHost =
-      new ReactNativeHost(this) {
-        @Override
-        public boolean getUseDeveloperSupport() {
-          return BuildConfig.DEBUG;
-        }
+  private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {
+    @Override
+    public boolean getUseDeveloperSupport() {
+      return BuildConfig.DEBUG;
+    }
 
-        @Override
-        protected List<ReactPackage> getPackages() {
-          @SuppressWarnings("UnnecessaryLocalVariable")
-          List<ReactPackage> packages = new PackageList(this).getPackages();
-          // Packages that cannot be autolinked yet can be added manually here, for example:
-          // packages.add(new MyReactNativePackage());
-          return packages;
-        }
+    @Override
+    protected List<ReactPackage> getPackages() {
+      @SuppressWarnings("UnnecessaryLocalVariable")
+      List<ReactPackage> packages = new PackageList(this).getPackages();
+      // Packages that cannot be autolinked yet can be added manually here, for example:
+      // packages.add(new MyReactNativePackage());
+      return packages;
+    }
 
-        @Override
-        protected String getJSMainModuleName() {
-          return "index";
-        }
-      };
+    @Override
+    protected String getJSMainModuleName() {
+      return "index";
+    }
+  };
 
   @Override
   public ReactNativeHost getReactNativeHost() {
@@ -43,32 +45,5 @@ public class MainApplication extends Application implements ReactApplication {
   public void onCreate() {
     super.onCreate();
     SoLoader.init(this, /* native exopackage */ false);
-    initializeFlipper(this); // Remove this line if you don't want Flipper enabled
-  }
-
-  /**
-   * Loads Flipper in React Native templates.
-   *
-   * @param context
-   */
-  private static void initializeFlipper(Context context) {
-    if (BuildConfig.DEBUG) {
-      try {
-        /*
-         We use reflection here to pick up the class that initializes Flipper,
-        since Flipper library is not available in release mode
-        */
-        Class<?> aClass = Class.forName("com.facebook.flipper.ReactNativeFlipper");
-        aClass.getMethod("initializeFlipper", Context.class).invoke(null, context);
-      } catch (ClassNotFoundException e) {
-        e.printStackTrace();
-      } catch (NoSuchMethodException e) {
-        e.printStackTrace();
-      } catch (IllegalAccessException e) {
-        e.printStackTrace();
-      } catch (InvocationTargetException e) {
-        e.printStackTrace();
-      }
-    }
   }
 }
diff --git a/IgniteDiffApp/android/build.gradle b/IgniteDiffApp/android/build.gradle
index 28f7ec6..e7732fe 100644
--- a/IgniteDiffApp/android/build.gradle
+++ b/IgniteDiffApp/android/build.gradle
@@ -6,13 +6,14 @@ buildscript {
         minSdkVersion = 16
         compileSdkVersion = 28
         targetSdkVersion = 28
+        supportLibVersion = "28.0.0"
     }
     repositories {
         google()
         jcenter()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:3.4.2")
+        classpath("com.android.tools.build:gradle:3.4.1")
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -33,6 +34,5 @@ allprojects {
 
         google()
         jcenter()
-        maven { url 'https://jitpack.io' }
     }
 }
diff --git a/IgniteDiffApp/android/gradle/wrapper/gradle-wrapper.properties b/IgniteDiffApp/android/gradle/wrapper/gradle-wrapper.properties
index e0c4de3..ee69dd6 100644
--- a/IgniteDiffApp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/IgniteDiffApp/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.5-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index 84b2891..97c4b6d 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -1,76 +1,107 @@
+// Welcome to the main entry point of the app.
+//
+// In this file, we'll be kicking off our app or storybook.
+
+import "./i18n"
+import * as React from "react"
+import { AppRegistry, YellowBox } from "react-native"
+import { StatefulNavigator } from "./navigation"
+import { StorybookUIRoot } from "../storybook"
+import { RootStore, setupRootStore } from "./models/root-store"
+import { Provider } from "mobx-react"
+import { BackButtonHandler } from "./navigation/back-button-handler"
+import { contains } from "ramda"
+import { DEFAULT_NAVIGATION_CONFIG } from "./navigation/navigation-config"
+
 /**
- * Welcome to the main entry point of the app. In this file, we'll
- * be kicking off our app or storybook.
- *
- * Most of this file is boilerplate and you shouldn't need to modify
- * it very often. But take some time to look through and understand
- * what is going on here.
- *
- * The app navigation resides in ./app/navigation, so head over there
- * if you're interested in adding screens and navigators.
+ * Ignore some yellowbox warnings. Some of these are for deprecated functions
+ * that we haven't gotten around to replacing yet.
  */
-import "./i18n"
-import "./utils/ignore-warnings"
-import React, { useState, useEffect, useRef, FunctionComponent as Component } from "react"
-import { NavigationContainerRef } from "@react-navigation/native"
-import { SafeAreaProvider, initialWindowSafeAreaInsets } from "react-native-safe-area-context"
-import * as storage from "./utils/storage"
-import {
-  useBackButtonHandler,
-  RootNavigator,
-  canExit,
-  setRootNavigation,
-  useNavigationPersistence,
-} from "./navigation"
-import { RootStore, RootStoreProvider, setupRootStore } from "./models"
+YellowBox.ignoreWarnings([
+  "componentWillMount is deprecated",
+  "componentWillReceiveProps is deprecated",
+])
 
-// This puts screens in a native ViewController or Activity. If you want fully native
-// stack navigation, use `createNativeStackNavigator` in place of `createStackNavigator`:
-// https://github.com/kmagiera/react-native-screens#using-native-stack-navigator
-import { enableScreens } from "react-native-screens"
-enableScreens()
+/**
+ * Storybook still wants to use ReactNative's AsyncStorage instead of the
+ * react-native-community package; this causes a YellowBox warning. This hack
+ * points RN's AsyncStorage at the community one, fixing the warning. Here's the
+ * Storybook issue about this: https://github.com/storybookjs/storybook/issues/6078
+ */
+const ReactNative = require("react-native")
+Object.defineProperty(ReactNative, "AsyncStorage", {
+  get(): any {
+    return require("@react-native-community/async-storage").default
+  },
+})
 
-export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
+interface AppState {
+  rootStore?: RootStore
+}
 
 /**
  * This is the root component of our app.
  */
-const App: Component<{}> = () => {
-  const navigationRef = useRef<NavigationContainerRef>()
-  const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)
+export class App extends React.Component<{}, AppState> {
+  /**
+   * When the component is mounted. This happens asynchronously and simply
+   * re-renders when we're good to go.
+   */
+  async componentDidMount() {
+    this.setState({
+      rootStore: await setupRootStore(),
+    })
+  }
 
-  setRootNavigation(navigationRef)
-  useBackButtonHandler(navigationRef, canExit)
-  const { initialNavigationState, onNavigationStateChange } = useNavigationPersistence(
-    storage,
-    NAVIGATION_PERSISTENCE_KEY,
-  )
+  /**
+   * Are we allowed to exit the app?  This is called when the back button
+   * is pressed on android.
+   *
+   * @param routeName The currently active route name.
+   */
+  canExit(routeName: string) {
+    return contains(routeName, DEFAULT_NAVIGATION_CONFIG.exitRoutes)
+  }
 
-  // Kick off initial async loading actions, like loading fonts and RootStore
-  useEffect(() => {
-    ;(async () => {
-      setupRootStore().then(setRootStore)
-    })()
-  }, [])
+  render() {
+    const rootStore = this.state && this.state.rootStore
 
-  // Before we show the app, we have to wait for our state to be ready.
-  // In the meantime, don't render anything. This will be the background
-  // color set in native by rootView's background color. You can replace
-  // with your own loading component if you wish.
-  if (!rootStore) return null
+    // Before we show the app, we have to wait for our state to be ready.
+    // In the meantime, don't render anything. This will be the background
+    // color set in native by rootView's background color.
+    //
+    // This step should be completely covered over by the splash screen though.
+    //
+    // You're welcome to swap in your own component to render if your boot up
+    // sequence is too slow though.
+    if (!rootStore) {
+      return null
+    }
 
-  // otherwise, we're ready to render the app
-  return (
-    <RootStoreProvider value={rootStore}>
-      <SafeAreaProvider initialSafeAreaInsets={initialWindowSafeAreaInsets}>
-        <RootNavigator
-          ref={navigationRef}
-          initialState={initialNavigationState}
-          onStateChange={onNavigationStateChange}
-        />
-      </SafeAreaProvider>
-    </RootStoreProvider>
-  )
+    // otherwise, we're ready to render the app
+
+    // wire stores defined in root-store.ts file
+    const { navigationStore, ...otherStores } = rootStore
+
+    return (
+      <Provider rootStore={rootStore} navigationStore={navigationStore} {...otherStores}>
+        <BackButtonHandler canExit={this.canExit}>
+          <StatefulNavigator />
+        </BackButtonHandler>
+      </Provider>
+    )
+  }
 }
 
-export default App
+/**
+ * This needs to match what's found in your app_delegate.m and MainActivity.java.
+ */
+const APP_NAME = "IgniteDiffApp"
+
+// Should we show storybook instead of our app?
+//
+// ⚠️ Leave this as `false` when checking into git.
+const SHOW_STORYBOOK = false
+
+const RootComponent = SHOW_STORYBOOK && __DEV__ ? StorybookUIRoot : App
+AppRegistry.registerComponent(APP_NAME, () => RootComponent)
diff --git a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
index 6a7e06a..ca94a41 100644
--- a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
+++ b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
@@ -1,7 +1,7 @@
 import * as React from "react"
 import { View, ViewStyle, ImageStyle, TextStyle } from "react-native"
-import { Text } from "../text/text"
-import { Icon } from "../icon/icon"
+import { Text } from "../text"
+import { Icon } from "../icon"
 import { spacing } from "../../theme"
 
 const BULLET_ITEM: ViewStyle = {
diff --git a/IgniteDiffApp/app/components/bullet-item/index.ts b/IgniteDiffApp/app/components/bullet-item/index.ts
new file mode 100644
index 0000000..1facf05
--- /dev/null
+++ b/IgniteDiffApp/app/components/bullet-item/index.ts
@@ -0,0 +1 @@
+export * from "./bullet-item"
diff --git a/IgniteDiffApp/app/components/button/button.story.tsx b/IgniteDiffApp/app/components/button/button.story.tsx
index 94707d9..4ccbde2 100644
--- a/IgniteDiffApp/app/components/button/button.story.tsx
+++ b/IgniteDiffApp/app/components/button/button.story.tsx
@@ -2,9 +2,9 @@ import * as React from "react"
 import { ViewStyle, TextStyle, Alert } from "react-native"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Button } from "./button"
+import { Button } from "./"
 
-declare let module
+declare var module
 
 const buttonStyleArray: ViewStyle[] = [{ paddingVertical: 100 }, { borderRadius: 0 }]
 
diff --git a/IgniteDiffApp/app/components/button/button.tsx b/IgniteDiffApp/app/components/button/button.tsx
index d95709d..bc284d0 100644
--- a/IgniteDiffApp/app/components/button/button.tsx
+++ b/IgniteDiffApp/app/components/button/button.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity } from "react-native"
-import { Text } from "../text/text"
+import { Text } from "../text"
 import { viewPresets, textPresets } from "./button.presets"
 import { ButtonProps } from "./button.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/button/index.ts b/IgniteDiffApp/app/components/button/index.ts
new file mode 100644
index 0000000..e93d26f
--- /dev/null
+++ b/IgniteDiffApp/app/components/button/index.ts
@@ -0,0 +1 @@
+export * from "./button"
diff --git a/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx b/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx
index fa1309a..75da42d 100644
--- a/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx
+++ b/IgniteDiffApp/app/components/checkbox/checkbox.story.tsx
@@ -5,10 +5,10 @@ import * as React from "react"
 import { View, ViewStyle } from "react-native"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Checkbox } from "./checkbox"
+import { Checkbox } from "./"
 import { Toggle } from "react-powerplug"
 
-declare let module
+declare var module
 
 const arrayStyle: ViewStyle[] = [{ paddingVertical: 40 }, { alignSelf: "flex-end" }]
 const arrayOutlineStyle: ViewStyle[] = [{ borderColor: "#b443c9" }, { borderWidth: 25 }]
diff --git a/IgniteDiffApp/app/components/checkbox/checkbox.tsx b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
index bdb9825..65ee796 100644
--- a/IgniteDiffApp/app/components/checkbox/checkbox.tsx
+++ b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity, TextStyle, ViewStyle, View } from "react-native"
-import { Text } from "../text/text"
+import { Text } from "../text"
 import { color, spacing } from "../../theme"
 import { CheckboxProps } from "./checkbox.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/checkbox/index.ts b/IgniteDiffApp/app/components/checkbox/index.ts
new file mode 100644
index 0000000..1b929d0
--- /dev/null
+++ b/IgniteDiffApp/app/components/checkbox/index.ts
@@ -0,0 +1 @@
+export * from "./checkbox"
diff --git a/IgniteDiffApp/app/components/form-row/form-row.story.tsx b/IgniteDiffApp/app/components/form-row/form-row.story.tsx
index 45bbd89..d78322d 100644
--- a/IgniteDiffApp/app/components/form-row/form-row.story.tsx
+++ b/IgniteDiffApp/app/components/form-row/form-row.story.tsx
@@ -4,11 +4,12 @@
 import * as React from "react"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Text, FormRow } from "../"
+import { FormRow } from "./form-row"
+import { Text } from "../text"
 import { color } from "../../theme/color"
 import { ViewStyle } from "react-native"
 
-declare let module
+declare var module
 
 const TEXT_STYLE_OVERRIDE = {
   color: color.storybookTextColor,
diff --git a/IgniteDiffApp/app/components/form-row/index.ts b/IgniteDiffApp/app/components/form-row/index.ts
new file mode 100644
index 0000000..e7b1a23
--- /dev/null
+++ b/IgniteDiffApp/app/components/form-row/index.ts
@@ -0,0 +1 @@
+export * from "./form-row"
diff --git a/IgniteDiffApp/app/components/header/header.props.ts b/IgniteDiffApp/app/components/header/header.props.ts
index 19e9e3d..365a10d 100644
--- a/IgniteDiffApp/app/components/header/header.props.ts
+++ b/IgniteDiffApp/app/components/header/header.props.ts
@@ -1,5 +1,5 @@
 import { ViewStyle, TextStyle } from "react-native"
-import { IconTypes } from "../icon/icons"
+import { IconTypes } from "../icon"
 
 export interface HeaderProps {
   /**
diff --git a/IgniteDiffApp/app/components/header/header.story.tsx b/IgniteDiffApp/app/components/header/header.story.tsx
index 2ec848c..a2363fb 100644
--- a/IgniteDiffApp/app/components/header/header.story.tsx
+++ b/IgniteDiffApp/app/components/header/header.story.tsx
@@ -5,7 +5,7 @@ import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Header } from "./header"
 import { color } from "../../theme"
 
-declare let module
+declare var module
 
 const VIEWSTYLE = {
   flex: 1,
@@ -18,13 +18,13 @@ storiesOf("Header", module)
     <Story>
       <UseCase noPad text="default" usage="The default usage">
         <View style={VIEWSTYLE}>
-          <Header headerTx="demoScreen.howTo" />
+          <Header headerTx="secondExampleScreen.howTo" />
         </View>
       </UseCase>
       <UseCase noPad text="leftIcon" usage="A left nav icon">
         <View style={VIEWSTYLE}>
           <Header
-            headerTx="demoScreen.howTo"
+            headerTx="secondExampleScreen.howTo"
             leftIcon="back"
             onLeftPress={() => Alert.alert("left nav")}
           />
@@ -33,7 +33,7 @@ storiesOf("Header", module)
       <UseCase noPad text="rightIcon" usage="A right nav icon">
         <View style={VIEWSTYLE}>
           <Header
-            headerTx="demoScreen.howTo"
+            headerTx="secondExampleScreen.howTo"
             rightIcon="bullet"
             onRightPress={() => Alert.alert("right nav")}
           />
diff --git a/IgniteDiffApp/app/components/header/header.tsx b/IgniteDiffApp/app/components/header/header.tsx
index 1936d84..db3adb9 100644
--- a/IgniteDiffApp/app/components/header/header.tsx
+++ b/IgniteDiffApp/app/components/header/header.tsx
@@ -1,9 +1,9 @@
-import React, { FunctionComponent as Component } from "react"
+import * as React from "react"
 import { View, ViewStyle, TextStyle } from "react-native"
 import { HeaderProps } from "./header.props"
-import { Button } from "../button/button"
-import { Text } from "../text/text"
-import { Icon } from "../icon/icon"
+import { Button } from "../button"
+import { Icon } from "../icon"
+import { Text } from "../text"
 import { spacing } from "../../theme"
 import { translate } from "../../i18n/"
 
@@ -24,38 +24,39 @@ const RIGHT: ViewStyle = { width: 32 }
 /**
  * Header that appears on many screens. Will hold navigation buttons and screen title.
  */
-export const Header: Component<HeaderProps> = props => {
-  const {
-    onLeftPress,
-    onRightPress,
-    rightIcon,
-    leftIcon,
-    headerText,
-    headerTx,
-    style,
-    titleStyle,
-  } = props
-  const header = headerText || (headerTx && translate(headerTx)) || ""
+export class Header extends React.Component<HeaderProps, {}> {
+  render() {
+    const {
+      onLeftPress,
+      onRightPress,
+      rightIcon,
+      leftIcon,
+      headerText,
+      headerTx,
+      titleStyle,
+    } = this.props
+    const header = headerText || (headerTx && translate(headerTx)) || ""
 
-  return (
-    <View style={{ ...ROOT, ...style }}>
-      {leftIcon ? (
-        <Button preset="link" onPress={onLeftPress}>
-          <Icon icon={leftIcon} />
-        </Button>
-      ) : (
-        <View style={LEFT} />
-      )}
-      <View style={TITLE_MIDDLE}>
-        <Text style={{ ...TITLE, ...titleStyle }} text={header} />
+    return (
+      <View style={{ ...ROOT, ...this.props.style }}>
+        {leftIcon ? (
+          <Button preset="link" onPress={onLeftPress}>
+            <Icon icon={leftIcon} />
+          </Button>
+        ) : (
+          <View style={LEFT} />
+        )}
+        <View style={TITLE_MIDDLE}>
+          <Text style={{ ...TITLE, ...titleStyle }} text={header} />
+        </View>
+        {rightIcon ? (
+          <Button preset="link" onPress={onRightPress}>
+            <Icon icon={rightIcon} />
+          </Button>
+        ) : (
+          <View style={RIGHT} />
+        )}
       </View>
-      {rightIcon ? (
-        <Button preset="link" onPress={onRightPress}>
-          <Icon icon={rightIcon} />
-        </Button>
-      ) : (
-        <View style={RIGHT} />
-      )}
-    </View>
-  )
+    )
+  }
 }
diff --git a/IgniteDiffApp/app/components/header/index.ts b/IgniteDiffApp/app/components/header/index.ts
new file mode 100644
index 0000000..48b9e78
--- /dev/null
+++ b/IgniteDiffApp/app/components/header/index.ts
@@ -0,0 +1 @@
+export * from "./header"
diff --git a/IgniteDiffApp/app/components/icon/icon.story.tsx b/IgniteDiffApp/app/components/icon/icon.story.tsx
index fa599ac..5b0c33e 100644
--- a/IgniteDiffApp/app/components/icon/icon.story.tsx
+++ b/IgniteDiffApp/app/components/icon/icon.story.tsx
@@ -3,7 +3,7 @@ import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Icon } from "./icon"
 
-declare let module
+declare var module
 
 storiesOf("Icon", module)
   .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)
diff --git a/IgniteDiffApp/app/components/icon/index.ts b/IgniteDiffApp/app/components/icon/index.ts
new file mode 100644
index 0000000..144e840
--- /dev/null
+++ b/IgniteDiffApp/app/components/icon/index.ts
@@ -0,0 +1,2 @@
+export * from "./icon"
+export * from "./icons"
diff --git a/IgniteDiffApp/app/components/index.ts b/IgniteDiffApp/app/components/index.ts
deleted file mode 100644
index 0449c9b..0000000
--- a/IgniteDiffApp/app/components/index.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-export * from "./bullet-item/bullet-item"
-export * from "./button/button"
-export * from "./checkbox/checkbox"
-export * from "./form-row/form-row"
-export * from "./header/header"
-export * from "./icon/icon"
-export * from "./screen/screen"
-export * from "./switch/switch"
-export * from "./text/text"
-export * from "./text-field/text-field"
-export * from "./wallpaper/wallpaper"
diff --git a/IgniteDiffApp/app/components/screen/index.ts b/IgniteDiffApp/app/components/screen/index.ts
new file mode 100644
index 0000000..8c7396e
--- /dev/null
+++ b/IgniteDiffApp/app/components/screen/index.ts
@@ -0,0 +1 @@
+export * from "./screen"
diff --git a/IgniteDiffApp/app/components/screen/screen.tsx b/IgniteDiffApp/app/components/screen/screen.tsx
index 4943c0b..8631cfc 100644
--- a/IgniteDiffApp/app/components/screen/screen.tsx
+++ b/IgniteDiffApp/app/components/screen/screen.tsx
@@ -1,17 +1,16 @@
 import * as React from "react"
 import { KeyboardAvoidingView, Platform, ScrollView, StatusBar, View } from "react-native"
-import { useSafeArea } from "react-native-safe-area-context"
+import { SafeAreaView } from "react-navigation"
 import { ScreenProps } from "./screen.props"
 import { isNonScrolling, offsets, presets } from "./screen.presets"
 
 const isIos = Platform.OS === "ios"
 
 function ScreenWithoutScrolling(props: ScreenProps) {
-  const insets = useSafeArea()
-  const preset = presets.fixed
+  const preset = presets["fixed"]
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
+  const Wrapper = props.unsafe ? View : SafeAreaView
 
   return (
     <KeyboardAvoidingView
@@ -20,17 +19,16 @@ function ScreenWithoutScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <View style={[preset.inner, style, insetStyle]}>{props.children}</View>
+      <Wrapper style={[preset.inner, style]}>{props.children}</Wrapper>
     </KeyboardAvoidingView>
   )
 }
 
 function ScreenWithScrolling(props: ScreenProps) {
-  const insets = useSafeArea()
-  const preset = presets.scroll
+  const preset = presets["scroll"]
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
+  const Wrapper = props.unsafe ? View : SafeAreaView
 
   return (
     <KeyboardAvoidingView
@@ -39,14 +37,14 @@ function ScreenWithScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <View style={[preset.outer, backgroundStyle, insetStyle]}>
+      <Wrapper style={[preset.outer, backgroundStyle]}>
         <ScrollView
           style={[preset.outer, backgroundStyle]}
           contentContainerStyle={[preset.inner, style]}
         >
           {props.children}
         </ScrollView>
-      </View>
+      </Wrapper>
     </KeyboardAvoidingView>
   )
 }
diff --git a/IgniteDiffApp/app/components/switch/index.ts b/IgniteDiffApp/app/components/switch/index.ts
new file mode 100644
index 0000000..b0af0ed
--- /dev/null
+++ b/IgniteDiffApp/app/components/switch/index.ts
@@ -0,0 +1 @@
+export * from "./switch"
diff --git a/IgniteDiffApp/app/components/switch/switch.story.tsx b/IgniteDiffApp/app/components/switch/switch.story.tsx
index d390ab5..02ea37c 100644
--- a/IgniteDiffApp/app/components/switch/switch.story.tsx
+++ b/IgniteDiffApp/app/components/switch/switch.story.tsx
@@ -6,9 +6,9 @@ import { View, ViewStyle } from "react-native"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Toggle } from "react-powerplug"
-import { Switch } from "./switch"
+import { Switch } from "."
 
-declare let module
+declare var module
 
 const styleArray: ViewStyle[] = [{ borderColor: "#686868" }]
 
diff --git a/IgniteDiffApp/app/components/switch/switch.tsx b/IgniteDiffApp/app/components/switch/switch.tsx
index e3786e2..8b85394 100644
--- a/IgniteDiffApp/app/components/switch/switch.tsx
+++ b/IgniteDiffApp/app/components/switch/switch.tsx
@@ -1,4 +1,4 @@
-import React, { FunctionComponent as Component } from "react"
+import * as React from "react"
 import { ViewStyle, Animated, Easing, TouchableWithoutFeedback } from "react-native"
 import { color } from "../../theme"
 import { SwitchProps } from "./switch.props"
@@ -50,66 +50,73 @@ const enhance = (style, newStyles): any => {
   return mergeAll(flatten([style, newStyles]))
 }
 
-const makeAnimatedValue = switchOn => new Animated.Value(switchOn ? 1 : 0)
-
-export const Switch: Component<SwitchProps> = props => {
-  const [timer] = React.useState<Animated.Value>(makeAnimatedValue(props.value))
-  const startAnimation = React.useMemo(
-    () => (newValue: boolean) => {
-      const toValue = newValue ? 1 : 0
-      const easing = Easing.out(Easing.circle)
-      Animated.timing(timer, {
-        toValue,
-        duration: DURATION,
-        easing,
-        useNativeDriver: true,
-      }).start()
-    },
-    [timer],
-  )
-
-  const [previousValue, setPreviousValue] = React.useState<boolean>(props.value)
-  React.useEffect(() => {
-    if (props.value !== previousValue) {
-      startAnimation(props.value)
-      setPreviousValue(props.value)
-    }
-  }, [props.value])
+interface SwitchState {
+  timer: Animated.Value
+}
 
-  const handlePress = React.useMemo(() => () => props.onToggle && props.onToggle(!props.value), [
-    props.onToggle,
-    props.value,
-  ])
+export class Switch extends React.PureComponent<SwitchProps, SwitchState> {
+  state = {
+    timer: new Animated.Value(this.props.value ? 1 : 0),
+  }
 
-  if (!timer) {
-    return null
+  startAnimation(newValue: boolean) {
+    const toValue = newValue ? 1 : 0
+    const easing = Easing.out(Easing.circle)
+    Animated.timing(this.state.timer, {
+      toValue,
+      duration: DURATION,
+      easing,
+      useNativeDriver: true,
+    }).start()
   }
 
-  const translateX = timer.interpolate({
-    inputRange: [0, 1],
-    outputRange: [OFF_POSITION, ON_POSITION],
-  })
-
-  const style = enhance({}, props.style)
-
-  let trackStyle = TRACK
-  trackStyle = enhance(trackStyle, {
-    backgroundColor: props.value ? ON_COLOR : OFF_COLOR,
-    borderColor: props.value ? BORDER_ON_COLOR : BORDER_OFF_COLOR,
-  })
-  trackStyle = enhance(trackStyle, props.value ? props.trackOnStyle : props.trackOffStyle)
-
-  let thumbStyle = THUMB
-  thumbStyle = enhance(thumbStyle, {
-    transform: [{ translateX }],
-  })
-  thumbStyle = enhance(thumbStyle, props.value ? props.thumbOnStyle : props.thumbOffStyle)
-
-  return (
-    <TouchableWithoutFeedback onPress={handlePress} style={style}>
-      <Animated.View style={trackStyle}>
-        <Animated.View style={thumbStyle} />
-      </Animated.View>
-    </TouchableWithoutFeedback>
-  )
+  componentWillReceiveProps(newProps: SwitchProps) {
+    if (newProps.value !== this.props.value) {
+      this.startAnimation(newProps.value)
+    }
+  }
+
+  /**
+   * Fires when we tap the touchable.
+   */
+  handlePress = () => this.props.onToggle && this.props.onToggle(!this.props.value)
+
+  /**
+   * Render the component.
+   */
+  render() {
+    const translateX = this.state.timer.interpolate({
+      inputRange: [0, 1],
+      outputRange: [OFF_POSITION, ON_POSITION],
+    })
+
+    const style = enhance({}, this.props.style)
+
+    let trackStyle = TRACK
+    trackStyle = enhance(trackStyle, {
+      backgroundColor: this.props.value ? ON_COLOR : OFF_COLOR,
+      borderColor: this.props.value ? BORDER_ON_COLOR : BORDER_OFF_COLOR,
+    })
+    trackStyle = enhance(
+      trackStyle,
+      this.props.value ? this.props.trackOnStyle : this.props.trackOffStyle,
+    )
+
+    let thumbStyle = THUMB
+    thumbStyle = enhance(thumbStyle, {
+      transform: [{ translateX }],
+    })
+    thumbStyle = enhance(
+      thumbStyle,
+      this.props.value ? this.props.thumbOnStyle : this.props.thumbOffStyle,
+    )
+
+    return (
+      <TouchableWithoutFeedback onPress={this.handlePress} style={style}>
+        <Animated.View style={trackStyle}>
+          <Animated.View style={thumbStyle} />
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    )
+  }
 }
diff --git a/IgniteDiffApp/app/components/text-field/index.ts b/IgniteDiffApp/app/components/text-field/index.ts
new file mode 100644
index 0000000..44064b6
--- /dev/null
+++ b/IgniteDiffApp/app/components/text-field/index.ts
@@ -0,0 +1 @@
+export * from "./text-field"
diff --git a/IgniteDiffApp/app/components/text-field/text-field.story.tsx b/IgniteDiffApp/app/components/text-field/text-field.story.tsx
index 46e2af0..0566867 100644
--- a/IgniteDiffApp/app/components/text-field/text-field.story.tsx
+++ b/IgniteDiffApp/app/components/text-field/text-field.story.tsx
@@ -4,11 +4,12 @@
 import * as React from "react"
 import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { Text, TextField } from "../"
+import { Text } from "../text"
+import { TextField } from "./"
 import { State } from "react-powerplug"
 import { ViewStyle, TextStyle, Alert } from "react-native"
 
-declare let module
+declare var module
 
 const styleArray: ViewStyle[] = [{ paddingHorizontal: 30 }, { borderWidth: 30 }]
 
@@ -24,7 +25,7 @@ const inputStyleArray: TextStyle[] = [
     borderColor: "#7fff00",
   },
 ]
-let alertWhenFocused = true
+var alertWhenFocused = true
 
 storiesOf("TextField", module)
   .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)
diff --git a/IgniteDiffApp/app/components/text-field/text-field.tsx b/IgniteDiffApp/app/components/text-field/text-field.tsx
index 69414d2..5571e23 100644
--- a/IgniteDiffApp/app/components/text-field/text-field.tsx
+++ b/IgniteDiffApp/app/components/text-field/text-field.tsx
@@ -1,8 +1,8 @@
-import React, { FunctionComponent as Component } from "react"
+import * as React from "react"
 import { View, TextInput, TextStyle, ViewStyle } from "react-native"
 import { color, spacing, typography } from "../../theme"
 import { translate } from "../../i18n"
-import { Text } from "../text/text"
+import { Text } from "../text"
 import { TextFieldProps } from "./text-field.props"
 import { mergeAll, flatten } from "ramda"
 
@@ -32,36 +32,38 @@ const enhance = (style, styleOverride) => {
 /**
  * A component which has a label and an input together.
  */
-export const TextField: Component<TextFieldProps> = props => {
-  const {
-    placeholderTx,
-    placeholder,
-    labelTx,
-    label,
-    preset = "default",
-    style: styleOverride,
-    inputStyle: inputStyleOverride,
-    forwardedRef,
-    ...rest
-  } = props
-  let containerStyle: ViewStyle = { ...CONTAINER, ...PRESETS[preset] }
-  containerStyle = enhance(containerStyle, styleOverride)
+export class TextField extends React.Component<TextFieldProps, {}> {
+  render() {
+    const {
+      placeholderTx,
+      placeholder,
+      labelTx,
+      label,
+      preset = "default",
+      style: styleOverride,
+      inputStyle: inputStyleOverride,
+      forwardedRef,
+      ...rest
+    } = this.props
+    let containerStyle: ViewStyle = { ...CONTAINER, ...PRESETS[preset] }
+    containerStyle = enhance(containerStyle, styleOverride)
 
-  let inputStyle: TextStyle = INPUT
-  inputStyle = enhance(inputStyle, inputStyleOverride)
-  const actualPlaceholder = placeholderTx ? translate(placeholderTx) : placeholder
+    let inputStyle: TextStyle = INPUT
+    inputStyle = enhance(inputStyle, inputStyleOverride)
+    const actualPlaceholder = placeholderTx ? translate(placeholderTx) : placeholder
 
-  return (
-    <View style={containerStyle}>
-      <Text preset="fieldLabel" tx={labelTx} text={label} />
-      <TextInput
-        placeholder={actualPlaceholder}
-        placeholderTextColor={color.palette.lighterGrey}
-        underlineColorAndroid={color.transparent}
-        {...rest}
-        style={inputStyle}
-        ref={forwardedRef}
-      />
-    </View>
-  )
+    return (
+      <View style={containerStyle}>
+        <Text preset="fieldLabel" tx={labelTx} text={label} />
+        <TextInput
+          placeholder={actualPlaceholder}
+          placeholderTextColor={color.palette.lighterGrey}
+          underlineColorAndroid={color.transparent}
+          {...rest}
+          style={inputStyle}
+          ref={forwardedRef}
+        />
+      </View>
+    )
+  }
 }
diff --git a/IgniteDiffApp/app/components/text/index.ts b/IgniteDiffApp/app/components/text/index.ts
new file mode 100644
index 0000000..6417a56
--- /dev/null
+++ b/IgniteDiffApp/app/components/text/index.ts
@@ -0,0 +1 @@
+export * from "./text"
diff --git a/IgniteDiffApp/app/components/text/text.story.tsx b/IgniteDiffApp/app/components/text/text.story.tsx
index cad1ae6..180ad79 100644
--- a/IgniteDiffApp/app/components/text/text.story.tsx
+++ b/IgniteDiffApp/app/components/text/text.story.tsx
@@ -8,7 +8,7 @@ import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { color } from "../../theme"
 import { Text } from "./text"
 
-declare let module
+declare var module
 
 const VIEWSTYLE = {
   flex: 1,
@@ -57,7 +57,7 @@ storiesOf("Text", module)
       <UseCase text="tx" usage="Used for looking up i18n keys.">
         <View style={VIEWSTYLE}>
           <Text tx="common.ok" />
-          <Text tx="common.cancel" />
+          <Text tx="omglol" />
         </View>
       </UseCase>
       <UseCase
diff --git a/IgniteDiffApp/app/components/wallpaper/bg.png b/IgniteDiffApp/app/components/wallpaper/BG.png
similarity index 100%
rename from IgniteDiffApp/app/components/wallpaper/bg.png
rename to IgniteDiffApp/app/components/wallpaper/BG.png
diff --git a/IgniteDiffApp/app/components/wallpaper/index.ts b/IgniteDiffApp/app/components/wallpaper/index.ts
new file mode 100644
index 0000000..e66cbc2
--- /dev/null
+++ b/IgniteDiffApp/app/components/wallpaper/index.ts
@@ -0,0 +1 @@
+export * from "./wallpaper"
diff --git a/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx b/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx
index 3516574..18599c6 100644
--- a/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx
+++ b/IgniteDiffApp/app/components/wallpaper/wallpaper.story.tsx
@@ -3,7 +3,7 @@ import { storiesOf } from "@storybook/react-native"
 import { StoryScreen, Story, UseCase } from "../../../storybook/views"
 import { Wallpaper } from "./wallpaper"
 
-declare let module
+declare var module
 
 storiesOf("Wallpaper", module)
   .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)
diff --git a/IgniteDiffApp/app/config/env.js b/IgniteDiffApp/app/config/env.js
deleted file mode 100644
index c5d7ffc..0000000
--- a/IgniteDiffApp/app/config/env.js
+++ /dev/null
@@ -1 +0,0 @@
-module.exports = __DEV__ ? require("./env.dev") : require("./env.prod")
diff --git a/IgniteDiffApp/app/i18n/i18n.ts b/IgniteDiffApp/app/i18n/i18n.ts
index 79de3d8..e8eed38 100644
--- a/IgniteDiffApp/app/i18n/i18n.ts
+++ b/IgniteDiffApp/app/i18n/i18n.ts
@@ -8,7 +8,6 @@ i18n.fallbacks = true
 i18n.translations = { en, ja }
 
 const fallback = { languageTag: "en", isRTL: false }
-
 const { languageTag } =
   RNLocalize.findBestAvailableLanguage(Object.keys(i18n.translations)) || fallback
 i18n.locale = languageTag
diff --git a/IgniteDiffApp/app/models/environment.ts b/IgniteDiffApp/app/models/environment.ts
index e8569b1..4277b6a 100644
--- a/IgniteDiffApp/app/models/environment.ts
+++ b/IgniteDiffApp/app/models/environment.ts
@@ -1,11 +1,6 @@
+import { Reactotron } from "../services/reactotron"
 import { Api } from "../services/api"
 
-let ReactotronDev
-if (__DEV__) {
-  const { Reactotron } = require("../services/reactotron")
-  ReactotronDev = Reactotron
-}
-
 /**
  * The environment is a place where services and shared dependencies between
  * models live.  They are made available to every model via dependency injection.
@@ -13,25 +8,20 @@ if (__DEV__) {
 export class Environment {
   constructor() {
     // create each service
-    if (__DEV__) {
-      // dev-only services
-      this.reactotron = new ReactotronDev()
-    }
+    this.reactotron = new Reactotron()
     this.api = new Api()
   }
 
   async setup() {
     // allow each service to setup
-    if (__DEV__) {
-      await this.reactotron.setup()
-    }
+    await this.reactotron.setup()
     await this.api.setup()
   }
 
   /**
    * Reactotron is only available in dev.
    */
-  reactotron: typeof ReactotronDev
+  reactotron: Reactotron
 
   /**
    * Our api.
diff --git a/IgniteDiffApp/app/models/extensions/index.ts b/IgniteDiffApp/app/models/extensions/index.ts
new file mode 100644
index 0000000..455be6c
--- /dev/null
+++ b/IgniteDiffApp/app/models/extensions/index.ts
@@ -0,0 +1,3 @@
+export * from "./with-environment"
+export * from "./with-root-store"
+export * from "./with-status"
diff --git a/IgniteDiffApp/app/models/extensions/with-environment.ts b/IgniteDiffApp/app/models/extensions/with-environment.ts
index 9fe5fd5..b951805 100644
--- a/IgniteDiffApp/app/models/extensions/with-environment.ts
+++ b/IgniteDiffApp/app/models/extensions/with-environment.ts
@@ -11,7 +11,7 @@ export const withEnvironment = (self: IStateTreeNode) => ({
      * The environment.
      */
     get environment() {
-      return getEnv<Environment>(self)
+      return getEnv(self) as Environment
     },
   },
 })
diff --git a/IgniteDiffApp/app/models/extensions/with-root-store.ts b/IgniteDiffApp/app/models/extensions/with-root-store.ts
index eff769c..23f78ee 100644
--- a/IgniteDiffApp/app/models/extensions/with-root-store.ts
+++ b/IgniteDiffApp/app/models/extensions/with-root-store.ts
@@ -1,5 +1,5 @@
 import { getRoot, IStateTreeNode } from "mobx-state-tree"
-import { RootStoreModel } from "../root-store/root-store"
+import { RootStore } from "../root-store"
 
 /**
  * Adds a rootStore property to the node for a convenient
@@ -11,7 +11,7 @@ export const withRootStore = (self: IStateTreeNode) => ({
      * The root store.
      */
     get rootStore() {
-      return getRoot<typeof RootStoreModel>(self)
+      return getRoot(self) as RootStore
     },
   },
 })
diff --git a/IgniteDiffApp/app/models/index.ts b/IgniteDiffApp/app/models/index.ts
deleted file mode 100644
index 3819dcc..0000000
--- a/IgniteDiffApp/app/models/index.ts
+++ /dev/null
@@ -1,6 +0,0 @@
-export * from "./extensions/with-environment"
-export * from "./extensions/with-root-store"
-export * from "./extensions/with-status"
-export * from "./root-store/root-store"
-export * from "./root-store/root-store-context"
-export * from "./root-store/setup-root-store"
diff --git a/IgniteDiffApp/app/models/root-store/index.ts b/IgniteDiffApp/app/models/root-store/index.ts
new file mode 100644
index 0000000..cf74098
--- /dev/null
+++ b/IgniteDiffApp/app/models/root-store/index.ts
@@ -0,0 +1,2 @@
+export * from "./root-store"
+export * from "./setup-root-store"
diff --git a/IgniteDiffApp/app/models/root-store/root-store-context.ts b/IgniteDiffApp/app/models/root-store/root-store-context.ts
deleted file mode 100644
index 537e51c..0000000
--- a/IgniteDiffApp/app/models/root-store/root-store-context.ts
+++ /dev/null
@@ -1,22 +0,0 @@
-import { createContext, useContext } from "react"
-import { RootStore } from "./root-store"
-
-/**
- * Create a context we can use to
- * - Provide access to our stores from our root component
- * - Consume stores in our screens (or other components, though it's
- *   preferable to just connect screens)
- */
-const RootStoreContext = createContext<RootStore>({} as RootStore)
-
-/**
- * The provider our root component will use to expose the root store
- */
-export const RootStoreProvider = RootStoreContext.Provider
-
-/**
- * A hook that screens can use to gain access to our stores, with
- * `const { someStore, someOtherStore } = useStores()`,
- * or less likely: `const rootStore = useStores()`
- */
-export const useStores = () => useContext(RootStoreContext)
diff --git a/IgniteDiffApp/app/models/root-store/root-store.ts b/IgniteDiffApp/app/models/root-store/root-store.ts
index 3bc0eaa..4b3874b 100644
--- a/IgniteDiffApp/app/models/root-store/root-store.ts
+++ b/IgniteDiffApp/app/models/root-store/root-store.ts
@@ -1,19 +1,19 @@
 import { Instance, SnapshotOut, types } from "mobx-state-tree"
+import { NavigationStoreModel } from "../../navigation/navigation-store"
 
 /**
- * A RootStore model.
+ * An RootStore model.
  */
-// prettier-ignore
 export const RootStoreModel = types.model("RootStore").props({
-
+  navigationStore: types.optional(NavigationStoreModel, {}),
 })
 
 /**
  * The RootStore instance.
  */
-export interface RootStore extends Instance<typeof RootStoreModel> {}
+export type RootStore = Instance<typeof RootStoreModel>
 
 /**
- * The data of a RootStore.
+ * The data of an RootStore.
  */
-export interface RootStoreSnapshot extends SnapshotOut<typeof RootStoreModel> {}
+export type RootStoreSnapshot = SnapshotOut<typeof RootStoreModel>
diff --git a/IgniteDiffApp/app/navigation/back-button-handler.tsx b/IgniteDiffApp/app/navigation/back-button-handler.tsx
new file mode 100644
index 0000000..8a4ec41
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/back-button-handler.tsx
@@ -0,0 +1,57 @@
+import * as React from "react"
+import { BackHandler } from "react-native"
+import { inject, observer } from "mobx-react"
+import { NavigationActions } from "react-navigation"
+import { NavigationStore } from "../navigation/navigation-store"
+
+interface BackButtonHandlerProps {
+  navigationStore?: NavigationStore
+  /**
+   * Are we allowed to exit?
+   */
+  canExit(routeName: string): boolean
+}
+
+@inject("navigationStore")
+@observer
+export class BackButtonHandler extends React.Component<BackButtonHandlerProps, {}> {
+  /**
+   * Subscribe when we come to life.
+   */
+  componentDidMount() {
+    BackHandler.addEventListener("hardwareBackPress", this.onBackPress)
+  }
+
+  /**
+   * Unsubscribe when we're done.
+   */
+  componentWillUnmount() {
+    BackHandler.removeEventListener("hardwareBackPress", this.onBackPress)
+  }
+
+  /**
+   * Fires when the back button is pressed on android.
+   */
+  onBackPress = () => {
+    // grab the current route
+    const routeName = this.props.navigationStore.findCurrentRoute().routeName
+
+    // are we allowed to exit?
+    if (this.props.canExit(routeName)) {
+      // let the system know we've not handled this event
+      return false
+    } else {
+      // we can't exit, so let's turn this into a back action
+      this.props.navigationStore.dispatch(NavigationActions.back())
+      // let the system know we've handled this event
+      return true
+    }
+  }
+
+  /**
+   * Renders the children or nothing if they weren't passed.
+   */
+  render() {
+    return this.props.children
+  }
+}
diff --git a/IgniteDiffApp/app/navigation/index.ts b/IgniteDiffApp/app/navigation/index.ts
index 40a84d1..47fccb6 100644
--- a/IgniteDiffApp/app/navigation/index.ts
+++ b/IgniteDiffApp/app/navigation/index.ts
@@ -1,3 +1 @@
-export * from "./primary-navigator"
-export * from "./root-navigator"
-export * from "./navigation-utilities"
+export * from "./stateful-navigator"
diff --git a/IgniteDiffApp/app/navigation/navigation-config.ts b/IgniteDiffApp/app/navigation/navigation-config.ts
new file mode 100644
index 0000000..63c7e96
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/navigation-config.ts
@@ -0,0 +1,18 @@
+export interface NavigationConfig {
+  /**
+   * A list of routes from which we're allowed to leave the app when
+   * the user presses the back button on Android.
+   *
+   * Anything not on this list will be a standard `back` action in
+   * react-navigation.
+   */
+  exitRoutes: string[]
+}
+
+/**
+ * The default navigation config for this app. You'd only really need
+ * to override this for testing.
+ */
+export const DEFAULT_NAVIGATION_CONFIG: NavigationConfig = {
+  exitRoutes: ["firstExample"],
+}
diff --git a/IgniteDiffApp/app/navigation/navigation-events.ts b/IgniteDiffApp/app/navigation/navigation-events.ts
new file mode 100644
index 0000000..fb6449f
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/navigation-events.ts
@@ -0,0 +1,56 @@
+import { types } from "mobx-state-tree"
+import { EventType, NavigationEventCallback } from "react-navigation"
+
+/**
+ * This mobx-state-tree model bestows a few events for working with `react-navigation`
+ * events.
+ *
+ * You use can `compose` or build directly off this to mixin these features.
+ */
+export const NavigationEvents = types.model("NavigationEvents").volatile(() => {
+  // who is currently subscribed to react-navigation events
+  const subs = new Set<NavigationEventCallback>()
+
+  /**
+   * Fires after we change our state.  You call this from the dispatch
+   * to ensure any subscribers are told about state changes.
+   *
+   * @param action The react-navigation action which triggered this update.
+   * @param oldState The previous navigation state.
+   * @param newState The next navigation state.
+   */
+  const fireSubscribers = (action: any, oldState: any, newState: any) => {
+    // tell each subscriber out this
+    subs.forEach(subscriber => {
+      subscriber({
+        type: "action",
+        action,
+        state: newState,
+        lastState: oldState,
+      })
+    })
+  }
+
+  /**
+   * Provides a way from screens (for example) to subscribe to `react-navigation`
+   * events.
+   *
+   * @param eventName The event.
+   * @param handler Some strange handler
+   */
+  const addListener = (eventName: EventType, handler: NavigationEventCallback) => {
+    if (eventName !== "action") {
+      return { remove: () => {} }
+    }
+
+    // subscribe
+    subs.add(handler)
+
+    // return the instructions on how to unsubscribe
+    return {
+      remove: () => subs.delete(handler),
+    }
+  }
+
+  return { addListener, fireSubscribers, subs }
+})
diff --git a/IgniteDiffApp/app/navigation/navigation-store.ts b/IgniteDiffApp/app/navigation/navigation-store.ts
new file mode 100644
index 0000000..005d415
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/navigation-store.ts
@@ -0,0 +1,92 @@
+import { Instance, types } from "mobx-state-tree"
+import { RootNavigator } from "./root-navigator"
+import { NavigationActions, NavigationAction } from "react-navigation"
+import { NavigationEvents } from "./navigation-events"
+
+const DEFAULT_STATE = RootNavigator.router.getStateForAction(NavigationActions.init(), null)
+
+/**
+ * Finds the current route.
+ *
+ * @param navState the current nav state
+ */
+function findCurrentRoute(navState) {
+  const route = navState.routes[navState.index]
+  if (route.routes) {
+    return findCurrentRoute(route)
+  }
+  return route
+}
+
+/**
+ * Tracks the navigation state for `react-navigation` as well as providers
+ * the actions for changing that state.
+ */
+export const NavigationStoreModel = NavigationEvents.named("NavigationStore")
+  .props({
+    /**
+     * the navigation state tree (Frozen here means it is immutable.)
+     */
+    state: types.optional(types.frozen(), DEFAULT_STATE),
+  })
+  .preProcessSnapshot(snapshot => {
+    if (!snapshot || !snapshot.state) return snapshot
+
+    try {
+      // make sure react-navigation can handle our state
+      RootNavigator.router.getPathAndParamsForState(snapshot.state)
+      return snapshot
+    } catch (e) {
+      // otherwise restore default state
+      return { ...snapshot, state: DEFAULT_STATE }
+    }
+  })
+  .actions(self => ({
+    /**
+     * Return all subscribers
+     */
+    actionSubscribers() {
+      return self.subs
+    },
+
+    /**
+     * Fires when navigation happens.
+     *
+     * Our job is to update the state for this new navigation action.
+     *
+     * @param action The new navigation action to perform
+     * @param shouldPush Should we push or replace the whole stack?
+     */
+    dispatch(action: NavigationAction, shouldPush: boolean = true) {
+      const previousNavState = shouldPush ? self.state : null
+      self.state = RootNavigator.router.getStateForAction(action, previousNavState) || self.state
+      self.fireSubscribers(action, previousNavState, self.state)
+      return true
+    },
+
+    /**
+     * Resets the navigation back to the start.
+     */
+    reset() {
+      self.state = DEFAULT_STATE
+    },
+
+    /**
+     * Finds the current route.
+     */
+    findCurrentRoute() {
+      return findCurrentRoute(self.state)
+    },
+  }))
+  .actions(self => ({
+    /**
+     * Navigate to another place.
+     *
+     * @param routeName The route name.
+     */
+    navigateTo(routeName: string) {
+      self.dispatch(NavigationActions.navigate({ routeName }))
+    },
+  }))
+
+export type NavigationStore = Instance<typeof NavigationStoreModel>
diff --git a/IgniteDiffApp/app/navigation/navigation-utilities.tsx b/IgniteDiffApp/app/navigation/navigation-utilities.tsx
deleted file mode 100644
index 6f59feb..0000000
--- a/IgniteDiffApp/app/navigation/navigation-utilities.tsx
+++ /dev/null
@@ -1,127 +0,0 @@
-import React, { useState, useEffect, useRef } from "react"
-import { BackHandler } from "react-native"
-import { PartialState, NavigationState, NavigationContainerRef } from "@react-navigation/native"
-
-export const RootNavigation = {
-  navigate(name: string) {
-    name // eslint-disable-line no-unused-expressions
-  },
-  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function
-  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function
-  getRootState(): NavigationState {
-    return {} as any
-  },
-}
-
-export const setRootNavigation = (ref: React.RefObject<NavigationContainerRef>) => {
-  for (const method in RootNavigation) {
-    RootNavigation[method] = (...args: any) => {
-      if (ref.current) {
-        return ref.current[method](...args)
-      }
-    }
-  }
-}
-
-/**
- * Gets the current screen from any navigation state.
- */
-export function getActiveRouteName(state: NavigationState | PartialState<NavigationState>) {
-  const route = state.routes[state.index]
-
-  // Found the active route -- return the name
-  if (!route.state) return route.name
-
-  // Recursive call to deal with nested routers
-  return getActiveRouteName(route.state)
-}
-
-/**
- * Hook that handles Android back button presses and forwards those on to
- * the navigation or allows exiting the app.
- */
-export function useBackButtonHandler(
-  ref: React.RefObject<NavigationContainerRef>,
-  canExit: (routeName: string) => boolean,
-) {
-  const canExitRef = useRef(canExit)
-
-  useEffect(() => {
-    canExitRef.current = canExit
-  }, [canExit])
-
-  useEffect(() => {
-    // We'll fire this when the back button is pressed on Android.
-    const onBackPress = () => {
-      const navigation = ref.current
-
-      if (navigation == null) {
-        return false
-      }
-
-      // grab the current route
-      const routeName = getActiveRouteName(navigation.getRootState())
-
-      // are we allowed to exit?
-      if (canExitRef.current(routeName)) {
-        // let the system know we've not handled this event
-        return false
-      }
-
-      // we can't exit, so let's turn this into a back action
-      if (navigation.canGoBack()) {
-        navigation.goBack()
-
-        return true
-      }
-
-      return false
-    }
-
-    // Subscribe when we come to life
-    BackHandler.addEventListener("hardwareBackPress", onBackPress)
-
-    // Unsubscribe when we're done
-    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
-  }, [ref])
-}
-
-/**
- * Custom hook for persisting navigation state.
- */
-export function useNavigationPersistence(storage: any, persistenceKey: string) {
-  const [initialNavigationState, setInitialNavigationState] = useState()
-  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(true)
-
-  const routeNameRef = useRef()
-  const onNavigationStateChange = state => {
-    const previousRouteName = routeNameRef.current
-    const currentRouteName = getActiveRouteName(state)
-
-    if (previousRouteName !== currentRouteName) {
-      // track screens.
-      __DEV__ && console.tron.log(currentRouteName)
-    }
-
-    // Save the current route name for later comparision
-    routeNameRef.current = currentRouteName
-
-    // Persist state to storage
-    storage.save(persistenceKey, state)
-  }
-
-  const restoreState = async () => {
-    try {
-      const state = await storage.load(persistenceKey)
-      if (state) setInitialNavigationState(state)
-    } finally {
-      setIsRestoringNavigationState(false)
-    }
-  }
-
-  useEffect(() => {
-    if (isRestoringNavigationState) restoreState()
-  }, [isRestoringNavigationState])
-
-  return { onNavigationStateChange, restoreState, initialNavigationState }
-}
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.ts b/IgniteDiffApp/app/navigation/primary-navigator.ts
new file mode 100644
index 0000000..895d1c4
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/primary-navigator.ts
@@ -0,0 +1,13 @@
+import { createStackNavigator } from "react-navigation"
+import { WelcomeScreen } from "../screens/welcome-screen"
+import { DemoScreen } from "../screens/demo-screen"
+
+export const PrimaryNavigator = createStackNavigator(
+  {
+    welcome: { screen: WelcomeScreen },
+    demo: { screen: DemoScreen },
+  },
+  {
+    headerMode: "none",
+  },
+)
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.tsx b/IgniteDiffApp/app/navigation/primary-navigator.tsx
deleted file mode 100644
index 36255b3..0000000
--- a/IgniteDiffApp/app/navigation/primary-navigator.tsx
+++ /dev/null
@@ -1,56 +0,0 @@
-/**
- * This is the navigator you will modify to display the logged-in screens of your app.
- * You can use RootNavigator to also display an auth flow or other user flows.
- *
- * You'll likely spend most of your time in this file.
- */
-import React from "react"
-
-import { createNativeStackNavigator } from "react-native-screens/native-stack"
-import { WelcomeScreen, DemoScreen } from "../screens"
-
-/**
- * This type allows TypeScript to know what routes are defined in this navigator
- * as well as what properties (if any) they might take when navigating to them.
- *
- * If no params are allowed, pass through `undefined`. Generally speaking, we
- * recommend using your MobX-State-Tree store(s) to keep application state
- * rather than passing state through navigation params.
- *
- * For more information, see this documentation:
- *   https://reactnavigation.org/docs/params/
- *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
- */
-export type PrimaryParamList = {
-  welcome: undefined
-  demo: undefined
-}
-
-// Documentation: https://github.com/software-mansion/react-native-screens/tree/master/native-stack
-const Stack = createNativeStackNavigator<PrimaryParamList>()
-
-export function PrimaryNavigator() {
-  return (
-    <Stack.Navigator
-      screenOptions={{
-        headerShown: false,
-        gestureEnabled: true,
-      }}
-    >
-      <Stack.Screen name="welcome" component={WelcomeScreen} />
-      <Stack.Screen name="demo" component={DemoScreen} />
-    </Stack.Navigator>
-  )
-}
-
-/**
- * A list of routes from which we're allowed to leave the app when
- * the user presses the back button on Android.
- *
- * Anything not on this list will be a standard `back` action in
- * react-navigation.
- *
- * `canExit` is used in ./app/app.tsx in the `useBackButtonHandler` hook.
- */
-const exitRoutes = ["welcome"]
-export const canExit = (routeName: string) => exitRoutes.includes(routeName)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.ts b/IgniteDiffApp/app/navigation/root-navigator.ts
new file mode 100644
index 0000000..a2fe3f1
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/root-navigator.ts
@@ -0,0 +1,12 @@
+import { createStackNavigator } from "react-navigation"
+import { PrimaryNavigator } from "./primary-navigator"
+
+export const RootNavigator = createStackNavigator(
+  {
+    primaryStack: { screen: PrimaryNavigator },
+  },
+  {
+    headerMode: "none",
+    navigationOptions: { gesturesEnabled: false },
+  },
+)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.tsx b/IgniteDiffApp/app/navigation/root-navigator.tsx
deleted file mode 100644
index 2016685..0000000
--- a/IgniteDiffApp/app/navigation/root-navigator.tsx
+++ /dev/null
@@ -1,61 +0,0 @@
-/**
- * The root navigator is used to switch between major navigation flows of your app.
- * Generally speaking, it will contain an auth flow (registration, login, forgot password)
- * and a "main" flow (which is contained in your PrimaryNavigator) which the user
- * will use once logged in.
- */
-import React from "react"
-import { NavigationContainer, NavigationContainerRef } from "@react-navigation/native"
-
-import { createNativeStackNavigator } from "react-native-screens/native-stack"
-import { PrimaryNavigator } from "./primary-navigator"
-
-/**
- * This type allows TypeScript to know what routes are defined in this navigator
- * as well as what properties (if any) they might take when navigating to them.
- *
- * We recommend using MobX-State-Tree store(s) to handle state rather than navigation params.
- *
- * For more information, see this documentation:
- *   https://reactnavigation.org/docs/params/
- *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
- */
-export type RootParamList = {
-  primaryStack: undefined
-}
-
-const Stack = createNativeStackNavigator<RootParamList>()
-
-const RootStack = () => {
-  return (
-    <Stack.Navigator
-      screenOptions={{
-        headerShown: false,
-        gestureEnabled: true,
-
-        stackPresentation: "modal",
-      }}
-    >
-      <Stack.Screen
-        name="primaryStack"
-        component={PrimaryNavigator}
-        options={{
-          headerShown: false,
-        }}
-      />
-    </Stack.Navigator>
-  )
-}
-
-export const RootNavigator = React.forwardRef<
-  NavigationContainerRef,
-  Partial<React.ComponentProps<typeof NavigationContainer>>
->((props, ref) => {
-  return (
-    <NavigationContainer {...props} ref={ref}>
-      <RootStack />
-    </NavigationContainer>
-  )
-})
-
-RootNavigator.displayName = "RootNavigator"
diff --git a/IgniteDiffApp/app/navigation/stateful-navigator.tsx b/IgniteDiffApp/app/navigation/stateful-navigator.tsx
new file mode 100644
index 0000000..7e5b582
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/stateful-navigator.tsx
@@ -0,0 +1,37 @@
+import * as React from "react"
+import { inject, observer } from "mobx-react"
+// @ts-ignore: until they update @type/react-navigation
+import { getNavigation, NavigationScreenProp, NavigationState } from "react-navigation"
+import { RootNavigator } from "./root-navigator"
+import { NavigationStore } from "./navigation-store"
+
+interface StatefulNavigatorProps {
+  navigationStore?: NavigationStore
+}
+
+@inject("navigationStore")
+@observer
+export class StatefulNavigator extends React.Component<StatefulNavigatorProps, {}> {
+  currentNavProp: NavigationScreenProp<NavigationState>
+
+  getCurrentNavigation = () => {
+    return this.currentNavProp
+  }
+
+  render() {
+    // grab our state & dispatch from our navigation store
+    const { state, dispatch, actionSubscribers } = this.props.navigationStore
+
+    // create a custom navigation implementation
+    this.currentNavProp = getNavigation(
+      RootNavigator.router,
+      state,
+      dispatch,
+      actionSubscribers(),
+      {},
+      this.getCurrentNavigation,
+    )
+
+    return <RootNavigator navigation={this.currentNavProp} />
+  }
+}
diff --git a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
index 7fd53c4..1dc4b4d 100644
--- a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
+++ b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
@@ -1,13 +1,23 @@
-import React, { FunctionComponent as Component } from "react"
-import { Image, ImageStyle, Platform, TextStyle, View, ViewStyle } from "react-native"
-import { useNavigation } from "@react-navigation/native"
-import { observer } from "mobx-react-lite"
-import { BulletItem, Button, Header, Text, Screen, Wallpaper } from "../../components"
+import * as React from "react"
+import {
+  Image,
+  ImageStyle,
+  Platform,
+  TextStyle,
+  View,
+  ViewStyle,
+} from "react-native"
+import { NavigationScreenProps } from "react-navigation"
+import { Screen } from "../../components/screen"
+import { Text } from "../../components/text"
+import { Button } from "../../components/button"
+import { Wallpaper } from "../../components/wallpaper"
+import { Header } from "../../components/header"
 import { color, spacing } from "../../theme"
+import { logoIgnite, heart } from "./"
+import { BulletItem } from "../../components/bullet-item"
 import { Api } from "../../services/api"
 import { save } from "../../utils/storage"
-export const logoIgnite = require("./logo-ignite.png")
-export const heart = require("./heart.png")
 
 const FULL: ViewStyle = { flex: 1 }
 const CONTAINER: ViewStyle = {
@@ -77,81 +87,85 @@ const HINT: TextStyle = {
   marginVertical: spacing[2],
 }
 
-export const DemoScreen: Component = observer(function DemoScreen() {
-  const navigation = useNavigation()
-  const goBack = () => () => navigation.goBack()
+export interface DemoScreenProps extends NavigationScreenProps<{}> {}
 
-  const demoReactotron = React.useMemo(
-    () => async () => {
-      console.tron.log("Your Friendly tron log message")
-      console.tron.logImportant("I am important")
-      console.tron.display({
-        name: "DISPLAY",
-        value: {
-          numbers: 1,
-          strings: "strings",
-          booleans: true,
-          arrays: [1, 2, 3],
-          objects: {
+export class DemoScreen extends React.Component<DemoScreenProps, {}> {
+  goBack = () => this.props.navigation.goBack(null)
+
+  demoReactotron = async () => {
+    console.tron.log("Your Friendly tron log message")
+    console.tron.logImportant("I am important")
+    console.tron.display({
+      name: "DISPLAY",
+      value: {
+        numbers: 1,
+        strings: "strings",
+        booleans: true,
+        arrays: [1, 2, 3],
+        objects: {
+          deeper: {
             deeper: {
-              deeper: {
-                yay: "👾",
-              },
+              yay: "👾",
             },
           },
-          functionNames: function hello() {
-            /* dummy function */
-          },
         },
-        preview: "More control with display()",
-        important: true,
-        image: {
-          uri:
-            "https://avatars2.githubusercontent.com/u/3902527?s=200&u=a0d16b13ed719f35d95ca0f4440f5d07c32c349a&v=4",
-        },
-      })
-      // make an API call for the demo
-      // Don't do API like this, use store's API
-      const demo = new Api()
-      demo.setup()
-      demo.getUser("1")
-      // Let's do some async storage stuff
-      await save("Cool Name", "Boaty McBoatface")
-    },
-    [],
-  )
+        functionNames: function hello() {},
+      },
+      preview: "More control with display()",
+      important: true,
+      image: {
+        uri:
+          "https://avatars2.githubusercontent.com/u/3902527?s=200&u=a0d16b13ed719f35d95ca0f4440f5d07c32c349a&v=4",
+      },
+    })
+    // make an API call for the demo
+    // Don't do API like this, use store's API
+    const demo = new Api()
+    demo.setup()
+    demo.getUser("1")
+    // Let's do some async storage stuff
+    await save("Cool Name", "Boaty McBoatface")
+  }
 
-  return (
-    <View testID="DemoScreen" style={FULL}>
-      <Wallpaper />
-      <Screen style={CONTAINER} preset="scroll" backgroundColor={color.transparent}>
-        <Header
-          headerTx="demoScreen.howTo"
-          leftIcon="back"
-          onLeftPress={goBack}
-          style={HEADER}
-          titleStyle={HEADER_TITLE}
-        />
-        <Text style={TITLE} preset="header" tx="demoScreen.title" />
-        <Text style={TAGLINE} tx="demoScreen.tagLine" />
-        <BulletItem text="Load up Reactotron!  You can inspect your app, view the events, interact, and so much more!" />
-        <BulletItem text="Integrated here, Navigation with State, TypeScript, Storybook, Solidarity, and i18n." />
-        <View>
-          <Button
-            style={DEMO}
-            textStyle={DEMO_TEXT}
-            tx="demoScreen.reactotron"
-            onPress={demoReactotron}
+  render() {
+    return (
+      <View testID="DemoScreen" style={FULL}>
+        <Wallpaper />
+        <Screen
+          style={CONTAINER}
+          preset="scroll"
+          backgroundColor={color.transparent}>
+          <Header
+            headerTx="demoScreen.howTo"
+            leftIcon="back"
+            onLeftPress={this.goBack}
+            style={HEADER}
+            titleStyle={HEADER_TITLE}
           />
-          <Text style={HINT} tx={`demoScreen.${Platform.OS}ReactotronHint`} />
-        </View>
-        <Image source={logoIgnite} style={IGNITE} />
-        <View style={LOVE_WRAPPER}>
-          <Text style={LOVE} text="Made with" />
-          <Image source={heart} style={HEART} />
-          <Text style={LOVE} text="by Infinite Red" />
-        </View>
-      </Screen>
-    </View>
-  )
-})
+          <Text style={TITLE} preset="header" tx="demoScreen.title" />
+          <Text style={TAGLINE} tx="demoScreen.tagLine" />
+          <BulletItem text="Load up Reactotron!  You can inspect your app, view the events, interact, and so much more!" />
+          <BulletItem text="Integrated here, Navigation with State, TypeScript, Storybook, Solidarity, and i18n." />
+          <View>
+            <Button
+              style={DEMO}
+              textStyle={DEMO_TEXT}
+              tx="demoScreen.reactotron"
+              onPress={this.demoReactotron}
+            />
+            <Text
+              style={HINT}
+              tx={`demoScreen.${Platform.OS}ReactotronHint`}
+            />
+          </View>
+          <Image source={logoIgnite} style={IGNITE} />
+          <View style={LOVE_WRAPPER}>
+            <Text style={LOVE} text="Made with" />
+            <Image source={heart} style={HEART} />
+            <Text style={LOVE} text="by Infinite Red" />
+          </View>
+        </Screen>
+      </View>
+    )
+  }
+}
diff --git a/IgniteDiffApp/app/screens/demo-screen/index.ts b/IgniteDiffApp/app/screens/demo-screen/index.ts
new file mode 100644
index 0000000..7108f30
--- /dev/null
+++ b/IgniteDiffApp/app/screens/demo-screen/index.ts
@@ -0,0 +1,3 @@
+export * from "./demo-screen"
+export const logoIgnite = require("./logo-ignite.png")
+export const heart = require("./heart.png")
diff --git a/IgniteDiffApp/app/screens/index.ts b/IgniteDiffApp/app/screens/index.ts
deleted file mode 100644
index 7f8af77..0000000
--- a/IgniteDiffApp/app/screens/index.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-export * from "./welcome-screen/welcome-screen"
-export * from "./demo-screen/demo-screen"
diff --git a/IgniteDiffApp/app/screens/welcome-screen/index.ts b/IgniteDiffApp/app/screens/welcome-screen/index.ts
new file mode 100644
index 0000000..680fba4
--- /dev/null
+++ b/IgniteDiffApp/app/screens/welcome-screen/index.ts
@@ -0,0 +1,2 @@
+export * from "./welcome-screen"
+export const bowserLogo = require("./bowser.png")
diff --git a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
index c9093f6..b30adc1 100644
--- a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
+++ b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
@@ -1,10 +1,13 @@
-import React, { FunctionComponent as Component } from "react"
+import * as React from "react"
 import { View, Image, ViewStyle, TextStyle, ImageStyle, SafeAreaView } from "react-native"
-import { useNavigation } from "@react-navigation/native"
-import { observer } from "mobx-react-lite"
-import { Button, Header, Screen, Text, Wallpaper } from "../../components"
+import { NavigationScreenProps } from "react-navigation"
+import { Text } from "../../components/text"
+import { Button } from "../../components/button"
+import { Screen } from "../../components/screen"
+import { Wallpaper } from "../../components/wallpaper"
+import { Header } from "../../components/header"
 import { color, spacing } from "../../theme"
-const bowserLogo = require("./bowser.png")
+import { bowserLogo } from "./"
 
 const FULL: ViewStyle = { flex: 1 }
 const CONTAINER: ViewStyle = {
@@ -75,42 +78,50 @@ const FOOTER_CONTENT: ViewStyle = {
   paddingHorizontal: spacing[4],
 }
 
-export const WelcomeScreen: Component = observer(function WelcomeScreen() {
-  const navigation = useNavigation()
-  const nextScreen = () => navigation.navigate("demo")
+export interface WelcomeScreenProps extends NavigationScreenProps<{}> {}
 
-  return (
-    <View testID="WelcomeScreen" style={FULL}>
-      <Wallpaper />
-      <Screen style={CONTAINER} preset="scroll" backgroundColor={color.transparent}>
-        <Header headerTx="welcomeScreen.poweredBy" style={HEADER} titleStyle={HEADER_TITLE} />
-        <Text style={TITLE_WRAPPER}>
-          <Text style={TITLE} text="Your new app, " />
-          <Text style={ALMOST} text="almost" />
-          <Text style={TITLE} text="!" />
-        </Text>
-        <Text style={TITLE} preset="header" tx="welcomeScreen.readyForLaunch" />
-        <Image source={bowserLogo} style={BOWSER} />
-        <Text style={CONTENT}>
-          This probably isn't what your app is going to look like. Unless your designer handed you
-          this screen and, in that case, congrats! You're ready to ship.
-        </Text>
-        <Text style={CONTENT}>
-          For everyone else, this is where you'll see a live preview of your fully functioning app
-          using Ignite.
-        </Text>
-      </Screen>
-      <SafeAreaView style={FOOTER}>
-        <View style={FOOTER_CONTENT}>
-          <Button
-            testID="next-screen-button"
-            style={CONTINUE}
-            textStyle={CONTINUE_TEXT}
-            tx="welcomeScreen.continue"
-            onPress={nextScreen}
+export class WelcomeScreen extends React.Component<WelcomeScreenProps, {}> {
+  nextScreen = () => this.props.navigation.navigate("demo")
+
+  render() {
+    return (
+      <View testID="WelcomeScreen" style={FULL}>
+        <Wallpaper />
+        <Screen
+          style={CONTAINER}
+          preset="scroll"
+          backgroundColor={color.transparent}>
+          <Header
+            headerTx="welcomeScreen.poweredBy"
+            style={HEADER}
+            titleStyle={HEADER_TITLE}
           />
-        </View>
-      </SafeAreaView>
-    </View>
-  )
-})
+          <Text style={TITLE_WRAPPER}>
+            <Text style={TITLE} text="Your new app, " />
+            <Text style={ALMOST} text="almost" />
+            <Text style={TITLE} text="!" />
+          </Text>
+          <Text style={TITLE} preset="header" tx="welcomeScreen.readyForLaunch" />
+          <Image source={bowserLogo} style={BOWSER} />
+          <Text style={CONTENT}>
+            This probably isn't what your app is going to look like. Unless your designer handed you this screen and, in that case, congrats! You're ready to ship.
+          </Text>
+          <Text style={CONTENT}>
+            For everyone else, this is where you'll see a live preview of your fully functioning app using Ignite.
+          </Text>
+        </Screen>
+        <SafeAreaView style={FOOTER}>
+          <View style={FOOTER_CONTENT}>
+            <Button
+              testID="next-screen-button"
+              style={CONTINUE}
+              textStyle={CONTINUE_TEXT}
+              tx="welcomeScreen.continue"
+              onPress={this.nextScreen}
+            />
+          </View>
+        </SafeAreaView>
+      </View>
+    )
+  }
+}
diff --git a/IgniteDiffApp/app/services/api/api-config.ts b/IgniteDiffApp/app/services/api/api-config.ts
index 3061563..aaf14df 100644
--- a/IgniteDiffApp/app/services/api/api-config.ts
+++ b/IgniteDiffApp/app/services/api/api-config.ts
@@ -1,7 +1,4 @@
-// Use this import if you want to use "env.js" file
-// const { API_URL } = require("../../config/env")
-// Or just specify it directly like this:
-const API_URL = "http://example.com"
+import { API_URL } from 'react-native-dotenv'
 
 /**
  * The options used to configure the API.
@@ -22,6 +19,6 @@ export interface ApiConfig {
  * The default configuration for the app.
  */
 export const DEFAULT_API_CONFIG: ApiConfig = {
-  url: API_URL || "https://jsonplaceholder.typicode.com",
-  timeout: 10000,
+  url: API_URL || 'https://jsonplaceholder.typicode.com',
+  timeout: 10000
 }
diff --git a/IgniteDiffApp/app/services/reactotron/reactotron.ts b/IgniteDiffApp/app/services/reactotron/reactotron.ts
index 94af9c7..51e2c79 100644
--- a/IgniteDiffApp/app/services/reactotron/reactotron.ts
+++ b/IgniteDiffApp/app/services/reactotron/reactotron.ts
@@ -5,7 +5,6 @@ import { onSnapshot } from "mobx-state-tree"
 import { ReactotronConfig, DEFAULT_REACTOTRON_CONFIG } from "./reactotron-config"
 import { mst } from "reactotron-mst"
 import { clear } from "../../utils/storage"
-import { RootNavigation } from "../../navigation"
 
 // Teach TypeScript about the bad things we want to do.
 declare global {
@@ -151,22 +150,12 @@ export class Reactotron {
       })
 
       Tron.onCustomCommand({
-        title: "Reset Navigation State",
-        description: "Resets the navigation state",
+        title: "Reset Navigation Store",
+        description: "Resets the navigation store",
         command: "resetNavigation",
         handler: () => {
-          console.tron.log("resetting navigation state")
-          RootNavigation.resetRoot({ routes: [] })
-        },
-      })
-
-      Tron.onCustomCommand({
-        title: "Go Back",
-        description: "Goes back",
-        command: "goBack",
-        handler: () => {
-          console.tron.log("Going back")
-          RootNavigation.goBack()
+          console.tron.log("resetting navigation store")
+          this.rootStore.navigationStore.reset()
         },
       })
 
diff --git a/IgniteDiffApp/app/theme/spacing.ts b/IgniteDiffApp/app/theme/spacing.ts
index b1b7935..8f3a556 100644
--- a/IgniteDiffApp/app/theme/spacing.ts
+++ b/IgniteDiffApp/app/theme/spacing.ts
@@ -1,7 +1,7 @@
 /**
  * NOTE TO DEVS:
  *
- * Spacing should be consistent and whitespace thought of as a first class technique up
+ * Spacing should consistent and whitespace thought of as a first class technique up
  * there with color and typefaces.
  *
  * Which type of scale you use is based on the design.
diff --git a/IgniteDiffApp/app/utils/ignore-warnings.ts b/IgniteDiffApp/app/utils/ignore-warnings.ts
deleted file mode 100644
index 60db24e..0000000
--- a/IgniteDiffApp/app/utils/ignore-warnings.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-/**
- * Ignore some yellowbox warnings. Some of these are for deprecated functions
- * that we haven't gotten around to replacing yet.
- */
-import { YellowBox } from "react-native"
-
-YellowBox.ignoreWarnings([
-  "componentWillMount is deprecated",
-  "componentWillReceiveProps is deprecated",
-  "Require cycle:",
-])
diff --git a/IgniteDiffApp/app/utils/keychain.ts b/IgniteDiffApp/app/utils/keychain.ts
index 34774bb..b6e4bf2 100644
--- a/IgniteDiffApp/app/utils/keychain.ts
+++ b/IgniteDiffApp/app/utils/keychain.ts
@@ -25,8 +25,8 @@ export async function load(server?: string) {
   if (server) {
     const creds = await ReactNativeKeychain.getInternetCredentials(server)
     return {
-      username: creds ? creds.username : null,
-      password: creds ? creds.password : null,
+      username: creds.username,
+      password: creds.password,
       server,
     }
   } else {
diff --git a/IgniteDiffApp/app/utils/storage/storage.test.ts b/IgniteDiffApp/app/utils/storage/storage.test.ts
index b93ac04..bbee423 100644
--- a/IgniteDiffApp/app/utils/storage/storage.test.ts
+++ b/IgniteDiffApp/app/utils/storage/storage.test.ts
@@ -1,5 +1,4 @@
 import AsyncStorage from "@react-native-community/async-storage"
-
 import { load, loadString, save, saveString, clear, remove } from "./storage"
 
 // fixtures
diff --git a/IgniteDiffApp/babel.config.js b/IgniteDiffApp/babel.config.js
index ceacb2b..fada381 100644
--- a/IgniteDiffApp/babel.config.js
+++ b/IgniteDiffApp/babel.config.js
@@ -1,15 +1,3 @@
 module.exports = {
   presets: ["module:metro-react-native-babel-preset"],
-  env: {
-    production: {},
-  },
-  plugins: [
-    [
-      "@babel/plugin-proposal-decorators",
-      {
-        legacy: true,
-      },
-    ],
-    ["@babel/plugin-proposal-optional-catch-binding"],
-  ],
 }
diff --git a/IgniteDiffApp/ignite/ignite.json b/IgniteDiffApp/ignite/ignite.json
index 2f28c79..35bcc6f 100644
--- a/IgniteDiffApp/ignite/ignite.json
+++ b/IgniteDiffApp/ignite/ignite.json
@@ -1,7 +1,6 @@
 {
-  "navigation": "react-navigation",
   "generators": {},
-  "createdWith": "3.5.1",
+  "createdWith": "3.1.6",
   "boilerplate": "ignite-bowser",
-  "boilerplateVersion": "5.1.0"
+  "boilerplateVersion": "4.6.3"
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/index.js b/IgniteDiffApp/index.js
index 7d7bb43..461a75b 100644
--- a/IgniteDiffApp/index.js
+++ b/IgniteDiffApp/index.js
@@ -7,24 +7,5 @@
 // side effect of breaking other tooling like mobile-center and react-native-rename.
 //
 // It's easier just to leave it here.
-import App from "./app/app.tsx"
-import { AppRegistry } from "react-native"
 
-/**
- * This needs to match what's found in your app_delegate.m and MainActivity.java.
- */
-const APP_NAME = "IgniteDiffApp"
-
-// Should we show storybook instead of our app?
-//
-// ⚠️ Leave this as `false` when checking into git.
-const SHOW_STORYBOOK = false
-
-let RootComponent = App
-if (__DEV__ && SHOW_STORYBOOK) {
-  // Only include Storybook if we're in dev mode
-  const { StorybookUIRoot } = require("./storybook")
-  RootComponent = StorybookUIRoot
-}
-
-AppRegistry.registerComponent(APP_NAME, () => RootComponent)
+import "./app/app.tsx"
diff --git a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
index 7499264..4967a9d 100644
--- a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
+++ b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
@@ -5,10 +5,8 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
 		00E356F31AD99517003FC87E /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
-		0D99D3DD7DA97FCBF48236E1 /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 202D8AC323B66D730E725B57 /* libPods-IgniteDiffApp.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
@@ -17,27 +15,28 @@
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		2DCD954D1E0B4F2C00145EB5 /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
-		7869632441737451A94FEF27 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C7968C27B75DB34AE6DEC6EA /* libPods-IgniteDiffApp-tvOS.a */; };
-		9EC794B0EA79F1E9141669F1 /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B516C76CACE97793558CC032 /* libPods-IgniteDiffAppTests.a */; };
-		A7CD49E63AE2CABFC588DB93 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 679E2B8DB770A23FFBEA0B0C /* libPods-IgniteDiffApp-tvOSTests.a */; };
-		2603314FF92C43AC8C2125E7 /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 434FA41BD9574F1F95972FC6 /* Montserrat-Black.ttf */; };
-		2252B542518143FAA544C23B /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0E57C73665E64120A0C2B1F4 /* Montserrat-BlackItalic.ttf */; };
-		268E7DAE61AC4069AA7F1190 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2451173EFD5F4906836C3947 /* Montserrat-Bold.ttf */; };
-		9446F1689775459280FA286A /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = AA37C2316F224F21810A4A7E /* Montserrat-BoldItalic.ttf */; };
-		03E7C4B09CCE434DBF5D883D /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 632ED3612EA7435EA3172E5C /* Montserrat-ExtraBold.ttf */; };
-		26D4806A24A64D99A95206BB /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 32D3D4822D6346098DD20BF9 /* Montserrat-ExtraBoldItalic.ttf */; };
-		1F4B12339FC74628BA764BEE /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 10F661C3DB8E47D8B2F3DB92 /* Montserrat-ExtraLight.ttf */; };
-		BA2A258D9DD74450AF1C052B /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1303AE23E4F94847870AB769 /* Montserrat-ExtraLightItalic.ttf */; };
-		20FD6E27B5174D99AB8244FB /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 414CDCF0038041BD8D4E13D6 /* Montserrat-Italic.ttf */; };
-		A7781750C31D40A890E303E0 /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = CEB7AA4A178444CC9275FCDB /* Montserrat-Light.ttf */; };
-		F3EAF9C12723493F8906B645 /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2389BD1796DB4C19A5C1A375 /* Montserrat-LightItalic.ttf */; };
-		6E86748A99F44CB5B8CCF51E /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2B81D35ED8D440D58877CABF /* Montserrat-Medium.ttf */; };
-		6B2B7C8A312F4E839B2C20FE /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5A81FED9828143D4B16E1C30 /* Montserrat-MediumItalic.ttf */; };
-		8AD187F41F394718BCAA69DF /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = AC83894EDFB8453BB65C6E8A /* Montserrat-Regular.ttf */; };
-		AA66065B3245457791168461 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 0887BD2A7F46471480F21CF4 /* Montserrat-SemiBold.ttf */; };
-		56DE2608D6144EBC928AD495 /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = FCB799A6918746B989786C9D /* Montserrat-SemiBoldItalic.ttf */; };
-		05E7012EF0054C4083BC4E79 /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E1166D23E51B4AEEAB7CB0C3 /* Montserrat-Thin.ttf */; };
-		6801F63F768841CC8F294293 /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 994D5C1B5C8D4765BDC5CF3C /* Montserrat-ThinItalic.ttf */; };
+		5FE816D5EAD2F31E2BBDE359 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C083F954DEB8D9057FE156C5 /* libPods-IgniteDiffApp-tvOSTests.a */; };
+		7D944F0D19886AE52874DE79 /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B04377D0F7E8AD972507E085 /* libPods-IgniteDiffAppTests.a */; };
+		A7DD36B4B1D22818C8CE3BDC /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = D4D3D437CE43B34680834CA2 /* libPods-IgniteDiffApp.a */; };
+		D3B87E0B729EEAA8F959084D /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6B57F18D0104DDA7A8C0CB60 /* libPods-IgniteDiffApp-tvOS.a */; };
+		63F3B32ACAAB4C1E98A48A82 /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 42BF1649FFFC4056A69356A3 /* Montserrat-Black.ttf */; };
+		0F371C8BE0C248F3990159A2 /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2C4D301E8F9F4DF28E08BF2B /* Montserrat-BlackItalic.ttf */; };
+		F2BFF8280CE84D5FA76FC0FF /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 12DC34C58B7C4DE698B5311D /* Montserrat-Bold.ttf */; };
+		FAC9150F77A3440BBBFDF3DF /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 27937CE2398545ACA881915A /* Montserrat-BoldItalic.ttf */; };
+		2B477A072883445EA35A538E /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BBEADF131A5F431BB8920247 /* Montserrat-ExtraBold.ttf */; };
+		1202D140B35942079E8DC486 /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D0346A4F6D764028A47969E4 /* Montserrat-ExtraBoldItalic.ttf */; };
+		3E1E83FC1851486AA784CE49 /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1ABB4078CFF54DE1B7ED2900 /* Montserrat-ExtraLight.ttf */; };
+		9C838E4F8BF9401C876D7331 /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 49BD4309879D452F87CBC5A7 /* Montserrat-ExtraLightItalic.ttf */; };
+		3ADE54D8C1DF4C28970BE42C /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 15CAF7CBF63247A6B63E7E46 /* Montserrat-Italic.ttf */; };
+		AE14ED47DE744A9285119A3A /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 13FB95215208434A840CE7B1 /* Montserrat-Light.ttf */; };
+		D49871ADC1A840E48A685A10 /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 41CC51C055C349EF8A41AB37 /* Montserrat-LightItalic.ttf */; };
+		5C88064E56EA4976B6FB0A2D /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ECD73FCF773848E1961442E4 /* Montserrat-Medium.ttf */; };
+		9CB28FBB32F94F6790328CEA /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BB7C0D3301C7465784E7A017 /* Montserrat-MediumItalic.ttf */; };
+		0D1617BA8155453EB9C59448 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BD02BCC2497549BE87A35E42 /* Montserrat-Regular.ttf */; };
+		F3FEBA99BE064C89AC0CB86C /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D6989732E6334D0A8A38EC4F /* Montserrat-SemiBold.ttf */; };
+		54B28A15DAF946A1B84F3FC4 /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E41761C2350C4920A37F4A47 /* Montserrat-SemiBoldItalic.ttf */; };
+		DB2B7BEC4F03459E824CFE1D /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 7DD9B7F68FAC4ABBAC89CE97 /* Montserrat-Thin.ttf */; };
+		0657FF804CCB4118AE955522 /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 950098B5DCD54EA485ED1618 /* Montserrat-ThinItalic.ttf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -62,8 +61,6 @@
 		00E356EE1AD99517003FC87E /* IgniteDiffAppTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = IgniteDiffAppTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = IgniteDiffAppTests.m; sourceTree = "<group>"; };
-		06B152513B7D400DDC829C98 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		0B906B3C462CC0C2BD24CEE7 /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* IgniteDiffApp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = IgniteDiffApp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = IgniteDiffApp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = IgniteDiffApp/AppDelegate.m; sourceTree = "<group>"; };
@@ -71,38 +68,40 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = IgniteDiffApp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = IgniteDiffApp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = IgniteDiffApp/main.m; sourceTree = "<group>"; };
-		202D8AC323B66D730E725B57 /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		1E917AC7D2E2EEF0CDEDA892 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* IgniteDiffApp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "IgniteDiffApp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* IgniteDiffApp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "IgniteDiffApp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
-		646B8FDCAC0F6E948BE0F729 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		679E2B8DB770A23FFBEA0B0C /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		7E0A327F50D91574C63EAD65 /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
-		860192C979682F8E64834CEA /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		A728CC7B20FD30C828568792 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
-		B516C76CACE97793558CC032 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		C5590FE46319DAAC32198BB5 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
-		C7968C27B75DB34AE6DEC6EA /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		D2D999FB251E3E930D1A1E1E /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
+		3591A927B1AFC11376E1476F /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
+		384B44BE1FA5667C8CC91C5D /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		66D026C2ADA6935C4F9FBC55 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
+		6B57F18D0104DDA7A8C0CB60 /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		95B03AA2FF93765295E5CBF7 /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
+		AAB2EBC4D419F918384F41A0 /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
+		ADC271AAC99369BB556C9EFD /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
+		B04377D0F7E8AD972507E085 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		C083F954DEB8D9057FE156C5 /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		D4D3D437CE43B34680834CA2 /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		DE9E8B9F321DF991A03A527A /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
 		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
-		434FA41BD9574F1F95972FC6 /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		0E57C73665E64120A0C2B1F4 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		2451173EFD5F4906836C3947 /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		AA37C2316F224F21810A4A7E /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		632ED3612EA7435EA3172E5C /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		32D3D4822D6346098DD20BF9 /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		10F661C3DB8E47D8B2F3DB92 /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		1303AE23E4F94847870AB769 /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		414CDCF0038041BD8D4E13D6 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		CEB7AA4A178444CC9275FCDB /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		2389BD1796DB4C19A5C1A375 /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		2B81D35ED8D440D58877CABF /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		5A81FED9828143D4B16E1C30 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		AC83894EDFB8453BB65C6E8A /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		0887BD2A7F46471480F21CF4 /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		FCB799A6918746B989786C9D /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		E1166D23E51B4AEEAB7CB0C3 /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		994D5C1B5C8D4765BDC5CF3C /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		42BF1649FFFC4056A69356A3 /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		2C4D301E8F9F4DF28E08BF2B /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		12DC34C58B7C4DE698B5311D /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		27937CE2398545ACA881915A /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		BBEADF131A5F431BB8920247 /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		D0346A4F6D764028A47969E4 /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		1ABB4078CFF54DE1B7ED2900 /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		49BD4309879D452F87CBC5A7 /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		15CAF7CBF63247A6B63E7E46 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		13FB95215208434A840CE7B1 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		41CC51C055C349EF8A41AB37 /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		ECD73FCF773848E1961442E4 /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		BB7C0D3301C7465784E7A017 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		BD02BCC2497549BE87A35E42 /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		D6989732E6334D0A8A38EC4F /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		E41761C2350C4920A37F4A47 /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		7DD9B7F68FAC4ABBAC89CE97 /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		950098B5DCD54EA485ED1618 /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -110,7 +109,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				9EC794B0EA79F1E9141669F1 /* libPods-IgniteDiffAppTests.a in Frameworks */,
+				7D944F0D19886AE52874DE79 /* libPods-IgniteDiffAppTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -118,7 +117,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				0D99D3DD7DA97FCBF48236E1 /* libPods-IgniteDiffApp.a in Frameworks */,
+				A7DD36B4B1D22818C8CE3BDC /* libPods-IgniteDiffApp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -126,7 +125,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				7869632441737451A94FEF27 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
+				D3B87E0B729EEAA8F959084D /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -134,7 +133,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				A7CD49E63AE2CABFC588DB93 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
+				5FE816D5EAD2F31E2BBDE359 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -177,14 +176,30 @@
 			children = (
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
 				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
-				202D8AC323B66D730E725B57 /* libPods-IgniteDiffApp.a */,
-				C7968C27B75DB34AE6DEC6EA /* libPods-IgniteDiffApp-tvOS.a */,
-				679E2B8DB770A23FFBEA0B0C /* libPods-IgniteDiffApp-tvOSTests.a */,
-				B516C76CACE97793558CC032 /* libPods-IgniteDiffAppTests.a */,
+				D4D3D437CE43B34680834CA2 /* libPods-IgniteDiffApp.a */,
+				6B57F18D0104DDA7A8C0CB60 /* libPods-IgniteDiffApp-tvOS.a */,
+				C083F954DEB8D9057FE156C5 /* libPods-IgniteDiffApp-tvOSTests.a */,
+				B04377D0F7E8AD972507E085 /* libPods-IgniteDiffAppTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
+		2EE1FF1F050E4FF725BE129A /* Pods */ = {
+			isa = PBXGroup;
+			children = (
+				AAB2EBC4D419F918384F41A0 /* Pods-IgniteDiffApp.debug.xcconfig */,
+				3591A927B1AFC11376E1476F /* Pods-IgniteDiffApp.release.xcconfig */,
+				ADC271AAC99369BB556C9EFD /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
+				384B44BE1FA5667C8CC91C5D /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
+				1E917AC7D2E2EEF0CDEDA892 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
+				DE9E8B9F321DF991A03A527A /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
+				66D026C2ADA6935C4F9FBC55 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
+				95B03AA2FF93765295E5CBF7 /* Pods-IgniteDiffAppTests.release.xcconfig */,
+			);
+			name = Pods;
+			path = Pods;
+			sourceTree = "<group>";
+		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
@@ -200,8 +215,8 @@
 				00E356EF1AD99517003FC87E /* IgniteDiffAppTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				A6AEADC558079766793FA6B8 /* Pods */,
-				AB046B1A4F9F4AB2966344D1 /* Resources */,
+				2EE1FF1F050E4FF725BE129A /* Pods */,
+				47922028A6494ABE9AF4D0D2 /* Resources */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -219,43 +234,27 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		A6AEADC558079766793FA6B8 /* Pods */ = {
-			isa = PBXGroup;
-			children = (
-				D2D999FB251E3E930D1A1E1E /* Pods-IgniteDiffApp.debug.xcconfig */,
-				7E0A327F50D91574C63EAD65 /* Pods-IgniteDiffApp.release.xcconfig */,
-				860192C979682F8E64834CEA /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
-				06B152513B7D400DDC829C98 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
-				646B8FDCAC0F6E948BE0F729 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
-				C5590FE46319DAAC32198BB5 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
-				A728CC7B20FD30C828568792 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
-				0B906B3C462CC0C2BD24CEE7 /* Pods-IgniteDiffAppTests.release.xcconfig */,
-			);
-			name = Pods;
-			path = Pods;
-			sourceTree = "<group>";
-		};
-		AB046B1A4F9F4AB2966344D1 /* Resources */ = {
+		47922028A6494ABE9AF4D0D2 /* Resources */ = {
 			isa = "PBXGroup";
 			children = (
-				434FA41BD9574F1F95972FC6 /* Montserrat-Black.ttf */,
-				0E57C73665E64120A0C2B1F4 /* Montserrat-BlackItalic.ttf */,
-				2451173EFD5F4906836C3947 /* Montserrat-Bold.ttf */,
-				AA37C2316F224F21810A4A7E /* Montserrat-BoldItalic.ttf */,
-				632ED3612EA7435EA3172E5C /* Montserrat-ExtraBold.ttf */,
-				32D3D4822D6346098DD20BF9 /* Montserrat-ExtraBoldItalic.ttf */,
-				10F661C3DB8E47D8B2F3DB92 /* Montserrat-ExtraLight.ttf */,
-				1303AE23E4F94847870AB769 /* Montserrat-ExtraLightItalic.ttf */,
-				414CDCF0038041BD8D4E13D6 /* Montserrat-Italic.ttf */,
-				CEB7AA4A178444CC9275FCDB /* Montserrat-Light.ttf */,
-				2389BD1796DB4C19A5C1A375 /* Montserrat-LightItalic.ttf */,
-				2B81D35ED8D440D58877CABF /* Montserrat-Medium.ttf */,
-				5A81FED9828143D4B16E1C30 /* Montserrat-MediumItalic.ttf */,
-				AC83894EDFB8453BB65C6E8A /* Montserrat-Regular.ttf */,
-				0887BD2A7F46471480F21CF4 /* Montserrat-SemiBold.ttf */,
-				FCB799A6918746B989786C9D /* Montserrat-SemiBoldItalic.ttf */,
-				E1166D23E51B4AEEAB7CB0C3 /* Montserrat-Thin.ttf */,
-				994D5C1B5C8D4765BDC5CF3C /* Montserrat-ThinItalic.ttf */,
+				42BF1649FFFC4056A69356A3 /* Montserrat-Black.ttf */,
+				2C4D301E8F9F4DF28E08BF2B /* Montserrat-BlackItalic.ttf */,
+				12DC34C58B7C4DE698B5311D /* Montserrat-Bold.ttf */,
+				27937CE2398545ACA881915A /* Montserrat-BoldItalic.ttf */,
+				BBEADF131A5F431BB8920247 /* Montserrat-ExtraBold.ttf */,
+				D0346A4F6D764028A47969E4 /* Montserrat-ExtraBoldItalic.ttf */,
+				1ABB4078CFF54DE1B7ED2900 /* Montserrat-ExtraLight.ttf */,
+				49BD4309879D452F87CBC5A7 /* Montserrat-ExtraLightItalic.ttf */,
+				15CAF7CBF63247A6B63E7E46 /* Montserrat-Italic.ttf */,
+				13FB95215208434A840CE7B1 /* Montserrat-Light.ttf */,
+				41CC51C055C349EF8A41AB37 /* Montserrat-LightItalic.ttf */,
+				ECD73FCF773848E1961442E4 /* Montserrat-Medium.ttf */,
+				BB7C0D3301C7465784E7A017 /* Montserrat-MediumItalic.ttf */,
+				BD02BCC2497549BE87A35E42 /* Montserrat-Regular.ttf */,
+				D6989732E6334D0A8A38EC4F /* Montserrat-SemiBold.ttf */,
+				E41761C2350C4920A37F4A47 /* Montserrat-SemiBoldItalic.ttf */,
+				7DD9B7F68FAC4ABBAC89CE97 /* Montserrat-Thin.ttf */,
+				950098B5DCD54EA485ED1618 /* Montserrat-ThinItalic.ttf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
@@ -268,7 +267,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "IgniteDiffAppTests" */;
 			buildPhases = (
-				97349070C3AA684A90359768 /* [CP] Check Pods Manifest.lock */,
+				4E71795C54C7623014A6A66D /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -287,7 +286,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "IgniteDiffApp" */;
 			buildPhases = (
-				5CFC31D934F9721FB28072F1 /* [CP] Check Pods Manifest.lock */,
+				6E5B8F534CE6767618EE144B /* [CP] Check Pods Manifest.lock */,
 				FD10A7F022414F080027D42C /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
@@ -307,7 +306,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOS" */;
 			buildPhases = (
-				0D01A6894B0210887C1D301B /* [CP] Check Pods Manifest.lock */,
+				F024C687599B12507C68DBED /* [CP] Check Pods Manifest.lock */,
 				FD10A7F122414F3F0027D42C /* Start Packager */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
@@ -327,7 +326,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOSTests" */;
 			buildPhases = (
-				CC2A43F502F1B08AEA76D032 /* [CP] Check Pods Manifest.lock */,
+				10A21EC40C5ABB0ADD6C69C9 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -401,24 +400,24 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				2603314FF92C43AC8C2125E7 /* Montserrat-Black.ttf in Resources */,
-				2252B542518143FAA544C23B /* Montserrat-BlackItalic.ttf in Resources */,
-				268E7DAE61AC4069AA7F1190 /* Montserrat-Bold.ttf in Resources */,
-				9446F1689775459280FA286A /* Montserrat-BoldItalic.ttf in Resources */,
-				03E7C4B09CCE434DBF5D883D /* Montserrat-ExtraBold.ttf in Resources */,
-				26D4806A24A64D99A95206BB /* Montserrat-ExtraBoldItalic.ttf in Resources */,
-				1F4B12339FC74628BA764BEE /* Montserrat-ExtraLight.ttf in Resources */,
-				BA2A258D9DD74450AF1C052B /* Montserrat-ExtraLightItalic.ttf in Resources */,
-				20FD6E27B5174D99AB8244FB /* Montserrat-Italic.ttf in Resources */,
-				A7781750C31D40A890E303E0 /* Montserrat-Light.ttf in Resources */,
-				F3EAF9C12723493F8906B645 /* Montserrat-LightItalic.ttf in Resources */,
-				6E86748A99F44CB5B8CCF51E /* Montserrat-Medium.ttf in Resources */,
-				6B2B7C8A312F4E839B2C20FE /* Montserrat-MediumItalic.ttf in Resources */,
-				8AD187F41F394718BCAA69DF /* Montserrat-Regular.ttf in Resources */,
-				AA66065B3245457791168461 /* Montserrat-SemiBold.ttf in Resources */,
-				56DE2608D6144EBC928AD495 /* Montserrat-SemiBoldItalic.ttf in Resources */,
-				05E7012EF0054C4083BC4E79 /* Montserrat-Thin.ttf in Resources */,
-				6801F63F768841CC8F294293 /* Montserrat-ThinItalic.ttf in Resources */,
+				63F3B32ACAAB4C1E98A48A82 /* Montserrat-Black.ttf in Resources */,
+				0F371C8BE0C248F3990159A2 /* Montserrat-BlackItalic.ttf in Resources */,
+				F2BFF8280CE84D5FA76FC0FF /* Montserrat-Bold.ttf in Resources */,
+				FAC9150F77A3440BBBFDF3DF /* Montserrat-BoldItalic.ttf in Resources */,
+				2B477A072883445EA35A538E /* Montserrat-ExtraBold.ttf in Resources */,
+				1202D140B35942079E8DC486 /* Montserrat-ExtraBoldItalic.ttf in Resources */,
+				3E1E83FC1851486AA784CE49 /* Montserrat-ExtraLight.ttf in Resources */,
+				9C838E4F8BF9401C876D7331 /* Montserrat-ExtraLightItalic.ttf in Resources */,
+				3ADE54D8C1DF4C28970BE42C /* Montserrat-Italic.ttf in Resources */,
+				AE14ED47DE744A9285119A3A /* Montserrat-Light.ttf in Resources */,
+				D49871ADC1A840E48A685A10 /* Montserrat-LightItalic.ttf in Resources */,
+				5C88064E56EA4976B6FB0A2D /* Montserrat-Medium.ttf in Resources */,
+				9CB28FBB32F94F6790328CEA /* Montserrat-MediumItalic.ttf in Resources */,
+				0D1617BA8155453EB9C59448 /* Montserrat-Regular.ttf in Resources */,
+				F3FEBA99BE064C89AC0CB86C /* Montserrat-SemiBold.ttf in Resources */,
+				54B28A15DAF946A1B84F3FC4 /* Montserrat-SemiBoldItalic.ttf in Resources */,
+				DB2B7BEC4F03459E824CFE1D /* Montserrat-Thin.ttf in Resources */,
+				0657FF804CCB4118AE955522 /* Montserrat-ThinItalic.ttf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -454,7 +453,7 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		0D01A6894B0210887C1D301B /* [CP] Check Pods Manifest.lock */ = {
+		10A21EC40C5ABB0ADD6C69C9 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -469,7 +468,7 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -490,7 +489,7 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		5CFC31D934F9721FB28072F1 /* [CP] Check Pods Manifest.lock */ = {
+		4E71795C54C7623014A6A66D /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -505,14 +504,14 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffAppTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		97349070C3AA684A90359768 /* [CP] Check Pods Manifest.lock */ = {
+		6E5B8F534CE6767618EE144B /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -527,14 +526,14 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffAppTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		CC2A43F502F1B08AEA76D032 /* [CP] Check Pods Manifest.lock */ = {
+		F024C687599B12507C68DBED /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -549,7 +548,7 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -661,7 +660,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = A728CC7B20FD30C828568792 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
+			baseConfigurationReference = 66D026C2ADA6935C4F9FBC55 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -684,7 +683,7 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 0B906B3C462CC0C2BD24CEE7 /* Pods-IgniteDiffAppTests.release.xcconfig */;
+			baseConfigurationReference = 95B03AA2FF93765295E5CBF7 /* Pods-IgniteDiffAppTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
@@ -704,7 +703,7 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D2D999FB251E3E930D1A1E1E /* Pods-IgniteDiffApp.debug.xcconfig */;
+			baseConfigurationReference = AAB2EBC4D419F918384F41A0 /* Pods-IgniteDiffApp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -724,7 +723,7 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7E0A327F50D91574C63EAD65 /* Pods-IgniteDiffApp.release.xcconfig */;
+			baseConfigurationReference = 3591A927B1AFC11376E1476F /* Pods-IgniteDiffApp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -743,7 +742,7 @@
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 860192C979682F8E64834CEA /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
+			baseConfigurationReference = ADC271AAC99369BB556C9EFD /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -771,7 +770,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 06B152513B7D400DDC829C98 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
+			baseConfigurationReference = 384B44BE1FA5667C8CC91C5D /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -799,7 +798,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 646B8FDCAC0F6E948BE0F729 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
+			baseConfigurationReference = 1E917AC7D2E2EEF0CDEDA892 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -826,7 +825,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = C5590FE46319DAAC32198BB5 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
+			baseConfigurationReference = DE9E8B9F321DF991A03A527A /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
diff --git a/IgniteDiffApp/ios/IgniteDiffAppTests/IgniteDiffAppTests.m b/IgniteDiffApp/ios/IgniteDiffAppTests/IgniteDiffAppTests.m
index 1b3d27a..06fedbd 100644
--- a/IgniteDiffApp/ios/IgniteDiffAppTests/IgniteDiffAppTests.m
+++ b/IgniteDiffApp/ios/IgniteDiffAppTests/IgniteDiffAppTests.m
@@ -12,7 +12,7 @@
 #import <React/RCTRootView.h>
 
 #define TIMEOUT_SECONDS 600
-#define TEXT_TO_LOOK_FOR @"Welcome to React"
+#define TEXT_TO_LOOK_FOR @"Welcome to React Native!"
 
 @interface IgniteDiffAppTests : XCTestCase
 
@@ -40,13 +40,11 @@ - (void)testRendersWelcomeScreen
   BOOL foundElement = NO;
 
   __block NSString *redboxError = nil;
-#ifdef DEBUG
   RCTSetLogFunction(^(RCTLogLevel level, RCTLogSource source, NSString *fileName, NSNumber *lineNumber, NSString *message) {
     if (level >= RCTLogLevelError) {
       redboxError = message;
     }
   });
-#endif
 
   while ([date timeIntervalSinceNow] > 0 && !foundElement && !redboxError) {
     [[NSRunLoop mainRunLoop] runMode:NSDefaultRunLoopMode beforeDate:[NSDate dateWithTimeIntervalSinceNow:0.1]];
@@ -59,10 +57,8 @@ - (void)testRendersWelcomeScreen
       return NO;
     }];
   }
-  
-#ifdef DEBUG
+
   RCTSetLogFunction(RCTDefaultLogFunction);
-#endif
 
   XCTAssertNil(redboxError, @"RedBox error: %@", redboxError);
   XCTAssertTrue(foundElement, @"Couldn't find element with text '%@' in %d seconds", TEXT_TO_LOOK_FOR, TIMEOUT_SECONDS);
diff --git a/IgniteDiffApp/ios/Podfile b/IgniteDiffApp/ios/Podfile
index 90caef9..62fccf9 100644
--- a/IgniteDiffApp/ios/Podfile
+++ b/IgniteDiffApp/ios/Podfile
@@ -3,14 +3,10 @@ require_relative '../node_modules/@react-native-community/cli-platform-ios/nativ
 
 target 'IgniteDiffApp' do
   # Pods for IgniteDiffApp
-  pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
-  pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
-  pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
-  pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
   pod 'React', :path => '../node_modules/react-native/'
-  pod 'React-Core', :path => '../node_modules/react-native/'
-  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
-  pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
+  pod 'React-Core', :path => '../node_modules/react-native/React'
+  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
+  pod 'React-fishhook', :path => '../node_modules/react-native/Libraries/fishhook'
   pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
   pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
   pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
@@ -20,15 +16,13 @@ target 'IgniteDiffApp' do
   pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
   pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
   pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
-  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'
+  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
 
   pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
   pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
   pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
   pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
-  pod 'ReactCommon/jscallinvoker', :path => "../node_modules/react-native/ReactCommon"
-  pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
-  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
+  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
 
   pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
   pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index e9a8513..3d49257 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -1,99 +1,101 @@
 {
-  "name": "ignite-diff-app",
+  "name": "IgniteDiffApp",
   "version": "0.0.1",
   "private": true,
   "scripts": {
-    "android": "react-native run-android",
-    "ios": "react-native run-ios",
     "start": "react-native start",
     "test": "jest",
-    "lint": "eslint index.js app storybook test --fix --ext .js,.ts,.tsx",
+    "lint": "eslint index.js app --fix --ext .js,.ts,.tsx",
     "test:e2e": "detox test -c ios.sim.debug",
     "build:e2e": "detox build -c ios.sim.debug",
     "ci:test:e2e": "detox test -c ios.sim.release -l verbose --cleanup",
     "ci:build:e2e": "detox build -c ios.sim.release",
     "compile": "tsc --noEmit -p . --pretty",
     "format": "npm-run-all format:*",
-    "format:js": "prettier --write '**/*.js'",
-    "format:json": "prettier --write '**/*.json'",
-    "format:md": "prettier --write '**/*.md'",
-    "format:ts": "prettier --write '**/*.ts{,x}'",
+    "format:js": "prettier --write {.,**}/*.js",
+    "format:json": "prettier --write {.,**}/*.json",
+    "format:md": "prettier --write {.,**}/*.md",
+    "format:ts": "prettier --write {.,**}/*.{ts,tsx}",
     "hack:types-react-navigation": "rimraf node_modules/@types/react-navigation/node_modules/@types",
     "hack:types-react-native": "rimraf node_modules/@types/react-native/node_modules/@types",
     "hack:types-react-test-renderer": "rimraf node_modules/@types/react-test-renderer/node_modules/@types",
     "patch": "patch-package",
-    "postinstall": "node ./bin/postInstall",
+    "postinstall": "./bin/postInstall",
     "prepare": "npm-run-all patch hack:*",
-    "storybook": "start-storybook -p 9001 -c ./storybook",
+    "storybook": "storybook start -p 9001 --skip-packager",
     "adb": "adb reverse tcp:9090 tcp:9090 && adb reverse tcp:3000 tcp:3000 && adb reverse tcp:9001 tcp:9001 && adb reverse tcp:8081 tcp:8081"
   },
   "dependencies": {
-    "@react-native-community/async-storage": "^1.9.0",
-    "@react-native-community/masked-view": "0.1.5",
-    "@react-navigation/native": "^5.1.5",
-    "apisauce": "1.1.1",
+    "@react-native-community/async-storage": "^1.5.1",
+    "apisauce": "1.0.3",
     "i18n-js": "^3.0.11",
     "lodash.throttle": "4.1.1",
-    "mobx": "^4.15.4",
-    "mobx-react-lite": "^1.4.1",
+    "mobx": "^4.13.0",
+    "mobx-react": "^5.4.4",
     "mobx-state-tree": "^3.14.1",
-    "ramda": "0.27.0",
-    "react": "16.9.0",
-    "react-native": "0.61.5",
-    "react-native-gesture-handler": "^1.5.0",
-    "react-native-keychain": "5.0.1",
+    "ramda": "0.26.1",
+    "react": "16.8.6",
+    "react-native": "0.60.4",
+    "react-native-gesture-handler": "^1.3.0",
+    "react-native-keychain": "3.1.3",
     "react-native-localize": "^1.0.0",
-    "react-native-safe-area-context": "0.7.3",
-    "react-native-safe-area-view": "1.0.0",
-    "react-native-screens": "^2.5.0",
-    "react-native-splash-screen": "3.2.0",
+    "react-native-splash-screen": "3.1.1",
+    "react-navigation": "3.11.1",
     "reactotron-mst": "^3.1.1",
     "reactotron-react-native": "^4.0.0-beta.1",
     "validate.js": "0.13.1"
   },
   "devDependencies": {
-    "@babel/core": "^7.9.6",
+    "@babel/core": "^7.5.5",
     "@babel/plugin-proposal-decorators": "^7.0.0",
     "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
-    "@babel/runtime": "^7.9.6",
-    "@storybook/addon-storyshots": "5.3.17",
-    "@storybook/react-native": "5.3.17",
-    "@storybook/react-native-server": "5.3.17",
-    "@types/jest": "25.2.2",
-    "@types/ramda": "0.26.44",
-    "@types/react": "16.9.23",
-    "@types/react-native": "0.61.23",
-    "@types/react-test-renderer": "16.9.2",
-    "@typescript-eslint/eslint-plugin": "^2.24.0",
-    "@typescript-eslint/parser": "^2.24.0",
-    "babel-jest": "^26.0.1",
-    "detox": "^16.0.0",
-    "eslint": "^6.6.0",
+    "@babel/runtime": "^7.5.5",
+    "@emotion/core": "^10.0.15",
+    "@storybook/addon-storyshots": "5.1.11",
+    "@storybook/react-native": "5.1.11",
+    "@types/jest": "24.0.16",
+    "@types/ramda": "0.26.18",
+    "@types/react": "16.8.23",
+    "@types/react-native": "0.60.2",
+    "@types/react-navigation": "3.0.7",
+    "@types/react-test-renderer": "16.8.3",
+    "@typescript-eslint/eslint-plugin": "^1.1.0",
+    "@typescript-eslint/parser": "^1.1.0",
+    "babel-core": "7.0.0-bridge.0",
+    "babel-jest": "^24.9.0",
+    "detox": "^14.0.1",
+    "emotion-theming": "^10.0.14",
+    "eslint": "^6.1.0",
     "eslint-config-prettier": "^6.0.0",
-    "eslint-config-standard": "^14.1.0",
+    "eslint-config-standard": "^13.0.1",
     "eslint-plugin-import": "^2.15.0",
-    "eslint-plugin-node": "^11.0.0",
+    "eslint-plugin-node": "^9.1.0",
     "eslint-plugin-promise": "^4.0.1",
     "eslint-plugin-react": "^7.12.4",
     "eslint-plugin-react-native": "^3.6.0",
     "eslint-plugin-standard": "^4.0.0",
-    "ignite-bowser": "5.1.0",
-    "jest": "25.5.4",
+    "ignite-bowser": "4.6.3",
+    "jest": "^24.9.0",
     "jetifier": "^1.6.1",
-    "metro-react-native-babel-preset": "^0.59.0",
+    "metro-react-native-babel-preset": "^0.56.0",
     "npm-run-all": "4.1.5",
-    "patch-package": "6.2.1",
+    "patch-package": "6.1.2",
     "postinstall-prepare": "1.0.1",
-    "prettier": "1.19.1",
-    "react-devtools-core": "4.5.0",
+    "prettier": "1.18.2",
+    "react-devtools-core": "3.6.3",
+    "react-native-dotenv": "^0.2.0",
     "react-powerplug": "1.0.0",
-    "react-test-renderer": "16.9.0",
-    "rimraf": "3.0.2",
+    "react-test-renderer": "16.8.6",
+    "rimraf": "2.6.3",
     "solidarity": "2.3.1",
-    "typescript": "3.9.3"
+    "typescript": "3.5.3"
   },
   "jest": {
     "preset": "react-native",
+    "moduleNameMapper": {
+      "^[./a-zA-Z0-9$_-]+\\.(bmp|gif|jpg|jpeg|png|psd|svg|webp|ttf|otf)$": "RelativeImageStub",
+      "^React$": "<rootDir>/node_modules/react"
+    },
     "setupFiles": [
       "<rootDir>/node_modules/react-native/jest/setup.js",
       "<rootDir>/test/setup.ts"
@@ -103,7 +105,7 @@
       "/e2e"
     ],
     "transformIgnorePatterns": [
-      "node_modules/(?!(jest-)?react-native|react-native|@react-navigation|@storybook|@react-native-community)"
+      "node_modules/(?!(jest-)?react-native|react-native|react-navigation|@react-navigation|@storybook|@react-native-community)"
     ]
   },
   "prettier": {
@@ -174,10 +176,8 @@
       "no-undef": 0,
       "quotes": 0,
       "react/no-unescaped-entities": 0,
-      "react/prop-types": "off",
       "react-native/no-raw-text": 0,
       "space-before-function-paren": 0,
-      "@typescript-eslint/ban-ts-ignore": 0,
       "@typescript-eslint/indent": 0,
       "@typescript-eslint/explicit-member-accessibility": 0,
       "@typescript-eslint/explicit-function-return-type": 0,
diff --git a/IgniteDiffApp/storybook/storybook.tsx b/IgniteDiffApp/storybook/storybook.tsx
index e84d97a..6969e13 100644
--- a/IgniteDiffApp/storybook/storybook.tsx
+++ b/IgniteDiffApp/storybook/storybook.tsx
@@ -1,30 +1,26 @@
-import React, { useEffect, FunctionComponent } from "react"
+import React from "react"
 import { getStorybookUI, configure } from "@storybook/react-native"
+import SplashScreen from "react-native-splash-screen"
 
-declare let module
+declare var module
 
 configure(() => {
   require("./storybook-registry")
 }, module)
 
-const StorybookUI = getStorybookUI({
-  port: 9001,
-  host: "localhost",
-  onDeviceUI: true,
+const StorybookUI = getStorybookUI({ port: 9001, host: "localhost", onDeviceUI: true })
 
-  asyncStorage: require("@react-native-community/async-storage").default,
-})
-
-export const StorybookUIRoot: FunctionComponent = () => {
-  useEffect(() => {
-    ;(async () => {
-      if (typeof __TEST__ === "undefined" || !__TEST__) {
-        const Reactotron = require("../app/services/reactotron")
-        const reactotron = new Reactotron.Reactotron()
-        reactotron.setup()
-      }
-    })()
-  }, [])
-
-  return <StorybookUI />
+// RN hot module must be in a class for HMR
+export class StorybookUIRoot extends React.Component {
+  componentDidMount() {
+    SplashScreen.hide()
+    if (typeof __TEST__ === "undefined" || !__TEST__) {
+      const Reactotron = require("../app/services/reactotron")
+      const reactotron = new Reactotron.Reactotron()
+      reactotron.setup()
+    }
+  }
+  render() {
+    return <StorybookUI />
+  }
 }
diff --git a/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap b/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap
index 28a8a64..b03532d 100644
--- a/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap
+++ b/IgniteDiffApp/test/__snapshots__/storyshots.test.ts.snap
@@ -104,7 +104,7 @@ exports[`Storyshots Button Style Presets 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               isTVSelectable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
@@ -220,7 +220,7 @@ exports[`Storyshots Button Style Presets 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               isTVSelectable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
@@ -336,7 +336,7 @@ exports[`Storyshots Button Style Presets 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               isTVSelectable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
@@ -482,7 +482,7 @@ exports[`Storyshots Checkbox Behaviour 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               isTVSelectable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
@@ -610,7 +610,7 @@ exports[`Storyshots Checkbox Behaviour 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               isTVSelectable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
@@ -748,7 +748,7 @@ exports[`Storyshots Checkbox Behaviour 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               isTVSelectable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
@@ -907,7 +907,7 @@ exports[`Storyshots Checkbox Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 isTVSelectable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
@@ -1037,7 +1037,7 @@ exports[`Storyshots Checkbox Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 isTVSelectable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
@@ -1170,7 +1170,7 @@ exports[`Storyshots Checkbox Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 isTVSelectable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
@@ -1300,7 +1300,7 @@ exports[`Storyshots Checkbox Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 isTVSelectable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
@@ -1430,7 +1430,7 @@ exports[`Storyshots Checkbox Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 isTVSelectable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
@@ -2775,7 +2775,7 @@ exports[`Storyshots Header Behavior 1`] = `
                       }
                     }
                   >
-                    demoScreen.howTo.test
+                    secondExampleScreen.howTo.test
                   </Text>
                 </View>
                 <View
@@ -2889,7 +2889,7 @@ exports[`Storyshots Header Behavior 1`] = `
               >
                 <View
                   accessible={true}
-                  focusable={true}
+                  clickable={true}
                   isTVSelectable={true}
                   onClick={[Function]}
                   onResponderGrant={[Function]}
@@ -2911,11 +2911,7 @@ exports[`Storyshots Header Behavior 1`] = `
                 >
                   <View>
                     <Image
-                      source={
-                        Object {
-                          "testUri": "../../../app/components/icon/icons/arrow-left.png",
-                        }
-                      }
+                      source={1}
                       style={
                         Object {
                           "resizeMode": "contain",
@@ -2942,7 +2938,7 @@ exports[`Storyshots Header Behavior 1`] = `
                       }
                     }
                   >
-                    demoScreen.howTo.test
+                    secondExampleScreen.howTo.test
                   </Text>
                 </View>
                 <View
@@ -3079,12 +3075,12 @@ exports[`Storyshots Header Behavior 1`] = `
                       }
                     }
                   >
-                    demoScreen.howTo.test
+                    secondExampleScreen.howTo.test
                   </Text>
                 </View>
                 <View
                   accessible={true}
-                  focusable={true}
+                  clickable={true}
                   isTVSelectable={true}
                   onClick={[Function]}
                   onResponderGrant={[Function]}
@@ -3106,11 +3102,7 @@ exports[`Storyshots Header Behavior 1`] = `
                 >
                   <View>
                     <Image
-                      source={
-                        Object {
-                          "testUri": "../../../app/components/icon/icons/bullet.png",
-                        }
-                      }
+                      source={1}
                       style={
                         Object {
                           "resizeMode": "contain",
@@ -3233,11 +3225,7 @@ exports[`Storyshots Icon Names 1`] = `
           >
             <View>
               <Image
-                source={
-                  Object {
-                    "testUri": "../../../app/components/icon/icons/arrow-left.png",
-                  }
-                }
+                source={1}
                 style={
                   Object {
                     "resizeMode": "contain",
@@ -3327,11 +3315,7 @@ exports[`Storyshots Icon Names 1`] = `
           >
             <View>
               <Image
-                source={
-                  Object {
-                    "testUri": "../../../app/components/icon/icons/bullet.png",
-                  }
-                }
+                source={1}
                 style={
                   Object {
                     "resizeMode": "contain",
@@ -3451,7 +3435,7 @@ exports[`Storyshots Switch Behaviour 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
               onResponderMove={[Function]}
@@ -3579,7 +3563,7 @@ exports[`Storyshots Switch Behaviour 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
               onResponderMove={[Function]}
@@ -3707,7 +3691,7 @@ exports[`Storyshots Switch Behaviour 1`] = `
           >
             <View
               accessible={true}
-              focusable={true}
+              clickable={true}
               onClick={[Function]}
               onResponderGrant={[Function]}
               onResponderMove={[Function]}
@@ -3866,7 +3850,7 @@ exports[`Storyshots Switch Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
                 onResponderMove={[Function]}
@@ -3996,7 +3980,7 @@ exports[`Storyshots Switch Styling 1`] = `
             <View>
               <View
                 accessible={true}
-                focusable={true}
+                clickable={true}
                 onClick={[Function]}
                 onResponderGrant={[Function]}
                 onResponderMove={[Function]}
@@ -4281,7 +4265,7 @@ exports[`Storyshots Text Passing Content 1`] = `
                   }
                 }
               >
-                common.cancel.test
+                omglol.test
               </Text>
             </View>
           </View>
@@ -5149,11 +5133,10 @@ exports[`Storyshots TextField Labelling 1`] = `
                 Name
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 placeholder="omg your name"
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "#ffffff",
@@ -5266,11 +5249,10 @@ exports[`Storyshots TextField Labelling 1`] = `
                 storybook.field.test
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 placeholder="storybook.placeholder.test"
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "#ffffff",
@@ -5402,11 +5384,10 @@ exports[`Storyshots TextField Ref Forwarding 1`] = `
                 Name
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 onFocus={[Function]}
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "rebeccapurple",
@@ -5566,10 +5547,9 @@ exports[`Storyshots TextField Style Overrides 1`] = `
                 First Name
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "#ffffff",
@@ -5603,10 +5583,9 @@ exports[`Storyshots TextField Style Overrides 1`] = `
                 Last Name
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "#ffffff",
@@ -5719,10 +5698,9 @@ exports[`Storyshots TextField Style Overrides 1`] = `
                 Name
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "rebeccapurple",
@@ -5852,10 +5830,9 @@ exports[`Storyshots TextField Style Overrides 1`] = `
                 Name
               </Text>
               <TextInput
-                allowFontScaling={true}
+                autoFocus={false}
                 onChangeText={[Function]}
                 placeholderTextColor="#CDD4DA"
-                rejectResponderTermination={true}
                 style={
                   Object {
                     "backgroundColor": "rebeccapurple",
@@ -5995,11 +5972,7 @@ exports[`Storyshots Wallpaper Style Presets 1`] = `
             }
           >
             <Image
-              source={
-                Object {
-                  "testUri": "../../../app/components/wallpaper/bg.png",
-                }
-              }
+              source={1}
               style={
                 Object {
                   "bottom": 0,
diff --git a/IgniteDiffApp/test/i18n.test.ts b/IgniteDiffApp/test/i18n.test.ts
deleted file mode 100644
index 376cfdf..0000000
--- a/IgniteDiffApp/test/i18n.test.ts
+++ /dev/null
@@ -1,62 +0,0 @@
-const en = require("../app/i18n/en.json")
-const { exec } = require("child_process")
-
-// Use this array for keys that for whatever reason aren't greppable so they
-// don't hold your test suite hostage by always failing.
-const EXCEPTIONS = [
-  // "welcomeScreen.readyForLaunch",
-]
-
-function iterate(obj, stack, array) {
-  for (const property in obj) {
-    if (Object.prototype.hasOwnProperty.call(obj, property)) {
-      if (typeof obj[property] === "object") {
-        iterate(obj[property], `${stack}.${property}`, array)
-      } else {
-        array.push(`${stack.slice(1)}.${property}`)
-      }
-    }
-  }
-
-  return array
-}
-
-/**
- * This tests your codebase for missing i18n strings so you can avoid error strings at render time
- *
- * It was taken from https://gist.github.com/Michaelvilleneuve/8808ba2775536665d95b7577c9d8d5a1
- * and modified slightly to account for our Bowser higher order components,
- * which take 'tx' and 'fooTx' props.
- * The grep command is nasty looking, but it's essentially searching the codebase for 3 things:
- *
- * tx="*"
- * Tx=""
- * translate(""
- *
- * and then grabs the i18n key between the double quotes
- *
- * This approach isn't 100% perfect. If you are storing your key string in a variable because you
- * are setting it conditionally, then it won't be picked up.
- *
- */
-
-describe("i18n", () => {
-  test("There are no missing keys", done => {
-    // Actual command output:
-    // grep "Tx=\"\S*\"\|tx=\"\S*\"\|translate(\"\S*\"" -ohr './app' | grep -o "\".*\""
-    const command = `grep "Tx=\\"\\S*\\"\\|tx=\\"\\S*\\"\\|translate(\\"\\S*\\"" -ohr '../app' | grep -o "\\".*\\""`
-    exec(command, (_, stdout) => {
-      const allTranslationsDefined = iterate(en, "", [])
-      const allTranslationsUsed = stdout.replace(new RegExp('"', "g"), "").split("\n")
-      allTranslationsUsed.splice(-1, 1)
-
-      for (let i = 0; i < allTranslationsUsed.length; i += 1) {
-        if (!EXCEPTIONS.includes(allTranslationsUsed[i])) {
-          // You can add keys to EXCEPTIONS (above) if you don't want them included in the test
-          expect(allTranslationsDefined).toContainEqual(allTranslationsUsed[i])
-        }
-      }
-      done()
-    })
-  }, 240000)
-})
diff --git a/IgniteDiffApp/test/mock-reactotron.ts b/IgniteDiffApp/test/mock-reactotron.ts
index 6366dae..832ec7b 100644
--- a/IgniteDiffApp/test/mock-reactotron.ts
+++ b/IgniteDiffApp/test/mock-reactotron.ts
@@ -1 +1,2 @@
-declare const tron
+declare var tron
+tron = null
diff --git a/IgniteDiffApp/test/mock-textinput.ts b/IgniteDiffApp/test/mock-textinput.ts
new file mode 100644
index 0000000..f4038ab
--- /dev/null
+++ b/IgniteDiffApp/test/mock-textinput.ts
@@ -0,0 +1,16 @@
+jest.mock("TextInput", () => {
+  const RealComponent = require.requireActual("TextInput")
+  const React = require("React")
+
+  class TextInput extends React.Component {
+    render() {
+      return React.createElement(
+        "TextInput",
+        { ...this.props, autoFocus: false },
+        this.props.children,
+      )
+    }
+  }
+  TextInput.propTypes = RealComponent.propTypes
+  return TextInput
+})
diff --git a/IgniteDiffApp/test/setup.ts b/IgniteDiffApp/test/setup.ts
index 1bb0a69..fbcd597 100644
--- a/IgniteDiffApp/test/setup.ts
+++ b/IgniteDiffApp/test/setup.ts
@@ -6,7 +6,8 @@ import "./mock-async-storage"
 import "./mock-i18n"
 import "./mock-react-native-localize"
 import "./mock-reactotron"
+import "./mock-textinput"
 
 declare global {
-  let __TEST__
+  var __TEST__
 }
diff --git a/IgniteDiffApp/tsconfig.json b/IgniteDiffApp/tsconfig.json
index ea13117..e05bf0c 100644
--- a/IgniteDiffApp/tsconfig.json
+++ b/IgniteDiffApp/tsconfig.json
@@ -11,10 +11,10 @@
     "noImplicitThis": true,
     "noUnusedLocals": true,
     "sourceMap": true,
-    "target": "esnext",
-    "lib": ["esnext"],
+    "target": "es2015",
+    "lib": ["es6"],
     "skipLibCheck": true
   },
   "exclude": ["node_modules"],
-  "include": ["index.js", "app", "test", "storybook"]
+  "include": ["app", "test", "storybook"]
 }
