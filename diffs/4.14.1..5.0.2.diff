diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index 4be1144..5afc027 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -3,13 +3,18 @@
 // In this file, we'll be kicking off our app or storybook.
 
 import "./i18n"
-import React, { useState, useEffect } from "react"
+import React, { useState, useEffect, useRef } from "react"
 import { YellowBox } from "react-native"
-import { StatefulNavigator, BackButtonHandler, exitRoutes } from "./navigation"
-import { RootStore, RootStoreProvider, setupRootStore } from "./models/root-store"
-
+import { NavigationContainerRef } from "@react-navigation/native"
 import { contains } from "ramda"
 import { enableScreens } from "react-native-screens"
+import { SafeAreaProvider, initialWindowSafeAreaInsets } from "react-native-safe-area-context"
+
+import { RootNavigator, exitRoutes, setRootNavigation } from "./navigation"
+import { useBackButtonHandler } from "./navigation/use-back-button-handler"
+import { RootStore, RootStoreProvider, setupRootStore } from "./models/root-store"
+import * as storage from "./utils/storage"
+import getActiveRouteName from "./navigation/get-active-routename"
 
 // This puts screens in a native ViewController or Activity. If you want fully native
 // stack navigation, use `createNativeStackNavigator` in place of `createStackNavigator`:
@@ -26,19 +31,6 @@ YellowBox.ignoreWarnings([
   "Require cycle:",
 ])
 
-/**
- * Storybook still wants to use ReactNative's AsyncStorage instead of the
- * react-native-community package; this causes a YellowBox warning. This hack
- * points RN's AsyncStorage at the community one, fixing the warning. Here's the
- * Storybook issue about this: https://github.com/storybookjs/storybook/issues/6078
- */
-const ReactNative = require("react-native")
-Object.defineProperty(ReactNative, "AsyncStorage", {
-  get(): any {
-    return require("@react-native-community/async-storage").default
-  },
-})
-
 /**
  * Are we allowed to exit the app?  This is called when the back button
  * is pressed on android.
@@ -47,17 +39,66 @@ Object.defineProperty(ReactNative, "AsyncStorage", {
  */
 const canExit = (routeName: string) => contains(routeName, exitRoutes)
 
+export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
+
 /**
  * This is the root component of our app.
  */
-export default function App() {
-  const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined) // prettier-ignore
+const App: React.FunctionComponent<{}> = () => {
+  const navigationRef = useRef<NavigationContainerRef>()
+  const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)
+  const [initialNavigationState, setInitialNavigationState] = useState()
+  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(true)
+
+  setRootNavigation(navigationRef)
+  useBackButtonHandler(navigationRef, canExit)
+
+  /**
+   * Keep track of state changes
+   * Track Screens
+   * Persist State
+   */
+  const routeNameRef = useRef()
+  const onNavigationStateChange = state => {
+    const previousRouteName = routeNameRef.current
+    const currentRouteName = getActiveRouteName(state)
+
+    if (previousRouteName !== currentRouteName) {
+      // track screens.
+      __DEV__ && console.tron.log(currentRouteName)
+    }
+
+    // Save the current route name for later comparision
+    routeNameRef.current = currentRouteName
+
+    // Persist state to storage
+    storage.save(NAVIGATION_PERSISTENCE_KEY, state)
+  }
+
   useEffect(() => {
     ;(async () => {
       setupRootStore().then(setRootStore)
     })()
   }, [])
 
+  useEffect(() => {
+    const restoreState = async () => {
+      try {
+        const state = await storage.load(NAVIGATION_PERSISTENCE_KEY)
+
+        if (state) {
+          setInitialNavigationState(state)
+        }
+      } finally {
+        setIsRestoringNavigationState(false)
+      }
+    }
+
+    if (isRestoringNavigationState) {
+      restoreState()
+    }
+  }, [isRestoringNavigationState])
+
   // Before we show the app, we have to wait for our state to be ready.
   // In the meantime, don't render anything. This will be the background
   // color set in native by rootView's background color.
@@ -73,9 +114,15 @@ export default function App() {
   // otherwise, we're ready to render the app
   return (
     <RootStoreProvider value={rootStore}>
-      <BackButtonHandler canExit={canExit}>
-        <StatefulNavigator />
-      </BackButtonHandler>
+      <SafeAreaProvider initialSafeAreaInsets={initialWindowSafeAreaInsets}>
+        <RootNavigator
+          ref={navigationRef}
+          initialState={initialNavigationState}
+          onStateChange={onNavigationStateChange}
+        />
+      </SafeAreaProvider>
     </RootStoreProvider>
   )
 }
+
+export default App
diff --git a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
index bdb474a..6a7e06a 100644
--- a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
+++ b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
@@ -1,6 +1,7 @@
 import * as React from "react"
 import { View, ViewStyle, ImageStyle, TextStyle } from "react-native"
-import { Text, Icon } from "../"
+import { Text } from "../text/text"
+import { Icon } from "../icon/icon"
 import { spacing } from "../../theme"
 
 const BULLET_ITEM: ViewStyle = {
diff --git a/IgniteDiffApp/app/components/button/button.tsx b/IgniteDiffApp/app/components/button/button.tsx
index 3d33afd..d95709d 100644
--- a/IgniteDiffApp/app/components/button/button.tsx
+++ b/IgniteDiffApp/app/components/button/button.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity } from "react-native"
-import { Text } from "../"
+import { Text } from "../text/text"
 import { viewPresets, textPresets } from "./button.presets"
 import { ButtonProps } from "./button.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/checkbox/checkbox.tsx b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
index 7a1084f..bdb9825 100644
--- a/IgniteDiffApp/app/components/checkbox/checkbox.tsx
+++ b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity, TextStyle, ViewStyle, View } from "react-native"
-import { Text } from "../"
+import { Text } from "../text/text"
 import { color, spacing } from "../../theme"
 import { CheckboxProps } from "./checkbox.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/header/header.tsx b/IgniteDiffApp/app/components/header/header.tsx
index d230c01..c8dd4c3 100644
--- a/IgniteDiffApp/app/components/header/header.tsx
+++ b/IgniteDiffApp/app/components/header/header.tsx
@@ -1,7 +1,9 @@
 import * as React from "react"
 import { View, ViewStyle, TextStyle } from "react-native"
 import { HeaderProps } from "./header.props"
-import { Button, Icon, Text } from "../"
+import { Button } from "../button/button"
+import { Text } from "../text/text"
+import { Icon } from "../icon/icon"
 import { spacing } from "../../theme"
 import { translate } from "../../i18n/"
 
diff --git a/IgniteDiffApp/app/components/screen/screen.tsx b/IgniteDiffApp/app/components/screen/screen.tsx
index 8631cfc..4943c0b 100644
--- a/IgniteDiffApp/app/components/screen/screen.tsx
+++ b/IgniteDiffApp/app/components/screen/screen.tsx
@@ -1,16 +1,17 @@
 import * as React from "react"
 import { KeyboardAvoidingView, Platform, ScrollView, StatusBar, View } from "react-native"
-import { SafeAreaView } from "react-navigation"
+import { useSafeArea } from "react-native-safe-area-context"
 import { ScreenProps } from "./screen.props"
 import { isNonScrolling, offsets, presets } from "./screen.presets"
 
 const isIos = Platform.OS === "ios"
 
 function ScreenWithoutScrolling(props: ScreenProps) {
-  const preset = presets["fixed"]
+  const insets = useSafeArea()
+  const preset = presets.fixed
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const Wrapper = props.unsafe ? View : SafeAreaView
+  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
 
   return (
     <KeyboardAvoidingView
@@ -19,16 +20,17 @@ function ScreenWithoutScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <Wrapper style={[preset.inner, style]}>{props.children}</Wrapper>
+      <View style={[preset.inner, style, insetStyle]}>{props.children}</View>
     </KeyboardAvoidingView>
   )
 }
 
 function ScreenWithScrolling(props: ScreenProps) {
-  const preset = presets["scroll"]
+  const insets = useSafeArea()
+  const preset = presets.scroll
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const Wrapper = props.unsafe ? View : SafeAreaView
+  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
 
   return (
     <KeyboardAvoidingView
@@ -37,14 +39,14 @@ function ScreenWithScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <Wrapper style={[preset.outer, backgroundStyle]}>
+      <View style={[preset.outer, backgroundStyle, insetStyle]}>
         <ScrollView
           style={[preset.outer, backgroundStyle]}
           contentContainerStyle={[preset.inner, style]}
         >
           {props.children}
         </ScrollView>
-      </Wrapper>
+      </View>
     </KeyboardAvoidingView>
   )
 }
diff --git a/IgniteDiffApp/app/components/text-field/text-field.tsx b/IgniteDiffApp/app/components/text-field/text-field.tsx
index 8a5e01d..fafda3f 100644
--- a/IgniteDiffApp/app/components/text-field/text-field.tsx
+++ b/IgniteDiffApp/app/components/text-field/text-field.tsx
@@ -2,7 +2,7 @@ import * as React from "react"
 import { View, TextInput, TextStyle, ViewStyle } from "react-native"
 import { color, spacing, typography } from "../../theme"
 import { translate } from "../../i18n"
-import { Text } from "../"
+import { Text } from "../text/text"
 import { TextFieldProps } from "./text-field.props"
 import { mergeAll, flatten } from "ramda"
 
diff --git a/IgniteDiffApp/app/config/env.js b/IgniteDiffApp/app/config/env.js
index 6707a2e..c5d7ffc 100644
--- a/IgniteDiffApp/app/config/env.js
+++ b/IgniteDiffApp/app/config/env.js
@@ -1,3 +1 @@
-module.exports = __DEV__
-  ? require("./env.dev")
-  : require("./env.prod")
+module.exports = __DEV__ ? require("./env.dev") : require("./env.prod")
diff --git a/IgniteDiffApp/app/models/root-store/root-store.ts b/IgniteDiffApp/app/models/root-store/root-store.ts
index d191251..3bc0eaa 100644
--- a/IgniteDiffApp/app/models/root-store/root-store.ts
+++ b/IgniteDiffApp/app/models/root-store/root-store.ts
@@ -1,11 +1,11 @@
 import { Instance, SnapshotOut, types } from "mobx-state-tree"
-import { NavigationStoreModel } from "../../navigation/navigation-store"
 
 /**
  * A RootStore model.
  */
+// prettier-ignore
 export const RootStoreModel = types.model("RootStore").props({
-  navigationStore: types.optional(NavigationStoreModel, {}),
+
 })
 
 /**
diff --git a/IgniteDiffApp/app/navigation/back-button-handler.tsx b/IgniteDiffApp/app/navigation/back-button-handler.tsx
deleted file mode 100644
index 439df52..0000000
--- a/IgniteDiffApp/app/navigation/back-button-handler.tsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import { FunctionComponent, useEffect } from "react"
-import { BackHandler } from "react-native"
-import { observer } from "mobx-react-lite"
-import { NavigationActions } from "react-navigation"
-import { useStores } from "../models/root-store"
-
-interface BackButtonHandlerProps {
-  /**
-   * Are we allowed to exit?
-   */
-  canExit(routeName: string): boolean
-}
-
-export const BackButtonHandler: FunctionComponent<BackButtonHandlerProps> = observer(props => {
-  const { navigationStore } = useStores()
-
-  useEffect(() => {
-    // We'll fire this when the back button is pressed on Android.
-    const onBackPress = () => {
-      // grab the current route
-      const routeName = navigationStore.findCurrentRoute().routeName
-
-      // are we allowed to exit?
-      if (props.canExit(routeName)) {
-        // let the system know we've not handled this event
-        return false
-      } else {
-        // we can't exit, so let's turn this into a back action
-        navigationStore.dispatch(NavigationActions.back())
-        // let the system know we've handled this event
-        return true
-      }
-    }
-
-    // Subscribe when we come to life
-    BackHandler.addEventListener("hardwareBackPress", onBackPress)
-
-    // Unsubscribe when we're done
-    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
-  }, [])
-
-  // Just render our children, or nothing if they weren't passed.
-  return (props as any).children
-})
diff --git a/IgniteDiffApp/app/navigation/get-active-routename.tsx b/IgniteDiffApp/app/navigation/get-active-routename.tsx
new file mode 100644
index 0000000..86f77ed
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/get-active-routename.tsx
@@ -0,0 +1,13 @@
+import { NavigationState, PartialState } from "@react-navigation/native"
+
+// Gets the current screen from navigation state
+export default function getActiveRouteName(state: NavigationState | PartialState<NavigationState>) {
+  const route = state.routes[state.index]
+
+  if (route.state) {
+    // Dive into nested navigators
+    return getActiveRouteName(route.state)
+  }
+
+  return route.name
+}
diff --git a/IgniteDiffApp/app/navigation/index.ts b/IgniteDiffApp/app/navigation/index.ts
index 2ac4bde..4a1bf50 100644
--- a/IgniteDiffApp/app/navigation/index.ts
+++ b/IgniteDiffApp/app/navigation/index.ts
@@ -1,3 +1,3 @@
-export * from "./back-button-handler"
 export * from "./primary-navigator"
-export * from "./stateful-navigator"
+export * from "./root-navigator"
+export * from "./navigation-service"
diff --git a/IgniteDiffApp/app/navigation/navigation-events.ts b/IgniteDiffApp/app/navigation/navigation-events.ts
deleted file mode 100644
index fd8c6c0..0000000
--- a/IgniteDiffApp/app/navigation/navigation-events.ts
+++ /dev/null
@@ -1,60 +0,0 @@
-import { types } from "mobx-state-tree"
-import { EventType, NavigationEventCallback } from "react-navigation"
-
-/**
- * This mobx-state-tree model bestows a few events for working with `react-navigation`
- * events.
- *
- * You use can `compose` or build directly off this to mixin these features.
- */
-export const NavigationEvents = types.model("NavigationEvents").volatile(() => {
-  // who is currently subscribed to react-navigation events
-  const subs = new Set<NavigationEventCallback>()
-
-  /**
-   * Fires after we change our state.  You call this from the dispatch
-   * to ensure any subscribers are told about state changes.
-   *
-   * @param action The react-navigation action which triggered this update.
-   * @param oldState The previous navigation state.
-   * @param newState The next navigation state.
-   */
-  const fireSubscribers = (action: any, oldState: any, newState: any) => {
-    // tell each subscriber out this
-    subs.forEach(subscriber => {
-      subscriber({
-        type: "action",
-        action,
-        state: newState,
-        lastState: oldState,
-      })
-    })
-  }
-
-  /**
-   * Provides a way from screens (for example) to subscribe to `react-navigation`
-   * events.
-   *
-   * @param eventName The event.
-   * @param handler Some strange handler
-   */
-  const addListener = (eventName: EventType, handler: NavigationEventCallback) => {
-    if (eventName !== "action") {
-      return {
-        remove: () => {
-          /* nothing to do */
-        },
-      }
-    }
-
-    // subscribe
-    subs.add(handler)
-
-    // return the instructions on how to unsubscribe
-    return {
-      remove: () => subs.delete(handler),
-    }
-  }
-
-  return { addListener, fireSubscribers, subs }
-})
diff --git a/IgniteDiffApp/app/navigation/navigation-service.tsx b/IgniteDiffApp/app/navigation/navigation-service.tsx
new file mode 100644
index 0000000..25d4613
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/navigation-service.tsx
@@ -0,0 +1,23 @@
+import React from "react"
+import { PartialState, NavigationState, NavigationContainerRef } from "@react-navigation/native"
+
+export const RootNavigation = {
+  navigate(name: string) {
+    name // eslint-disable-line no-unused-expressions
+  },
+  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function
+  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function
+  getRootState(): NavigationState {
+    return {} as any
+  },
+}
+
+export const setRootNavigation = (ref: React.RefObject<NavigationContainerRef>) => {
+  for (const method in RootNavigation) {
+    RootNavigation[method] = (...args: any) => {
+      if (ref.current) {
+        return ref.current[method](...args)
+      }
+    }
+  }
+}
diff --git a/IgniteDiffApp/app/navigation/navigation-store.ts b/IgniteDiffApp/app/navigation/navigation-store.ts
deleted file mode 100644
index 1bdad5f..0000000
--- a/IgniteDiffApp/app/navigation/navigation-store.ts
+++ /dev/null
@@ -1,92 +0,0 @@
-import { Instance, types } from "mobx-state-tree"
-import { RootNavigator } from "./root-navigator"
-import { NavigationActions, NavigationAction } from "react-navigation"
-import { NavigationEvents } from "./navigation-events"
-
-const DEFAULT_STATE = RootNavigator.router.getStateForAction(NavigationActions.init(), null)
-
-/**
- * Finds the current route.
- *
- * @param navState the current nav state
- */
-function findCurrentRoute(navState) {
-  const route = navState.routes[navState.index]
-  if (route.routes) {
-    return findCurrentRoute(route)
-  }
-  return route
-}
-
-/**
- * Tracks the navigation state for `react-navigation` as well as providers
- * the actions for changing that state.
- */
-export const NavigationStoreModel = NavigationEvents.named("NavigationStore")
-  .props({
-    /**
-     * the navigation state tree (Frozen here means it is immutable.)
-     */
-    state: types.optional(types.frozen(), DEFAULT_STATE),
-  })
-  .preProcessSnapshot(snapshot => {
-    if (!snapshot || !snapshot.state) return snapshot
-
-    try {
-      // make sure react-navigation can handle our state
-      RootNavigator.router.getPathAndParamsForState(snapshot.state)
-      return snapshot
-    } catch (e) {
-      // otherwise restore default state
-      return { ...snapshot, state: DEFAULT_STATE }
-    }
-  })
-  .actions(self => ({
-    /**
-     * Return all subscribers
-     */
-    actionSubscribers() {
-      return self.subs
-    },
-
-    /**
-     * Fires when navigation happens.
-     *
-     * Our job is to update the state for this new navigation action.
-     *
-     * @param action The new navigation action to perform
-     * @param shouldPush Should we push or replace the whole stack?
-     */
-    dispatch(action: NavigationAction, shouldPush = true) {
-      const previousNavState = shouldPush ? self.state : null
-      self.state = RootNavigator.router.getStateForAction(action, previousNavState) || self.state
-      self.fireSubscribers(action, previousNavState, self.state)
-      return true
-    },
-
-    /**
-     * Resets the navigation back to the start.
-     */
-    reset() {
-      self.state = DEFAULT_STATE
-    },
-
-    /**
-     * Finds the current route.
-     */
-    findCurrentRoute() {
-      return findCurrentRoute(self.state)
-    },
-  }))
-  .actions(self => ({
-    /**
-     * Navigate to another place.
-     *
-     * @param routeName The route name.
-     */
-    navigateTo(routeName: string) {
-      self.dispatch(NavigationActions.navigate({ routeName }))
-    },
-  }))
-
-export type NavigationStore = Instance<typeof NavigationStoreModel>
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.ts b/IgniteDiffApp/app/navigation/primary-navigator.ts
deleted file mode 100644
index b37a725..0000000
--- a/IgniteDiffApp/app/navigation/primary-navigator.ts
+++ /dev/null
@@ -1,21 +0,0 @@
-import { createStackNavigator } from "react-navigation-stack"
-import { WelcomeScreen, DemoScreen } from "../screens"
-
-export const PrimaryNavigator = createStackNavigator(
-  {
-    welcome: { screen: WelcomeScreen },
-    demo: { screen: DemoScreen },
-  },
-  {
-    headerMode: "none",
-  },
-)
-
-/**
- * A list of routes from which we're allowed to leave the app when
- * the user presses the back button on Android.
- *
- * Anything not on this list will be a standard `back` action in
- * react-navigation.
- */
-export const exitRoutes: string[] = ["welcome"]
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.tsx b/IgniteDiffApp/app/navigation/primary-navigator.tsx
new file mode 100644
index 0000000..e000649
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/primary-navigator.tsx
@@ -0,0 +1,30 @@
+import React from "react"
+
+import { createNativeStackNavigator } from "react-native-screens/native-stack"
+import { WelcomeScreen, DemoScreen } from "../screens"
+import { PrimaryParamList } from "./types"
+
+const Stack = createNativeStackNavigator<PrimaryParamList>()
+
+export function PrimaryNavigator() {
+  return (
+    <Stack.Navigator
+      screenOptions={{
+        headerShown: false,
+        gestureEnabled: true,
+      }}
+    >
+      <Stack.Screen name="welcome" component={WelcomeScreen} />
+      <Stack.Screen name="demo" component={DemoScreen} />
+    </Stack.Navigator>
+  )
+}
+
+/**
+ * A list of routes from which we're allowed to leave the app when
+ * the user presses the back button on Android.
+ *
+ * Anything not on this list will be a standard `back` action in
+ * react-navigation.
+ */
+export const exitRoutes: string[] = ["welcome"]
diff --git a/IgniteDiffApp/app/navigation/root-navigator.ts b/IgniteDiffApp/app/navigation/root-navigator.ts
deleted file mode 100644
index 8237157..0000000
--- a/IgniteDiffApp/app/navigation/root-navigator.ts
+++ /dev/null
@@ -1,16 +0,0 @@
-import { createStackNavigator } from "react-navigation-stack"
-import { PrimaryNavigator } from "./primary-navigator"
-
-// prettier-ignore
-import {
-} from "../screens" // eslint-disable-line @typescript-eslint/no-unused-vars
-
-export const RootNavigator = createStackNavigator(
-  {
-    primaryStack: { screen: PrimaryNavigator },
-  },
-  {
-    headerMode: "none",
-    navigationOptions: { gesturesEnabled: false },
-  },
-)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.tsx b/IgniteDiffApp/app/navigation/root-navigator.tsx
new file mode 100644
index 0000000..9f97622
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/root-navigator.tsx
@@ -0,0 +1,42 @@
+import React from "react"
+import { NavigationContainer, NavigationContainerRef } from "@react-navigation/native"
+
+import { createNativeStackNavigator } from "react-native-screens/native-stack"
+import { RootParamList } from "./types"
+import { PrimaryNavigator } from "./primary-navigator"
+
+const Stack = createNativeStackNavigator<RootParamList>()
+
+const RootStack = () => {
+  return (
+    <Stack.Navigator
+      screenOptions={{
+        headerShown: false,
+        gestureEnabled: true,
+
+        stackPresentation: "modal",
+      }}
+    >
+      <Stack.Screen
+        name="primaryStack"
+        component={PrimaryNavigator}
+        options={{
+          headerShown: false,
+        }}
+      />
+    </Stack.Navigator>
+  )
+}
+
+export const RootNavigator = React.forwardRef<
+  NavigationContainerRef,
+  Partial<React.ComponentProps<typeof NavigationContainer>>
+>((props, ref) => {
+  return (
+    <NavigationContainer {...props} ref={ref}>
+      <RootStack />
+    </NavigationContainer>
+  )
+})
+
+RootNavigator.displayName = "RootNavigator"
diff --git a/IgniteDiffApp/app/navigation/stateful-navigator.tsx b/IgniteDiffApp/app/navigation/stateful-navigator.tsx
deleted file mode 100644
index 9c8ca70..0000000
--- a/IgniteDiffApp/app/navigation/stateful-navigator.tsx
+++ /dev/null
@@ -1,25 +0,0 @@
-import * as React from "react"
-import { observer } from "mobx-react-lite"
-// @ts-ignore: until they update @type/react-navigation
-import { getNavigation, NavigationScreenProp, NavigationState } from "react-navigation"
-import { useStores } from "../models/root-store"
-import { RootNavigator } from "./root-navigator"
-
-let currentNavigation: NavigationScreenProp<NavigationState> | undefined
-
-export const StatefulNavigator: React.FunctionComponent<{}> = observer(() => {
-  const {
-    navigationStore: { state, dispatch, actionSubscribers },
-  } = useStores()
-
-  currentNavigation = getNavigation(
-    RootNavigator.router,
-    state,
-    dispatch,
-    actionSubscribers(),
-    {},
-    () => currentNavigation,
-  )
-
-  return <RootNavigator navigation={currentNavigation} />
-})
diff --git a/IgniteDiffApp/app/navigation/types.ts b/IgniteDiffApp/app/navigation/types.ts
new file mode 100644
index 0000000..3a5cb07
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/types.ts
@@ -0,0 +1,8 @@
+export type RootParamList = {
+  primaryStack: undefined
+}
+
+export type PrimaryParamList = {
+  welcome: undefined
+  demo: undefined
+}
diff --git a/IgniteDiffApp/app/navigation/use-back-button-handler.tsx b/IgniteDiffApp/app/navigation/use-back-button-handler.tsx
new file mode 100644
index 0000000..b06e210
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/use-back-button-handler.tsx
@@ -0,0 +1,50 @@
+import { useEffect, useRef } from "react"
+import { BackHandler } from "react-native"
+import { NavigationContainerRef } from "@react-navigation/native"
+import getActiveRouteName from "./get-active-routename"
+
+export function useBackButtonHandler(
+  ref: React.RefObject<NavigationContainerRef>,
+  canExit: (routeName: string) => boolean,
+) {
+  const canExitRef = useRef(canExit)
+
+  useEffect(() => {
+    canExitRef.current = canExit
+  }, [canExit])
+
+  useEffect(() => {
+    // We'll fire this when the back button is pressed on Android.
+    const onBackPress = () => {
+      const navigation = ref.current
+
+      if (navigation == null) {
+        return false
+      }
+
+      // grab the current route
+      const routeName = getActiveRouteName(navigation.getRootState())
+
+      // are we allowed to exit?
+      if (canExitRef.current(routeName)) {
+        // let the system know we've not handled this event
+        return false
+      }
+
+      // we can't exit, so let's turn this into a back action
+      if (navigation.canGoBack()) {
+        navigation.goBack()
+
+        return true
+      }
+
+      return false
+    }
+
+    // Subscribe when we come to life
+    BackHandler.addEventListener("hardwareBackPress", onBackPress)
+
+    // Unsubscribe when we're done
+    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
+  }, [ref])
+}
diff --git a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
index a62c3f8..7241e95 100644
--- a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
+++ b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
@@ -1,6 +1,7 @@
 import * as React from "react"
 import { Image, ImageStyle, Platform, TextStyle, View, ViewStyle } from "react-native"
-import { NavigationInjectedProps } from "react-navigation"
+import { ParamListBase } from "@react-navigation/native"
+import { NativeStackNavigationProp } from "react-native-screens/native-stack"
 import { BulletItem, Button, Header, Text, Screen, Wallpaper } from "../../components"
 import { color, spacing } from "../../theme"
 import { Api } from "../../services/api"
@@ -76,10 +77,12 @@ const HINT: TextStyle = {
   marginVertical: spacing[2],
 }
 
-export interface DemoScreenProps extends NavigationInjectedProps<{}> {}
+export interface DemoScreenProps {
+  navigation: NativeStackNavigationProp<ParamListBase>
+}
 
 export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
-  const goBack = React.useMemo(() => () => props.navigation.goBack(null), [props.navigation])
+  const goBack = React.useMemo(() => () => props.navigation.goBack(), [props.navigation])
 
   const demoReactotron = React.useMemo(
     () => async () => {
@@ -99,7 +102,9 @@ export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
               },
             },
           },
-          functionNames: function hello() { /* dummy function */ },
+          functionNames: function hello() {
+            /* dummy function */
+          },
         },
         preview: "More control with display()",
         important: true,
diff --git a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
index 0f546fe..5b99ab2 100644
--- a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
+++ b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
@@ -1,6 +1,7 @@
 import * as React from "react"
 import { View, Image, ViewStyle, TextStyle, ImageStyle, SafeAreaView } from "react-native"
-import { NavigationInjectedProps } from "react-navigation"
+import { ParamListBase } from "@react-navigation/native"
+import { NativeStackNavigationProp } from "react-native-screens/native-stack"
 import { Button, Header, Screen, Text, Wallpaper } from "../../components"
 import { color, spacing } from "../../theme"
 const bowserLogo = require("./bowser.png")
@@ -74,7 +75,9 @@ const FOOTER_CONTENT: ViewStyle = {
   paddingHorizontal: spacing[4],
 }
 
-export interface WelcomeScreenProps extends NavigationInjectedProps<{}> {}
+export interface WelcomeScreenProps {
+  navigation: NativeStackNavigationProp<ParamListBase>
+}
 
 export const WelcomeScreen: React.FunctionComponent<WelcomeScreenProps> = props => {
   const nextScreen = React.useMemo(() => () => props.navigation.navigate("demo"), [
diff --git a/IgniteDiffApp/app/services/reactotron/reactotron.ts b/IgniteDiffApp/app/services/reactotron/reactotron.ts
index 51e2c79..94af9c7 100644
--- a/IgniteDiffApp/app/services/reactotron/reactotron.ts
+++ b/IgniteDiffApp/app/services/reactotron/reactotron.ts
@@ -5,6 +5,7 @@ import { onSnapshot } from "mobx-state-tree"
 import { ReactotronConfig, DEFAULT_REACTOTRON_CONFIG } from "./reactotron-config"
 import { mst } from "reactotron-mst"
 import { clear } from "../../utils/storage"
+import { RootNavigation } from "../../navigation"
 
 // Teach TypeScript about the bad things we want to do.
 declare global {
@@ -150,12 +151,22 @@ export class Reactotron {
       })
 
       Tron.onCustomCommand({
-        title: "Reset Navigation Store",
-        description: "Resets the navigation store",
+        title: "Reset Navigation State",
+        description: "Resets the navigation state",
         command: "resetNavigation",
         handler: () => {
-          console.tron.log("resetting navigation store")
-          this.rootStore.navigationStore.reset()
+          console.tron.log("resetting navigation state")
+          RootNavigation.resetRoot({ routes: [] })
+        },
+      })
+
+      Tron.onCustomCommand({
+        title: "Go Back",
+        description: "Goes back",
+        command: "goBack",
+        handler: () => {
+          console.tron.log("Going back")
+          RootNavigation.goBack()
         },
       })
 
diff --git a/IgniteDiffApp/app/theme/spacing.ts b/IgniteDiffApp/app/theme/spacing.ts
index 8f3a556..b1b7935 100644
--- a/IgniteDiffApp/app/theme/spacing.ts
+++ b/IgniteDiffApp/app/theme/spacing.ts
@@ -1,7 +1,7 @@
 /**
  * NOTE TO DEVS:
  *
- * Spacing should consistent and whitespace thought of as a first class technique up
+ * Spacing should be consistent and whitespace thought of as a first class technique up
  * there with color and typefaces.
  *
  * Which type of scale you use is based on the design.
diff --git a/IgniteDiffApp/app/utils/keychain.ts b/IgniteDiffApp/app/utils/keychain.ts
index b6e4bf2..34774bb 100644
--- a/IgniteDiffApp/app/utils/keychain.ts
+++ b/IgniteDiffApp/app/utils/keychain.ts
@@ -25,8 +25,8 @@ export async function load(server?: string) {
   if (server) {
     const creds = await ReactNativeKeychain.getInternetCredentials(server)
     return {
-      username: creds.username,
-      password: creds.password,
+      username: creds ? creds.username : null,
+      password: creds ? creds.password : null,
       server,
     }
   } else {
diff --git a/IgniteDiffApp/ignite/ignite.json b/IgniteDiffApp/ignite/ignite.json
index de17532..5f7a4b3 100644
--- a/IgniteDiffApp/ignite/ignite.json
+++ b/IgniteDiffApp/ignite/ignite.json
@@ -3,5 +3,5 @@
   "generators": {},
   "createdWith": "3.5.1",
   "boilerplate": "ignite-bowser",
-  "boilerplateVersion": "4.14.1"
+  "boilerplateVersion": "5.0.2"
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
index 601fef1..1eff9fa 100644
--- a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
+++ b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
@@ -8,7 +8,7 @@
 
 /* Begin PBXBuildFile section */
 		00E356F31AD99517003FC87E /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
-		0E3D1D7BC19A8A03A724F303 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F42F4E7CFFA239F2898CC25 /* libPods-IgniteDiffApp-tvOS.a */; };
+		11E9D4F058CD9FE27CA00742 /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC79E87D85B5DCB26C308282 /* libPods-IgniteDiffApp.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
@@ -17,27 +17,27 @@
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		2DCD954D1E0B4F2C00145EB5 /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
-		498234D702F2A0167C6923F5 /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C59B199ED3AEDE08B75C731D /* libPods-IgniteDiffAppTests.a */; };
-		7E3DDDDC02610E4C28DCE5D3 /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C272730C24F5B207F0A04E47 /* libPods-IgniteDiffApp.a */; };
-		F564FC3613C01302CBEDDB15 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CE2C6ED8507CEEADE41F0BAA /* libPods-IgniteDiffApp-tvOSTests.a */; };
-		87830F0EA85247268BB790DB /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 432A5165524B4800A32610BB /* Montserrat-Black.ttf */; };
-		F9B47D36394E4828970A35FB /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 04F0EC66871A4B03BEF6EEF8 /* Montserrat-BlackItalic.ttf */; };
-		B73BBD4288574CFD880C462B /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 01D7ABDEAC58439FBBC3F14F /* Montserrat-Bold.ttf */; };
-		B81EBCBB59D8493791FAD431 /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = C91943B299564560989D93E1 /* Montserrat-BoldItalic.ttf */; };
-		1F0AD17E1E1641449B753D5C /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 128C1A58BAE84FEABEDAE218 /* Montserrat-ExtraBold.ttf */; };
-		FF88F190FC70430DBFC9E358 /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B87CD97F10444C06A8C4DC8D /* Montserrat-ExtraBoldItalic.ttf */; };
-		2E24E3FDB23A4331B3C9B543 /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 83012A0F8E05403D9E99B986 /* Montserrat-ExtraLight.ttf */; };
-		9C6D915D24594F28B45F435E /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = AFB6B5B713AB4E8BBD6A6161 /* Montserrat-ExtraLightItalic.ttf */; };
-		EDF38CB7B1684D2DAF2CD258 /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1824C890A5D04110B9A1C4C9 /* Montserrat-Italic.ttf */; };
-		4C7E8A7950FE4CDFB004ABE5 /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9EEEC78681984B88962A45A6 /* Montserrat-Light.ttf */; };
-		1EB3733472844008B48CB5DC /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 83CE16A52B8140CB961F40DC /* Montserrat-LightItalic.ttf */; };
-		5011C32058304ACBBDED7DA2 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F7D7F7DE4D7649BF9ABB0180 /* Montserrat-Medium.ttf */; };
-		A3ED7747E9EB43D1926C6DF7 /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3F180D11A9F843C094B15510 /* Montserrat-MediumItalic.ttf */; };
-		7F003214EA1B4EEDAEC4997B /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A4A9206B1C6E4A11958DFFAF /* Montserrat-Regular.ttf */; };
-		A5148F0B48B74D8CB4B480EC /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1250842C9D434C34BE44B4E1 /* Montserrat-SemiBold.ttf */; };
-		D295D56DF9734245B68334B0 /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 797751E4988543A79ACBDC7E /* Montserrat-SemiBoldItalic.ttf */; };
-		025B31223E894DE2AD5518FB /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BB173DA7E9D946018F8C64F2 /* Montserrat-Thin.ttf */; };
-		856A7E8F4155438880C4A7AC /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 7066ED8CB2FA48B186F37B57 /* Montserrat-ThinItalic.ttf */; };
+		3B58CF84EFD8D6F2B0AB8063 /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4B36385FE29B3311920B15D6 /* libPods-IgniteDiffAppTests.a */; };
+		4F9553862377FCADAE3A6DA6 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C4373BE2378B0715D4D09C3F /* libPods-IgniteDiffApp-tvOS.a */; };
+		AFCC79F9E673210D4096AB48 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2276994EAF710AA05AF5AE92 /* libPods-IgniteDiffApp-tvOSTests.a */; };
+		F4E8466A7BFF41F1A26925B9 /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1A1A264B14414567ADDC00DA /* Montserrat-Black.ttf */; };
+		6B056130613946A48EE9A4F9 /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 38335AECBE254F86B99293D0 /* Montserrat-BlackItalic.ttf */; };
+		1E4CA8E1A6924E91B030E6E4 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6F1034CA7A1145D697D83CE3 /* Montserrat-Bold.ttf */; };
+		69D509F4D5CE4983B9901E55 /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 866A05D92C884A81B1D800C1 /* Montserrat-BoldItalic.ttf */; };
+		6A7904055FFD4532970A95B9 /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E46F17F048014F6EB78ECC46 /* Montserrat-ExtraBold.ttf */; };
+		1028C7ACCBE34DAFB36741AB /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1733725488144EF4B53F3637 /* Montserrat-ExtraBoldItalic.ttf */; };
+		7CE9A5D2DB7C40AB92A08049 /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = FF88D1FD4B5C442481FABE49 /* Montserrat-ExtraLight.ttf */; };
+		5118240C8AA44375B59E8EC1 /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2F447CD097D24BCA93711A8C /* Montserrat-ExtraLightItalic.ttf */; };
+		8E3DF358AAE540CEA9D72104 /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 71469E410F5D4A8896EA9C06 /* Montserrat-Italic.ttf */; };
+		A641C24730B644A2807E73EA /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 74396084954B441EAABF6E25 /* Montserrat-Light.ttf */; };
+		BD0C80F920D24E108A1C2AC7 /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B18D289E535D40A6BD05C761 /* Montserrat-LightItalic.ttf */; };
+		D886CFE852754E0D848A2E68 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 6EDE120D865E40DFAAE2A120 /* Montserrat-Medium.ttf */; };
+		BA321E3545394FE3A098A5DD /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5F17D946D19B4CBB969EAADD /* Montserrat-MediumItalic.ttf */; };
+		9FE91B2D1D174E1699EA6E3E /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 023D594876084B36A14E453E /* Montserrat-Regular.ttf */; };
+		D94FB0531A0E4BEEADE7F077 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E208E24A24284F3A81DCC68A /* Montserrat-SemiBold.ttf */; };
+		DB20A3D79ADE401EB211D445 /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9D88C48A1CB6433F98613B7E /* Montserrat-SemiBoldItalic.ttf */; };
+		CDF52C9B3D1D4A5B8678F032 /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 7B1547838F9F453E8A1C7CA0 /* Montserrat-Thin.ttf */; };
+		4BDB7E7A6F12483CB2882AE6 /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = C34E5D4FE1BD47B59DC8AEAE /* Montserrat-ThinItalic.ttf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -69,40 +69,40 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = IgniteDiffApp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = IgniteDiffApp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = IgniteDiffApp/main.m; sourceTree = "<group>"; };
-		188E6B26C64B285397E90AD3 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
+		179D9E9C676C497CA80D83B8 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
+		2276994EAF710AA05AF5AE92 /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E47B1E0B4A5D006451C7 /* IgniteDiffApp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "IgniteDiffApp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* IgniteDiffApp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "IgniteDiffApp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
-		4F42F4E7CFFA239F2898CC25 /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		7D4EC41A3DE9242868338327 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
-		827566B139AA621D1DEE2E9D /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		8FCF09CF01386EC2DF39A560 /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
-		939E4321CA2990EC7A1D33F0 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		C272730C24F5B207F0A04E47 /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		C59B199ED3AEDE08B75C731D /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		CE2C6ED8507CEEADE41F0BAA /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		40FB99439D8755AFA3AE4BA1 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		4B36385FE29B3311920B15D6 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		7D842178D045BA3B5BBEED41 /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
+		9DD551746094E70166BEA062 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
+		BD9124CD4613BC9BF2CBA506 /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
+		C4373BE2378B0715D4D09C3F /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		C946B27AB4CFC30260305819 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
+		CB8AD9F9B54C7D94529EA9D9 /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
+		D18A513DED02F85128EF54AB /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
 		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
-		F13FF26E4471B9ADCBA85AD6 /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
-		F67F19C529E584CBEA10A6FA /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		FAC0CD0E322C5EDBF7535243 /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
-		432A5165524B4800A32610BB /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		04F0EC66871A4B03BEF6EEF8 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		01D7ABDEAC58439FBBC3F14F /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		C91943B299564560989D93E1 /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		128C1A58BAE84FEABEDAE218 /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		B87CD97F10444C06A8C4DC8D /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		83012A0F8E05403D9E99B986 /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		AFB6B5B713AB4E8BBD6A6161 /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		1824C890A5D04110B9A1C4C9 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		9EEEC78681984B88962A45A6 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		83CE16A52B8140CB961F40DC /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		F7D7F7DE4D7649BF9ABB0180 /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		3F180D11A9F843C094B15510 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		A4A9206B1C6E4A11958DFFAF /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		1250842C9D434C34BE44B4E1 /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		797751E4988543A79ACBDC7E /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		BB173DA7E9D946018F8C64F2 /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		7066ED8CB2FA48B186F37B57 /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		FC79E87D85B5DCB26C308282 /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		1A1A264B14414567ADDC00DA /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		38335AECBE254F86B99293D0 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		6F1034CA7A1145D697D83CE3 /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		866A05D92C884A81B1D800C1 /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		E46F17F048014F6EB78ECC46 /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		1733725488144EF4B53F3637 /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		FF88D1FD4B5C442481FABE49 /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		2F447CD097D24BCA93711A8C /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		71469E410F5D4A8896EA9C06 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		74396084954B441EAABF6E25 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		B18D289E535D40A6BD05C761 /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		6EDE120D865E40DFAAE2A120 /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		5F17D946D19B4CBB969EAADD /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		023D594876084B36A14E453E /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		E208E24A24284F3A81DCC68A /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		9D88C48A1CB6433F98613B7E /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		7B1547838F9F453E8A1C7CA0 /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		C34E5D4FE1BD47B59DC8AEAE /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -110,7 +110,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				498234D702F2A0167C6923F5 /* libPods-IgniteDiffAppTests.a in Frameworks */,
+				3B58CF84EFD8D6F2B0AB8063 /* libPods-IgniteDiffAppTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -118,7 +118,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				7E3DDDDC02610E4C28DCE5D3 /* libPods-IgniteDiffApp.a in Frameworks */,
+				11E9D4F058CD9FE27CA00742 /* libPods-IgniteDiffApp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -126,7 +126,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				0E3D1D7BC19A8A03A724F303 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
+				4F9553862377FCADAE3A6DA6 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -134,7 +134,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				F564FC3613C01302CBEDDB15 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
+				AFCC79F9E673210D4096AB48 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -177,25 +177,25 @@
 			children = (
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
 				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
-				C272730C24F5B207F0A04E47 /* libPods-IgniteDiffApp.a */,
-				4F42F4E7CFFA239F2898CC25 /* libPods-IgniteDiffApp-tvOS.a */,
-				CE2C6ED8507CEEADE41F0BAA /* libPods-IgniteDiffApp-tvOSTests.a */,
-				C59B199ED3AEDE08B75C731D /* libPods-IgniteDiffAppTests.a */,
+				FC79E87D85B5DCB26C308282 /* libPods-IgniteDiffApp.a */,
+				C4373BE2378B0715D4D09C3F /* libPods-IgniteDiffApp-tvOS.a */,
+				2276994EAF710AA05AF5AE92 /* libPods-IgniteDiffApp-tvOSTests.a */,
+				4B36385FE29B3311920B15D6 /* libPods-IgniteDiffAppTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		6204CE259CF4E4766B6371EE /* Pods */ = {
+		4A1CD158AA1B2ED8495B1EAC /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				8FCF09CF01386EC2DF39A560 /* Pods-IgniteDiffApp.debug.xcconfig */,
-				FAC0CD0E322C5EDBF7535243 /* Pods-IgniteDiffApp.release.xcconfig */,
-				F67F19C529E584CBEA10A6FA /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
-				939E4321CA2990EC7A1D33F0 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
-				827566B139AA621D1DEE2E9D /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
-				188E6B26C64B285397E90AD3 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
-				7D4EC41A3DE9242868338327 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
-				F13FF26E4471B9ADCBA85AD6 /* Pods-IgniteDiffAppTests.release.xcconfig */,
+				CB8AD9F9B54C7D94529EA9D9 /* Pods-IgniteDiffApp.debug.xcconfig */,
+				7D842178D045BA3B5BBEED41 /* Pods-IgniteDiffApp.release.xcconfig */,
+				D18A513DED02F85128EF54AB /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
+				40FB99439D8755AFA3AE4BA1 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
+				9DD551746094E70166BEA062 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
+				179D9E9C676C497CA80D83B8 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
+				C946B27AB4CFC30260305819 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
+				BD9124CD4613BC9BF2CBA506 /* Pods-IgniteDiffAppTests.release.xcconfig */,
 			);
 			name = Pods;
 			path = Pods;
@@ -216,8 +216,8 @@
 				00E356EF1AD99517003FC87E /* IgniteDiffAppTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				6204CE259CF4E4766B6371EE /* Pods */,
-				FD70F6FDD36543068F72D1F2 /* Resources */,
+				4A1CD158AA1B2ED8495B1EAC /* Pods */,
+				C8144F8742634C3D999DF81C /* Resources */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -235,27 +235,27 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		FD70F6FDD36543068F72D1F2 /* Resources */ = {
+		C8144F8742634C3D999DF81C /* Resources */ = {
 			isa = "PBXGroup";
 			children = (
-				432A5165524B4800A32610BB /* Montserrat-Black.ttf */,
-				04F0EC66871A4B03BEF6EEF8 /* Montserrat-BlackItalic.ttf */,
-				01D7ABDEAC58439FBBC3F14F /* Montserrat-Bold.ttf */,
-				C91943B299564560989D93E1 /* Montserrat-BoldItalic.ttf */,
-				128C1A58BAE84FEABEDAE218 /* Montserrat-ExtraBold.ttf */,
-				B87CD97F10444C06A8C4DC8D /* Montserrat-ExtraBoldItalic.ttf */,
-				83012A0F8E05403D9E99B986 /* Montserrat-ExtraLight.ttf */,
-				AFB6B5B713AB4E8BBD6A6161 /* Montserrat-ExtraLightItalic.ttf */,
-				1824C890A5D04110B9A1C4C9 /* Montserrat-Italic.ttf */,
-				9EEEC78681984B88962A45A6 /* Montserrat-Light.ttf */,
-				83CE16A52B8140CB961F40DC /* Montserrat-LightItalic.ttf */,
-				F7D7F7DE4D7649BF9ABB0180 /* Montserrat-Medium.ttf */,
-				3F180D11A9F843C094B15510 /* Montserrat-MediumItalic.ttf */,
-				A4A9206B1C6E4A11958DFFAF /* Montserrat-Regular.ttf */,
-				1250842C9D434C34BE44B4E1 /* Montserrat-SemiBold.ttf */,
-				797751E4988543A79ACBDC7E /* Montserrat-SemiBoldItalic.ttf */,
-				BB173DA7E9D946018F8C64F2 /* Montserrat-Thin.ttf */,
-				7066ED8CB2FA48B186F37B57 /* Montserrat-ThinItalic.ttf */,
+				1A1A264B14414567ADDC00DA /* Montserrat-Black.ttf */,
+				38335AECBE254F86B99293D0 /* Montserrat-BlackItalic.ttf */,
+				6F1034CA7A1145D697D83CE3 /* Montserrat-Bold.ttf */,
+				866A05D92C884A81B1D800C1 /* Montserrat-BoldItalic.ttf */,
+				E46F17F048014F6EB78ECC46 /* Montserrat-ExtraBold.ttf */,
+				1733725488144EF4B53F3637 /* Montserrat-ExtraBoldItalic.ttf */,
+				FF88D1FD4B5C442481FABE49 /* Montserrat-ExtraLight.ttf */,
+				2F447CD097D24BCA93711A8C /* Montserrat-ExtraLightItalic.ttf */,
+				71469E410F5D4A8896EA9C06 /* Montserrat-Italic.ttf */,
+				74396084954B441EAABF6E25 /* Montserrat-Light.ttf */,
+				B18D289E535D40A6BD05C761 /* Montserrat-LightItalic.ttf */,
+				6EDE120D865E40DFAAE2A120 /* Montserrat-Medium.ttf */,
+				5F17D946D19B4CBB969EAADD /* Montserrat-MediumItalic.ttf */,
+				023D594876084B36A14E453E /* Montserrat-Regular.ttf */,
+				E208E24A24284F3A81DCC68A /* Montserrat-SemiBold.ttf */,
+				9D88C48A1CB6433F98613B7E /* Montserrat-SemiBoldItalic.ttf */,
+				7B1547838F9F453E8A1C7CA0 /* Montserrat-Thin.ttf */,
+				C34E5D4FE1BD47B59DC8AEAE /* Montserrat-ThinItalic.ttf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
@@ -268,7 +268,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "IgniteDiffAppTests" */;
 			buildPhases = (
-				761D90596312D05ED1E49C48 /* [CP] Check Pods Manifest.lock */,
+				30A74CF03D65877E0090D666 /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -287,7 +287,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "IgniteDiffApp" */;
 			buildPhases = (
-				C1FC66849409FDFDD06C92DB /* [CP] Check Pods Manifest.lock */,
+				A2B2853F8EC3F2BA29BDE544 /* [CP] Check Pods Manifest.lock */,
 				FD10A7F022414F080027D42C /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
@@ -307,7 +307,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOS" */;
 			buildPhases = (
-				1469D25FDFCA8F0117F456D1 /* [CP] Check Pods Manifest.lock */,
+				D68A6B904651F13D99B4497B /* [CP] Check Pods Manifest.lock */,
 				FD10A7F122414F3F0027D42C /* Start Packager */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
@@ -327,7 +327,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOSTests" */;
 			buildPhases = (
-				D7C32C82C007A73F37D1220A /* [CP] Check Pods Manifest.lock */,
+				1B40C5587E718BAAAFF2A5FA /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -401,24 +401,24 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				87830F0EA85247268BB790DB /* Montserrat-Black.ttf in Resources */,
-				F9B47D36394E4828970A35FB /* Montserrat-BlackItalic.ttf in Resources */,
-				B73BBD4288574CFD880C462B /* Montserrat-Bold.ttf in Resources */,
-				B81EBCBB59D8493791FAD431 /* Montserrat-BoldItalic.ttf in Resources */,
-				1F0AD17E1E1641449B753D5C /* Montserrat-ExtraBold.ttf in Resources */,
-				FF88F190FC70430DBFC9E358 /* Montserrat-ExtraBoldItalic.ttf in Resources */,
-				2E24E3FDB23A4331B3C9B543 /* Montserrat-ExtraLight.ttf in Resources */,
-				9C6D915D24594F28B45F435E /* Montserrat-ExtraLightItalic.ttf in Resources */,
-				EDF38CB7B1684D2DAF2CD258 /* Montserrat-Italic.ttf in Resources */,
-				4C7E8A7950FE4CDFB004ABE5 /* Montserrat-Light.ttf in Resources */,
-				1EB3733472844008B48CB5DC /* Montserrat-LightItalic.ttf in Resources */,
-				5011C32058304ACBBDED7DA2 /* Montserrat-Medium.ttf in Resources */,
-				A3ED7747E9EB43D1926C6DF7 /* Montserrat-MediumItalic.ttf in Resources */,
-				7F003214EA1B4EEDAEC4997B /* Montserrat-Regular.ttf in Resources */,
-				A5148F0B48B74D8CB4B480EC /* Montserrat-SemiBold.ttf in Resources */,
-				D295D56DF9734245B68334B0 /* Montserrat-SemiBoldItalic.ttf in Resources */,
-				025B31223E894DE2AD5518FB /* Montserrat-Thin.ttf in Resources */,
-				856A7E8F4155438880C4A7AC /* Montserrat-ThinItalic.ttf in Resources */,
+				F4E8466A7BFF41F1A26925B9 /* Montserrat-Black.ttf in Resources */,
+				6B056130613946A48EE9A4F9 /* Montserrat-BlackItalic.ttf in Resources */,
+				1E4CA8E1A6924E91B030E6E4 /* Montserrat-Bold.ttf in Resources */,
+				69D509F4D5CE4983B9901E55 /* Montserrat-BoldItalic.ttf in Resources */,
+				6A7904055FFD4532970A95B9 /* Montserrat-ExtraBold.ttf in Resources */,
+				1028C7ACCBE34DAFB36741AB /* Montserrat-ExtraBoldItalic.ttf in Resources */,
+				7CE9A5D2DB7C40AB92A08049 /* Montserrat-ExtraLight.ttf in Resources */,
+				5118240C8AA44375B59E8EC1 /* Montserrat-ExtraLightItalic.ttf in Resources */,
+				8E3DF358AAE540CEA9D72104 /* Montserrat-Italic.ttf in Resources */,
+				A641C24730B644A2807E73EA /* Montserrat-Light.ttf in Resources */,
+				BD0C80F920D24E108A1C2AC7 /* Montserrat-LightItalic.ttf in Resources */,
+				D886CFE852754E0D848A2E68 /* Montserrat-Medium.ttf in Resources */,
+				BA321E3545394FE3A098A5DD /* Montserrat-MediumItalic.ttf in Resources */,
+				9FE91B2D1D174E1699EA6E3E /* Montserrat-Regular.ttf in Resources */,
+				D94FB0531A0E4BEEADE7F077 /* Montserrat-SemiBold.ttf in Resources */,
+				DB20A3D79ADE401EB211D445 /* Montserrat-SemiBoldItalic.ttf in Resources */,
+				CDF52C9B3D1D4A5B8678F032 /* Montserrat-Thin.ttf in Resources */,
+				4BDB7E7A6F12483CB2882AE6 /* Montserrat-ThinItalic.ttf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -454,7 +454,7 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		1469D25FDFCA8F0117F456D1 /* [CP] Check Pods Manifest.lock */ = {
+		1B40C5587E718BAAAFF2A5FA /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -469,7 +469,7 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -490,7 +490,7 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		761D90596312D05ED1E49C48 /* [CP] Check Pods Manifest.lock */ = {
+		30A74CF03D65877E0090D666 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -512,7 +512,7 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		C1FC66849409FDFDD06C92DB /* [CP] Check Pods Manifest.lock */ = {
+		A2B2853F8EC3F2BA29BDE544 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -534,7 +534,7 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		D7C32C82C007A73F37D1220A /* [CP] Check Pods Manifest.lock */ = {
+		D68A6B904651F13D99B4497B /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -549,7 +549,7 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -661,7 +661,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7D4EC41A3DE9242868338327 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
+			baseConfigurationReference = C946B27AB4CFC30260305819 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -684,7 +684,7 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F13FF26E4471B9ADCBA85AD6 /* Pods-IgniteDiffAppTests.release.xcconfig */;
+			baseConfigurationReference = BD9124CD4613BC9BF2CBA506 /* Pods-IgniteDiffAppTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
@@ -704,7 +704,7 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 8FCF09CF01386EC2DF39A560 /* Pods-IgniteDiffApp.debug.xcconfig */;
+			baseConfigurationReference = CB8AD9F9B54C7D94529EA9D9 /* Pods-IgniteDiffApp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -724,7 +724,7 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = FAC0CD0E322C5EDBF7535243 /* Pods-IgniteDiffApp.release.xcconfig */;
+			baseConfigurationReference = 7D842178D045BA3B5BBEED41 /* Pods-IgniteDiffApp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -743,7 +743,7 @@
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F67F19C529E584CBEA10A6FA /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
+			baseConfigurationReference = D18A513DED02F85128EF54AB /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -771,7 +771,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 939E4321CA2990EC7A1D33F0 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
+			baseConfigurationReference = 40FB99439D8755AFA3AE4BA1 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -799,7 +799,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 827566B139AA621D1DEE2E9D /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
+			baseConfigurationReference = 9DD551746094E70166BEA062 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -826,7 +826,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 188E6B26C64B285397E90AD3 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
+			baseConfigurationReference = 179D9E9C676C497CA80D83B8 /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index d42f2e3..ebca145 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -7,17 +7,17 @@
     "ios": "react-native run-ios",
     "start": "react-native start",
     "test": "jest",
-    "lint": "eslint index.js app --fix --ext .js,.ts,.tsx",
+    "lint": "eslint index.js app storybook test --fix --ext .js,.ts,.tsx",
     "test:e2e": "detox test -c ios.sim.debug",
     "build:e2e": "detox build -c ios.sim.debug",
     "ci:test:e2e": "detox test -c ios.sim.release -l verbose --cleanup",
     "ci:build:e2e": "detox build -c ios.sim.release",
     "compile": "tsc --noEmit -p . --pretty",
     "format": "npm-run-all format:*",
-    "format:js": "prettier --write {.,**}/*.js",
-    "format:json": "prettier --write {.,**}/*.json",
-    "format:md": "prettier --write {.,**}/*.md",
-    "format:ts": "prettier --write {.,**}/*.{ts,tsx}",
+    "format:js": "prettier --write '**/*.js'",
+    "format:json": "prettier --write '**/*.json'",
+    "format:md": "prettier --write '**/*.md'",
+    "format:ts": "prettier --write '**/*.ts{,x}'",
     "hack:types-react-navigation": "rimraf node_modules/@types/react-navigation/node_modules/@types",
     "hack:types-react-native": "rimraf node_modules/@types/react-native/node_modules/@types",
     "hack:types-react-test-renderer": "rimraf node_modules/@types/react-test-renderer/node_modules/@types",
@@ -28,26 +28,25 @@
     "adb": "adb reverse tcp:9090 tcp:9090 && adb reverse tcp:3000 tcp:3000 && adb reverse tcp:9001 tcp:9001 && adb reverse tcp:8081 tcp:8081"
   },
   "dependencies": {
-    "@react-native-community/async-storage": "^1.5.1",
+    "@react-native-community/async-storage": "^1.9.0",
     "@react-native-community/masked-view": "0.1.5",
-    "apisauce": "1.0.3",
+    "@react-navigation/native": "^5.1.5",
+    "apisauce": "1.1.1",
     "i18n-js": "^3.0.11",
     "lodash.throttle": "4.1.1",
-    "mobx": "^4.13.0",
+    "mobx": "^4.15.4",
     "mobx-react-lite": "^1.4.1",
     "mobx-state-tree": "^3.14.1",
-    "ramda": "0.26.1",
+    "ramda": "0.27.0",
     "react": "16.9.0",
-    "react-native": "0.61.2",
+    "react-native": "0.61.5",
     "react-native-gesture-handler": "^1.5.0",
-    "react-native-keychain": "3.1.3",
+    "react-native-keychain": "5.0.1",
     "react-native-localize": "^1.0.0",
-    "react-native-safe-area-context": "0.6.2",
+    "react-native-safe-area-context": "0.7.3",
     "react-native-safe-area-view": "1.0.0",
-    "react-native-screens": "^2.0.0-alpha.17",
-    "react-native-splash-screen": "3.1.1",
-    "react-navigation": "4.0.10",
-    "react-navigation-stack": "2.0.9",
+    "react-native-screens": "^2.5.0",
+    "react-native-splash-screen": "3.2.0",
     "reactotron-mst": "^3.1.1",
     "reactotron-react-native": "^4.0.0-beta.1",
     "validate.js": "0.13.1"
@@ -57,41 +56,41 @@
     "@babel/plugin-proposal-decorators": "^7.0.0",
     "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
     "@babel/runtime": "^7.9.2",
-    "@storybook/addon-storyshots": "5.2.8",
-    "@storybook/react-native": "5.2.8",
-    "@storybook/react-native-server": "5.2.8",
-    "@types/jest": "24.0.18",
-    "@types/ramda": "0.26.18",
-    "@types/react": "16.8.24",
-    "@types/react-native": "0.60.19",
-    "@types/react-test-renderer": "16.8.3",
-    "@typescript-eslint/eslint-plugin": "^2.11.0",
-    "@typescript-eslint/parser": "^2.11.0",
-    "babel-jest": "^25.2.4",
-    "detox": "^14.0.1",
+    "@storybook/addon-storyshots": "5.3.17",
+    "@storybook/react-native": "5.3.17",
+    "@storybook/react-native-server": "5.3.17",
+    "@types/jest": "25.1.4",
+    "@types/ramda": "0.26.44",
+    "@types/react": "16.9.23",
+    "@types/react-native": "0.61.23",
+    "@types/react-test-renderer": "16.9.2",
+    "@typescript-eslint/eslint-plugin": "^2.24.0",
+    "@typescript-eslint/parser": "^2.24.0",
+    "babel-jest": "^25.4.0",
+    "detox": "^16.0.0",
     "eslint": "^6.6.0",
     "eslint-config-prettier": "^6.0.0",
-    "eslint-config-standard": "^13.0.1",
+    "eslint-config-standard": "^14.1.0",
     "eslint-plugin-import": "^2.15.0",
-    "eslint-plugin-node": "^9.1.0",
+    "eslint-plugin-node": "^11.0.0",
     "eslint-plugin-promise": "^4.0.1",
     "eslint-plugin-react": "^7.12.4",
     "eslint-plugin-react-native": "^3.6.0",
     "eslint-plugin-standard": "^4.0.0",
-    "ignite-bowser": "4.14.1",
-    "jest": "^25.2.4",
+    "ignite-bowser": "5.0.2",
+    "jest": "^25.4.0",
     "jetifier": "^1.6.1",
     "metro-react-native-babel-preset": "^0.59.0",
     "npm-run-all": "4.1.5",
-    "patch-package": "6.1.2",
+    "patch-package": "6.2.1",
     "postinstall-prepare": "1.0.1",
-    "prettier": "1.18.2",
-    "react-devtools-core": "3.6.3",
+    "prettier": "1.19.1",
+    "react-devtools-core": "4.5.0",
     "react-powerplug": "1.0.0",
     "react-test-renderer": "16.9.0",
-    "rimraf": "2.6.3",
+    "rimraf": "3.0.2",
     "solidarity": "2.3.1",
-    "typescript": "3.7.3"
+    "typescript": "3.8.3"
   },
   "jest": {
     "preset": "react-native",
@@ -104,7 +103,7 @@
       "/e2e"
     ],
     "transformIgnorePatterns": [
-      "node_modules/(?!(jest-)?react-native|react-native|react-navigation|@react-navigation|@storybook|@react-native-community)"
+      "node_modules/(?!(jest-)?react-native|react-native|@react-navigation|@storybook|@react-native-community)"
     ]
   },
   "prettier": {
diff --git a/IgniteDiffApp/storybook/storybook.tsx b/IgniteDiffApp/storybook/storybook.tsx
index f2e332e..58bd51a 100644
--- a/IgniteDiffApp/storybook/storybook.tsx
+++ b/IgniteDiffApp/storybook/storybook.tsx
@@ -1,13 +1,19 @@
 import React, { useEffect } from "react"
 import { getStorybookUI, configure } from "@storybook/react-native"
 
-declare var module
+declare let module
 
 configure(() => {
   require("./storybook-registry")
 }, module)
 
-const StorybookUI = getStorybookUI({ port: 9001, host: "localhost", onDeviceUI: true })
+const StorybookUI = getStorybookUI({
+  port: 9001,
+  host: "localhost",
+  onDeviceUI: true,
+
+  asyncStorage: require("@react-native-community/async-storage").default,
+})
 
 export const StorybookUIRoot: React.FunctionComponent = () => {
   useEffect(() => {
diff --git a/IgniteDiffApp/test/i18n.test.ts b/IgniteDiffApp/test/i18n.test.ts
index fc373b5..376cfdf 100644
--- a/IgniteDiffApp/test/i18n.test.ts
+++ b/IgniteDiffApp/test/i18n.test.ts
@@ -7,6 +7,20 @@ const EXCEPTIONS = [
   // "welcomeScreen.readyForLaunch",
 ]
 
+function iterate(obj, stack, array) {
+  for (const property in obj) {
+    if (Object.prototype.hasOwnProperty.call(obj, property)) {
+      if (typeof obj[property] === "object") {
+        iterate(obj[property], `${stack}.${property}`, array)
+      } else {
+        array.push(`${stack.slice(1)}.${property}`)
+      }
+    }
+  }
+
+  return array
+}
+
 /**
  * This tests your codebase for missing i18n strings so you can avoid error strings at render time
  *
@@ -46,17 +60,3 @@ describe("i18n", () => {
     })
   }, 240000)
 })
-
-function iterate(obj, stack, array) {
-  for (const property in obj) {
-    if (obj.hasOwnProperty(property)) {
-      if (typeof obj[property] === "object") {
-        iterate(obj[property], `${stack}.${property}`, array)
-      } else {
-        array.push(`${stack.slice(1)}.${property}`)
-      }
-    }
-  }
-
-  return array
-}
diff --git a/IgniteDiffApp/test/mock-reactotron.ts b/IgniteDiffApp/test/mock-reactotron.ts
index 832ec7b..6366dae 100644
--- a/IgniteDiffApp/test/mock-reactotron.ts
+++ b/IgniteDiffApp/test/mock-reactotron.ts
@@ -1,2 +1 @@
-declare var tron
-tron = null
+declare const tron
diff --git a/IgniteDiffApp/test/setup.ts b/IgniteDiffApp/test/setup.ts
index 21a5db9..1bb0a69 100644
--- a/IgniteDiffApp/test/setup.ts
+++ b/IgniteDiffApp/test/setup.ts
@@ -8,5 +8,5 @@ import "./mock-react-native-localize"
 import "./mock-reactotron"
 
 declare global {
-  var __TEST__
+  let __TEST__
 }
