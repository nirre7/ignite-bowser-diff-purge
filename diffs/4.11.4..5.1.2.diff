diff --git a/IgniteDiffApp/.gitignore b/IgniteDiffApp/.gitignore
index d12b94f..b2cee48 100644
--- a/IgniteDiffApp/.gitignore
+++ b/IgniteDiffApp/.gitignore
@@ -64,3 +64,7 @@ buck-out/
 
 # VS Code
 .vscode
+
+# Configurations
+app/config/env.*.js
+!env.js
diff --git a/IgniteDiffApp/README.md b/IgniteDiffApp/README.md
index 0b76860..e4514ad 100644
--- a/IgniteDiffApp/README.md
+++ b/IgniteDiffApp/README.md
@@ -129,7 +129,7 @@ This directory will hold your Jest configs and mocks, as well as your [storyshot
 From the command line in your generated app's root directory, enter `yarn run storybook`
 This starts up the storybook server.
 
-In `app/app.tsx`, change `SHOW_STORYBOOK` to `true` and reload the app.
+In `index.js`, change `SHOW_STORYBOOK` to `true` and reload the app.
 
 For Visual Studio Code users, there is a handy extension that makes it easy to load Storybook use cases into a running emulator via tapping on items in the editor sidebar. Install the `React Native Storybook` extension by `Orta`, hit `cmd + shift + P` and select "Reconnect Storybook to VSCode". Expand the STORYBOOK section in the sidebar to see all use cases for components that have `.story.tsx` files in their directories.
 
diff --git a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
index a5f6665..cac41eb 100644
--- a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
+++ b/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
@@ -2,9 +2,9 @@ package com.ignitediffapp;
 
 import com.facebook.react.ReactActivity;
 
-      import com.facebook.react.ReactActivityDelegate;
-      import com.facebook.react.ReactRootView;
-      import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
+        import com.facebook.react.ReactActivityDelegate;
+        import com.facebook.react.ReactRootView;
+        import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 
 public class MainActivity extends ReactActivity {
 
diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index 6e9c384..84b2891 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -1,97 +1,76 @@
-// Welcome to the main entry point of the app.
-//
-// In this file, we'll be kicking off our app or storybook.
-
+/**
+ * Welcome to the main entry point of the app. In this file, we'll
+ * be kicking off our app or storybook.
+ *
+ * Most of this file is boilerplate and you shouldn't need to modify
+ * it very often. But take some time to look through and understand
+ * what is going on here.
+ *
+ * The app navigation resides in ./app/navigation, so head over there
+ * if you're interested in adding screens and navigators.
+ */
 import "./i18n"
-import React, { useState, useEffect } from "react"
-import { AppRegistry, YellowBox } from "react-native"
-import { StatefulNavigator, BackButtonHandler, exitRoutes } from "./navigation"
-import { RootStore, RootStoreProvider, setupRootStore } from "./models/root-store"
-
-import { contains } from "ramda"
-import { enableScreens } from "react-native-screens"
+import "./utils/ignore-warnings"
+import React, { useState, useEffect, useRef, FunctionComponent as Component } from "react"
+import { NavigationContainerRef } from "@react-navigation/native"
+import { SafeAreaProvider, initialWindowSafeAreaInsets } from "react-native-safe-area-context"
+import * as storage from "./utils/storage"
+import {
+  useBackButtonHandler,
+  RootNavigator,
+  canExit,
+  setRootNavigation,
+  useNavigationPersistence,
+} from "./navigation"
+import { RootStore, RootStoreProvider, setupRootStore } from "./models"
 
 // This puts screens in a native ViewController or Activity. If you want fully native
 // stack navigation, use `createNativeStackNavigator` in place of `createStackNavigator`:
 // https://github.com/kmagiera/react-native-screens#using-native-stack-navigator
+import { enableScreens } from "react-native-screens"
 enableScreens()
 
-/**
- * Ignore some yellowbox warnings. Some of these are for deprecated functions
- * that we haven't gotten around to replacing yet.
- */
-YellowBox.ignoreWarnings([
-  "componentWillMount is deprecated",
-  "componentWillReceiveProps is deprecated",
-])
+export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
 
 /**
- * Storybook still wants to use ReactNative's AsyncStorage instead of the
- * react-native-community package; this causes a YellowBox warning. This hack
- * points RN's AsyncStorage at the community one, fixing the warning. Here's the
- * Storybook issue about this: https://github.com/storybookjs/storybook/issues/6078
+ * This is the root component of our app.
  */
-const ReactNative = require("react-native")
-Object.defineProperty(ReactNative, "AsyncStorage", {
-  get(): any {
-    return require("@react-native-community/async-storage").default
-  },
-})
+const App: Component<{}> = () => {
+  const navigationRef = useRef<NavigationContainerRef>()
+  const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)
 
-/**
- * Are we allowed to exit the app?  This is called when the back button
- * is pressed on android.
- *
- * @param routeName The currently active route name.
- */
-const canExit = (routeName: string) => contains(routeName, exitRoutes)
+  setRootNavigation(navigationRef)
+  useBackButtonHandler(navigationRef, canExit)
+  const { initialNavigationState, onNavigationStateChange } = useNavigationPersistence(
+    storage,
+    NAVIGATION_PERSISTENCE_KEY,
+  )
 
-/**
- * This is the root component of our app.
- */
-export const App: React.FunctionComponent<{}> = () => {
-  const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined) // prettier-ignore
+  // Kick off initial async loading actions, like loading fonts and RootStore
   useEffect(() => {
-    setupRootStore().then(setRootStore)
+    ;(async () => {
+      setupRootStore().then(setRootStore)
+    })()
   }, [])
 
   // Before we show the app, we have to wait for our state to be ready.
   // In the meantime, don't render anything. This will be the background
-  // color set in native by rootView's background color.
-  //
-  // This step should be completely covered over by the splash screen though.
-  //
-  // You're welcome to swap in your own component to render if your boot up
-  // sequence is too slow though.
-  if (!rootStore) {
-    return null
-  }
+  // color set in native by rootView's background color. You can replace
+  // with your own loading component if you wish.
+  if (!rootStore) return null
 
   // otherwise, we're ready to render the app
   return (
     <RootStoreProvider value={rootStore}>
-      <BackButtonHandler canExit={canExit}>
-        <StatefulNavigator />
-      </BackButtonHandler>
+      <SafeAreaProvider initialSafeAreaInsets={initialWindowSafeAreaInsets}>
+        <RootNavigator
+          ref={navigationRef}
+          initialState={initialNavigationState}
+          onStateChange={onNavigationStateChange}
+        />
+      </SafeAreaProvider>
     </RootStoreProvider>
   )
 }
 
-/**
- * This needs to match what's found in your app_delegate.m and MainActivity.java.
- */
-const APP_NAME = "IgniteDiffApp"
-
-// Should we show storybook instead of our app?
-//
-// ⚠️ Leave this as `false` when checking into git.
-const SHOW_STORYBOOK = false
-
-let RootComponent = App
-if (__DEV__) {
-  // Only include Storybook if we're in dev mode
-  const { StorybookUIRoot } = require("../storybook")
-
-  if (SHOW_STORYBOOK) RootComponent = StorybookUIRoot
-}
-AppRegistry.registerComponent(APP_NAME, () => RootComponent)
+export default App
diff --git a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
index bdb474a..6a7e06a 100644
--- a/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
+++ b/IgniteDiffApp/app/components/bullet-item/bullet-item.tsx
@@ -1,6 +1,7 @@
 import * as React from "react"
 import { View, ViewStyle, ImageStyle, TextStyle } from "react-native"
-import { Text, Icon } from "../"
+import { Text } from "../text/text"
+import { Icon } from "../icon/icon"
 import { spacing } from "../../theme"
 
 const BULLET_ITEM: ViewStyle = {
diff --git a/IgniteDiffApp/app/components/button/button.tsx b/IgniteDiffApp/app/components/button/button.tsx
index 3d33afd..d95709d 100644
--- a/IgniteDiffApp/app/components/button/button.tsx
+++ b/IgniteDiffApp/app/components/button/button.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity } from "react-native"
-import { Text } from "../"
+import { Text } from "../text/text"
 import { viewPresets, textPresets } from "./button.presets"
 import { ButtonProps } from "./button.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/checkbox/checkbox.tsx b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
index 7a1084f..bdb9825 100644
--- a/IgniteDiffApp/app/components/checkbox/checkbox.tsx
+++ b/IgniteDiffApp/app/components/checkbox/checkbox.tsx
@@ -1,6 +1,6 @@
 import * as React from "react"
 import { TouchableOpacity, TextStyle, ViewStyle, View } from "react-native"
-import { Text } from "../"
+import { Text } from "../text/text"
 import { color, spacing } from "../../theme"
 import { CheckboxProps } from "./checkbox.props"
 import { mergeAll, flatten } from "ramda"
diff --git a/IgniteDiffApp/app/components/header/header.tsx b/IgniteDiffApp/app/components/header/header.tsx
index d230c01..1936d84 100644
--- a/IgniteDiffApp/app/components/header/header.tsx
+++ b/IgniteDiffApp/app/components/header/header.tsx
@@ -1,7 +1,9 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { View, ViewStyle, TextStyle } from "react-native"
 import { HeaderProps } from "./header.props"
-import { Button, Icon, Text } from "../"
+import { Button } from "../button/button"
+import { Text } from "../text/text"
+import { Icon } from "../icon/icon"
 import { spacing } from "../../theme"
 import { translate } from "../../i18n/"
 
@@ -22,7 +24,7 @@ const RIGHT: ViewStyle = { width: 32 }
 /**
  * Header that appears on many screens. Will hold navigation buttons and screen title.
  */
-export const Header: React.FunctionComponent<HeaderProps> = props => {
+export const Header: Component<HeaderProps> = props => {
   const {
     onLeftPress,
     onRightPress,
diff --git a/IgniteDiffApp/app/components/screen/screen.tsx b/IgniteDiffApp/app/components/screen/screen.tsx
index 8631cfc..4943c0b 100644
--- a/IgniteDiffApp/app/components/screen/screen.tsx
+++ b/IgniteDiffApp/app/components/screen/screen.tsx
@@ -1,16 +1,17 @@
 import * as React from "react"
 import { KeyboardAvoidingView, Platform, ScrollView, StatusBar, View } from "react-native"
-import { SafeAreaView } from "react-navigation"
+import { useSafeArea } from "react-native-safe-area-context"
 import { ScreenProps } from "./screen.props"
 import { isNonScrolling, offsets, presets } from "./screen.presets"
 
 const isIos = Platform.OS === "ios"
 
 function ScreenWithoutScrolling(props: ScreenProps) {
-  const preset = presets["fixed"]
+  const insets = useSafeArea()
+  const preset = presets.fixed
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const Wrapper = props.unsafe ? View : SafeAreaView
+  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
 
   return (
     <KeyboardAvoidingView
@@ -19,16 +20,17 @@ function ScreenWithoutScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <Wrapper style={[preset.inner, style]}>{props.children}</Wrapper>
+      <View style={[preset.inner, style, insetStyle]}>{props.children}</View>
     </KeyboardAvoidingView>
   )
 }
 
 function ScreenWithScrolling(props: ScreenProps) {
-  const preset = presets["scroll"]
+  const insets = useSafeArea()
+  const preset = presets.scroll
   const style = props.style || {}
   const backgroundStyle = props.backgroundColor ? { backgroundColor: props.backgroundColor } : {}
-  const Wrapper = props.unsafe ? View : SafeAreaView
+  const insetStyle = { paddingTop: props.unsafe ? 0 : insets.top }
 
   return (
     <KeyboardAvoidingView
@@ -37,14 +39,14 @@ function ScreenWithScrolling(props: ScreenProps) {
       keyboardVerticalOffset={offsets[props.keyboardOffset || "none"]}
     >
       <StatusBar barStyle={props.statusBar || "light-content"} />
-      <Wrapper style={[preset.outer, backgroundStyle]}>
+      <View style={[preset.outer, backgroundStyle, insetStyle]}>
         <ScrollView
           style={[preset.outer, backgroundStyle]}
           contentContainerStyle={[preset.inner, style]}
         >
           {props.children}
         </ScrollView>
-      </Wrapper>
+      </View>
     </KeyboardAvoidingView>
   )
 }
diff --git a/IgniteDiffApp/app/components/switch/switch.tsx b/IgniteDiffApp/app/components/switch/switch.tsx
index defdf89..e3786e2 100644
--- a/IgniteDiffApp/app/components/switch/switch.tsx
+++ b/IgniteDiffApp/app/components/switch/switch.tsx
@@ -1,4 +1,4 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { ViewStyle, Animated, Easing, TouchableWithoutFeedback } from "react-native"
 import { color } from "../../theme"
 import { SwitchProps } from "./switch.props"
@@ -52,7 +52,7 @@ const enhance = (style, newStyles): any => {
 
 const makeAnimatedValue = switchOn => new Animated.Value(switchOn ? 1 : 0)
 
-export const Switch: React.FunctionComponent<SwitchProps> = props => {
+export const Switch: Component<SwitchProps> = props => {
   const [timer] = React.useState<Animated.Value>(makeAnimatedValue(props.value))
   const startAnimation = React.useMemo(
     () => (newValue: boolean) => {
diff --git a/IgniteDiffApp/app/components/text-field/text-field.tsx b/IgniteDiffApp/app/components/text-field/text-field.tsx
index 8a5e01d..69414d2 100644
--- a/IgniteDiffApp/app/components/text-field/text-field.tsx
+++ b/IgniteDiffApp/app/components/text-field/text-field.tsx
@@ -1,8 +1,8 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { View, TextInput, TextStyle, ViewStyle } from "react-native"
 import { color, spacing, typography } from "../../theme"
 import { translate } from "../../i18n"
-import { Text } from "../"
+import { Text } from "../text/text"
 import { TextFieldProps } from "./text-field.props"
 import { mergeAll, flatten } from "ramda"
 
@@ -32,7 +32,7 @@ const enhance = (style, styleOverride) => {
 /**
  * A component which has a label and an input together.
  */
-export const TextField: React.FunctionComponent<TextFieldProps> = props => {
+export const TextField: Component<TextFieldProps> = props => {
   const {
     placeholderTx,
     placeholder,
diff --git a/IgniteDiffApp/app/config/env.js b/IgniteDiffApp/app/config/env.js
new file mode 100644
index 0000000..c5d7ffc
--- /dev/null
+++ b/IgniteDiffApp/app/config/env.js
@@ -0,0 +1 @@
+module.exports = __DEV__ ? require("./env.dev") : require("./env.prod")
diff --git a/IgniteDiffApp/app/i18n/i18n.ts b/IgniteDiffApp/app/i18n/i18n.ts
index e8eed38..79de3d8 100644
--- a/IgniteDiffApp/app/i18n/i18n.ts
+++ b/IgniteDiffApp/app/i18n/i18n.ts
@@ -8,6 +8,7 @@ i18n.fallbacks = true
 i18n.translations = { en, ja }
 
 const fallback = { languageTag: "en", isRTL: false }
+
 const { languageTag } =
   RNLocalize.findBestAvailableLanguage(Object.keys(i18n.translations)) || fallback
 i18n.locale = languageTag
diff --git a/IgniteDiffApp/app/models/extensions/index.ts b/IgniteDiffApp/app/models/extensions/index.ts
deleted file mode 100644
index 455be6c..0000000
--- a/IgniteDiffApp/app/models/extensions/index.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export * from "./with-environment"
-export * from "./with-root-store"
-export * from "./with-status"
diff --git a/IgniteDiffApp/app/models/extensions/with-root-store.ts b/IgniteDiffApp/app/models/extensions/with-root-store.ts
index 969faf3..eff769c 100644
--- a/IgniteDiffApp/app/models/extensions/with-root-store.ts
+++ b/IgniteDiffApp/app/models/extensions/with-root-store.ts
@@ -1,5 +1,5 @@
 import { getRoot, IStateTreeNode } from "mobx-state-tree"
-import { RootStore } from "../root-store"
+import { RootStoreModel } from "../root-store/root-store"
 
 /**
  * Adds a rootStore property to the node for a convenient
@@ -11,7 +11,7 @@ export const withRootStore = (self: IStateTreeNode) => ({
      * The root store.
      */
     get rootStore() {
-      return getRoot<RootStore>(self)
+      return getRoot<typeof RootStoreModel>(self)
     },
   },
 })
diff --git a/IgniteDiffApp/app/models/index.ts b/IgniteDiffApp/app/models/index.ts
new file mode 100644
index 0000000..3819dcc
--- /dev/null
+++ b/IgniteDiffApp/app/models/index.ts
@@ -0,0 +1,6 @@
+export * from "./extensions/with-environment"
+export * from "./extensions/with-root-store"
+export * from "./extensions/with-status"
+export * from "./root-store/root-store"
+export * from "./root-store/root-store-context"
+export * from "./root-store/setup-root-store"
diff --git a/IgniteDiffApp/app/models/root-store/index.ts b/IgniteDiffApp/app/models/root-store/index.ts
deleted file mode 100644
index 77fd51a..0000000
--- a/IgniteDiffApp/app/models/root-store/index.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export * from "./root-store"
-export * from "./root-store-context"
-export * from "./setup-root-store"
diff --git a/IgniteDiffApp/app/models/root-store/root-store.ts b/IgniteDiffApp/app/models/root-store/root-store.ts
index d191251..3bc0eaa 100644
--- a/IgniteDiffApp/app/models/root-store/root-store.ts
+++ b/IgniteDiffApp/app/models/root-store/root-store.ts
@@ -1,11 +1,11 @@
 import { Instance, SnapshotOut, types } from "mobx-state-tree"
-import { NavigationStoreModel } from "../../navigation/navigation-store"
 
 /**
  * A RootStore model.
  */
+// prettier-ignore
 export const RootStoreModel = types.model("RootStore").props({
-  navigationStore: types.optional(NavigationStoreModel, {}),
+
 })
 
 /**
diff --git a/IgniteDiffApp/app/navigation/back-button-handler.tsx b/IgniteDiffApp/app/navigation/back-button-handler.tsx
deleted file mode 100644
index 439df52..0000000
--- a/IgniteDiffApp/app/navigation/back-button-handler.tsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import { FunctionComponent, useEffect } from "react"
-import { BackHandler } from "react-native"
-import { observer } from "mobx-react-lite"
-import { NavigationActions } from "react-navigation"
-import { useStores } from "../models/root-store"
-
-interface BackButtonHandlerProps {
-  /**
-   * Are we allowed to exit?
-   */
-  canExit(routeName: string): boolean
-}
-
-export const BackButtonHandler: FunctionComponent<BackButtonHandlerProps> = observer(props => {
-  const { navigationStore } = useStores()
-
-  useEffect(() => {
-    // We'll fire this when the back button is pressed on Android.
-    const onBackPress = () => {
-      // grab the current route
-      const routeName = navigationStore.findCurrentRoute().routeName
-
-      // are we allowed to exit?
-      if (props.canExit(routeName)) {
-        // let the system know we've not handled this event
-        return false
-      } else {
-        // we can't exit, so let's turn this into a back action
-        navigationStore.dispatch(NavigationActions.back())
-        // let the system know we've handled this event
-        return true
-      }
-    }
-
-    // Subscribe when we come to life
-    BackHandler.addEventListener("hardwareBackPress", onBackPress)
-
-    // Unsubscribe when we're done
-    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
-  }, [])
-
-  // Just render our children, or nothing if they weren't passed.
-  return (props as any).children
-})
diff --git a/IgniteDiffApp/app/navigation/index.ts b/IgniteDiffApp/app/navigation/index.ts
index 2ac4bde..40a84d1 100644
--- a/IgniteDiffApp/app/navigation/index.ts
+++ b/IgniteDiffApp/app/navigation/index.ts
@@ -1,3 +1,3 @@
-export * from "./back-button-handler"
 export * from "./primary-navigator"
-export * from "./stateful-navigator"
+export * from "./root-navigator"
+export * from "./navigation-utilities"
diff --git a/IgniteDiffApp/app/navigation/navigation-events.ts b/IgniteDiffApp/app/navigation/navigation-events.ts
deleted file mode 100644
index fd8c6c0..0000000
--- a/IgniteDiffApp/app/navigation/navigation-events.ts
+++ /dev/null
@@ -1,60 +0,0 @@
-import { types } from "mobx-state-tree"
-import { EventType, NavigationEventCallback } from "react-navigation"
-
-/**
- * This mobx-state-tree model bestows a few events for working with `react-navigation`
- * events.
- *
- * You use can `compose` or build directly off this to mixin these features.
- */
-export const NavigationEvents = types.model("NavigationEvents").volatile(() => {
-  // who is currently subscribed to react-navigation events
-  const subs = new Set<NavigationEventCallback>()
-
-  /**
-   * Fires after we change our state.  You call this from the dispatch
-   * to ensure any subscribers are told about state changes.
-   *
-   * @param action The react-navigation action which triggered this update.
-   * @param oldState The previous navigation state.
-   * @param newState The next navigation state.
-   */
-  const fireSubscribers = (action: any, oldState: any, newState: any) => {
-    // tell each subscriber out this
-    subs.forEach(subscriber => {
-      subscriber({
-        type: "action",
-        action,
-        state: newState,
-        lastState: oldState,
-      })
-    })
-  }
-
-  /**
-   * Provides a way from screens (for example) to subscribe to `react-navigation`
-   * events.
-   *
-   * @param eventName The event.
-   * @param handler Some strange handler
-   */
-  const addListener = (eventName: EventType, handler: NavigationEventCallback) => {
-    if (eventName !== "action") {
-      return {
-        remove: () => {
-          /* nothing to do */
-        },
-      }
-    }
-
-    // subscribe
-    subs.add(handler)
-
-    // return the instructions on how to unsubscribe
-    return {
-      remove: () => subs.delete(handler),
-    }
-  }
-
-  return { addListener, fireSubscribers, subs }
-})
diff --git a/IgniteDiffApp/app/navigation/navigation-store.ts b/IgniteDiffApp/app/navigation/navigation-store.ts
deleted file mode 100644
index 1bdad5f..0000000
--- a/IgniteDiffApp/app/navigation/navigation-store.ts
+++ /dev/null
@@ -1,92 +0,0 @@
-import { Instance, types } from "mobx-state-tree"
-import { RootNavigator } from "./root-navigator"
-import { NavigationActions, NavigationAction } from "react-navigation"
-import { NavigationEvents } from "./navigation-events"
-
-const DEFAULT_STATE = RootNavigator.router.getStateForAction(NavigationActions.init(), null)
-
-/**
- * Finds the current route.
- *
- * @param navState the current nav state
- */
-function findCurrentRoute(navState) {
-  const route = navState.routes[navState.index]
-  if (route.routes) {
-    return findCurrentRoute(route)
-  }
-  return route
-}
-
-/**
- * Tracks the navigation state for `react-navigation` as well as providers
- * the actions for changing that state.
- */
-export const NavigationStoreModel = NavigationEvents.named("NavigationStore")
-  .props({
-    /**
-     * the navigation state tree (Frozen here means it is immutable.)
-     */
-    state: types.optional(types.frozen(), DEFAULT_STATE),
-  })
-  .preProcessSnapshot(snapshot => {
-    if (!snapshot || !snapshot.state) return snapshot
-
-    try {
-      // make sure react-navigation can handle our state
-      RootNavigator.router.getPathAndParamsForState(snapshot.state)
-      return snapshot
-    } catch (e) {
-      // otherwise restore default state
-      return { ...snapshot, state: DEFAULT_STATE }
-    }
-  })
-  .actions(self => ({
-    /**
-     * Return all subscribers
-     */
-    actionSubscribers() {
-      return self.subs
-    },
-
-    /**
-     * Fires when navigation happens.
-     *
-     * Our job is to update the state for this new navigation action.
-     *
-     * @param action The new navigation action to perform
-     * @param shouldPush Should we push or replace the whole stack?
-     */
-    dispatch(action: NavigationAction, shouldPush = true) {
-      const previousNavState = shouldPush ? self.state : null
-      self.state = RootNavigator.router.getStateForAction(action, previousNavState) || self.state
-      self.fireSubscribers(action, previousNavState, self.state)
-      return true
-    },
-
-    /**
-     * Resets the navigation back to the start.
-     */
-    reset() {
-      self.state = DEFAULT_STATE
-    },
-
-    /**
-     * Finds the current route.
-     */
-    findCurrentRoute() {
-      return findCurrentRoute(self.state)
-    },
-  }))
-  .actions(self => ({
-    /**
-     * Navigate to another place.
-     *
-     * @param routeName The route name.
-     */
-    navigateTo(routeName: string) {
-      self.dispatch(NavigationActions.navigate({ routeName }))
-    },
-  }))
-
-export type NavigationStore = Instance<typeof NavigationStoreModel>
diff --git a/IgniteDiffApp/app/navigation/navigation-utilities.tsx b/IgniteDiffApp/app/navigation/navigation-utilities.tsx
new file mode 100644
index 0000000..6f59feb
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/navigation-utilities.tsx
@@ -0,0 +1,127 @@
+import React, { useState, useEffect, useRef } from "react"
+import { BackHandler } from "react-native"
+import { PartialState, NavigationState, NavigationContainerRef } from "@react-navigation/native"
+
+export const RootNavigation = {
+  navigate(name: string) {
+    name // eslint-disable-line no-unused-expressions
+  },
+  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function
+  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function
+  getRootState(): NavigationState {
+    return {} as any
+  },
+}
+
+export const setRootNavigation = (ref: React.RefObject<NavigationContainerRef>) => {
+  for (const method in RootNavigation) {
+    RootNavigation[method] = (...args: any) => {
+      if (ref.current) {
+        return ref.current[method](...args)
+      }
+    }
+  }
+}
+
+/**
+ * Gets the current screen from any navigation state.
+ */
+export function getActiveRouteName(state: NavigationState | PartialState<NavigationState>) {
+  const route = state.routes[state.index]
+
+  // Found the active route -- return the name
+  if (!route.state) return route.name
+
+  // Recursive call to deal with nested routers
+  return getActiveRouteName(route.state)
+}
+
+/**
+ * Hook that handles Android back button presses and forwards those on to
+ * the navigation or allows exiting the app.
+ */
+export function useBackButtonHandler(
+  ref: React.RefObject<NavigationContainerRef>,
+  canExit: (routeName: string) => boolean,
+) {
+  const canExitRef = useRef(canExit)
+
+  useEffect(() => {
+    canExitRef.current = canExit
+  }, [canExit])
+
+  useEffect(() => {
+    // We'll fire this when the back button is pressed on Android.
+    const onBackPress = () => {
+      const navigation = ref.current
+
+      if (navigation == null) {
+        return false
+      }
+
+      // grab the current route
+      const routeName = getActiveRouteName(navigation.getRootState())
+
+      // are we allowed to exit?
+      if (canExitRef.current(routeName)) {
+        // let the system know we've not handled this event
+        return false
+      }
+
+      // we can't exit, so let's turn this into a back action
+      if (navigation.canGoBack()) {
+        navigation.goBack()
+
+        return true
+      }
+
+      return false
+    }
+
+    // Subscribe when we come to life
+    BackHandler.addEventListener("hardwareBackPress", onBackPress)
+
+    // Unsubscribe when we're done
+    return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
+  }, [ref])
+}
+
+/**
+ * Custom hook for persisting navigation state.
+ */
+export function useNavigationPersistence(storage: any, persistenceKey: string) {
+  const [initialNavigationState, setInitialNavigationState] = useState()
+  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(true)
+
+  const routeNameRef = useRef()
+  const onNavigationStateChange = state => {
+    const previousRouteName = routeNameRef.current
+    const currentRouteName = getActiveRouteName(state)
+
+    if (previousRouteName !== currentRouteName) {
+      // track screens.
+      __DEV__ && console.tron.log(currentRouteName)
+    }
+
+    // Save the current route name for later comparision
+    routeNameRef.current = currentRouteName
+
+    // Persist state to storage
+    storage.save(persistenceKey, state)
+  }
+
+  const restoreState = async () => {
+    try {
+      const state = await storage.load(persistenceKey)
+      if (state) setInitialNavigationState(state)
+    } finally {
+      setIsRestoringNavigationState(false)
+    }
+  }
+
+  useEffect(() => {
+    if (isRestoringNavigationState) restoreState()
+  }, [isRestoringNavigationState])
+
+  return { onNavigationStateChange, restoreState, initialNavigationState }
+}
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.ts b/IgniteDiffApp/app/navigation/primary-navigator.ts
deleted file mode 100644
index 6b19729..0000000
--- a/IgniteDiffApp/app/navigation/primary-navigator.ts
+++ /dev/null
@@ -1,24 +0,0 @@
-import createNativeStackNavigator from "react-native-screens/createNativeStackNavigator"
-import {
-  WelcomeScreen,
-  DemoScreen,
-} from "../screens"
-
-export const PrimaryNavigator = createNativeStackNavigator(
-  {
-    welcome: { screen: WelcomeScreen },
-    demo: { screen: DemoScreen },
-  },
-  {
-    headerMode: "none",
-  },
-)
-
-/**
- * A list of routes from which we're allowed to leave the app when
- * the user presses the back button on Android.
- *
- * Anything not on this list will be a standard `back` action in
- * react-navigation.
- */
-export const exitRoutes: string[] = ["welcome"]
diff --git a/IgniteDiffApp/app/navigation/primary-navigator.tsx b/IgniteDiffApp/app/navigation/primary-navigator.tsx
new file mode 100644
index 0000000..36255b3
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/primary-navigator.tsx
@@ -0,0 +1,56 @@
+/**
+ * This is the navigator you will modify to display the logged-in screens of your app.
+ * You can use RootNavigator to also display an auth flow or other user flows.
+ *
+ * You'll likely spend most of your time in this file.
+ */
+import React from "react"
+
+import { createNativeStackNavigator } from "react-native-screens/native-stack"
+import { WelcomeScreen, DemoScreen } from "../screens"
+
+/**
+ * This type allows TypeScript to know what routes are defined in this navigator
+ * as well as what properties (if any) they might take when navigating to them.
+ *
+ * If no params are allowed, pass through `undefined`. Generally speaking, we
+ * recommend using your MobX-State-Tree store(s) to keep application state
+ * rather than passing state through navigation params.
+ *
+ * For more information, see this documentation:
+ *   https://reactnavigation.org/docs/params/
+ *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
+ */
+export type PrimaryParamList = {
+  welcome: undefined
+  demo: undefined
+}
+
+// Documentation: https://github.com/software-mansion/react-native-screens/tree/master/native-stack
+const Stack = createNativeStackNavigator<PrimaryParamList>()
+
+export function PrimaryNavigator() {
+  return (
+    <Stack.Navigator
+      screenOptions={{
+        headerShown: false,
+        gestureEnabled: true,
+      }}
+    >
+      <Stack.Screen name="welcome" component={WelcomeScreen} />
+      <Stack.Screen name="demo" component={DemoScreen} />
+    </Stack.Navigator>
+  )
+}
+
+/**
+ * A list of routes from which we're allowed to leave the app when
+ * the user presses the back button on Android.
+ *
+ * Anything not on this list will be a standard `back` action in
+ * react-navigation.
+ *
+ * `canExit` is used in ./app/app.tsx in the `useBackButtonHandler` hook.
+ */
+const exitRoutes = ["welcome"]
+export const canExit = (routeName: string) => exitRoutes.includes(routeName)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.ts b/IgniteDiffApp/app/navigation/root-navigator.ts
deleted file mode 100644
index 4ce661a..0000000
--- a/IgniteDiffApp/app/navigation/root-navigator.ts
+++ /dev/null
@@ -1,14 +0,0 @@
-import { createStackNavigator } from "react-navigation"
-import { PrimaryNavigator } from "./primary-navigator"
-import {
-} from "../screens" // eslint-disable-line @typescript-eslint/no-unused-vars
-
-export const RootNavigator = createStackNavigator(
-  {
-    primaryStack: { screen: PrimaryNavigator },
-  },
-  {
-    headerMode: "none",
-    navigationOptions: { gesturesEnabled: false },
-  },
-)
diff --git a/IgniteDiffApp/app/navigation/root-navigator.tsx b/IgniteDiffApp/app/navigation/root-navigator.tsx
new file mode 100644
index 0000000..2016685
--- /dev/null
+++ b/IgniteDiffApp/app/navigation/root-navigator.tsx
@@ -0,0 +1,61 @@
+/**
+ * The root navigator is used to switch between major navigation flows of your app.
+ * Generally speaking, it will contain an auth flow (registration, login, forgot password)
+ * and a "main" flow (which is contained in your PrimaryNavigator) which the user
+ * will use once logged in.
+ */
+import React from "react"
+import { NavigationContainer, NavigationContainerRef } from "@react-navigation/native"
+
+import { createNativeStackNavigator } from "react-native-screens/native-stack"
+import { PrimaryNavigator } from "./primary-navigator"
+
+/**
+ * This type allows TypeScript to know what routes are defined in this navigator
+ * as well as what properties (if any) they might take when navigating to them.
+ *
+ * We recommend using MobX-State-Tree store(s) to handle state rather than navigation params.
+ *
+ * For more information, see this documentation:
+ *   https://reactnavigation.org/docs/params/
+ *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
+ */
+export type RootParamList = {
+  primaryStack: undefined
+}
+
+const Stack = createNativeStackNavigator<RootParamList>()
+
+const RootStack = () => {
+  return (
+    <Stack.Navigator
+      screenOptions={{
+        headerShown: false,
+        gestureEnabled: true,
+
+        stackPresentation: "modal",
+      }}
+    >
+      <Stack.Screen
+        name="primaryStack"
+        component={PrimaryNavigator}
+        options={{
+          headerShown: false,
+        }}
+      />
+    </Stack.Navigator>
+  )
+}
+
+export const RootNavigator = React.forwardRef<
+  NavigationContainerRef,
+  Partial<React.ComponentProps<typeof NavigationContainer>>
+>((props, ref) => {
+  return (
+    <NavigationContainer {...props} ref={ref}>
+      <RootStack />
+    </NavigationContainer>
+  )
+})
+
+RootNavigator.displayName = "RootNavigator"
diff --git a/IgniteDiffApp/app/navigation/stateful-navigator.tsx b/IgniteDiffApp/app/navigation/stateful-navigator.tsx
deleted file mode 100644
index 9c8ca70..0000000
--- a/IgniteDiffApp/app/navigation/stateful-navigator.tsx
+++ /dev/null
@@ -1,25 +0,0 @@
-import * as React from "react"
-import { observer } from "mobx-react-lite"
-// @ts-ignore: until they update @type/react-navigation
-import { getNavigation, NavigationScreenProp, NavigationState } from "react-navigation"
-import { useStores } from "../models/root-store"
-import { RootNavigator } from "./root-navigator"
-
-let currentNavigation: NavigationScreenProp<NavigationState> | undefined
-
-export const StatefulNavigator: React.FunctionComponent<{}> = observer(() => {
-  const {
-    navigationStore: { state, dispatch, actionSubscribers },
-  } = useStores()
-
-  currentNavigation = getNavigation(
-    RootNavigator.router,
-    state,
-    dispatch,
-    actionSubscribers(),
-    {},
-    () => currentNavigation,
-  )
-
-  return <RootNavigator navigation={currentNavigation} />
-})
diff --git a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
index 155438f..b0146ff 100644
--- a/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
+++ b/IgniteDiffApp/app/screens/demo-screen/demo-screen.tsx
@@ -1,6 +1,7 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { Image, ImageStyle, Platform, TextStyle, View, ViewStyle } from "react-native"
-import { NavigationScreenProps } from "react-navigation"
+import { useNavigation } from "@react-navigation/native"
+import { observer } from "mobx-react-lite"
 import { BulletItem, Button, Header, Text, Screen, Wallpaper } from "../../components"
 import { color, spacing } from "../../theme"
 import { Api } from "../../services/api"
@@ -76,10 +77,9 @@ const HINT: TextStyle = {
   marginVertical: spacing[2],
 }
 
-export interface DemoScreenProps extends NavigationScreenProps<{}> {}
-
-export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
-  const goBack = React.useMemo(() => () => props.navigation.goBack(null), [props.navigation])
+export const DemoScreen: Component = observer(function DemoScreen() {
+  const navigation = useNavigation()
+  const goBack = () => navigation.goBack()
 
   const demoReactotron = React.useMemo(
     () => async () => {
@@ -99,7 +99,9 @@ export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
               },
             },
           },
-          functionNames: function hello() { /* dummy function */ },
+          functionNames: function hello() {
+            /* dummy function */
+          },
         },
         preview: "More control with display()",
         important: true,
@@ -152,4 +154,4 @@ export const DemoScreen: React.FunctionComponent<DemoScreenProps> = props => {
       </Screen>
     </View>
   )
-}
+})
diff --git a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
index 0e15332..c9093f6 100644
--- a/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
+++ b/IgniteDiffApp/app/screens/welcome-screen/welcome-screen.tsx
@@ -1,6 +1,7 @@
-import * as React from "react"
+import React, { FunctionComponent as Component } from "react"
 import { View, Image, ViewStyle, TextStyle, ImageStyle, SafeAreaView } from "react-native"
-import { NavigationScreenProps } from "react-navigation"
+import { useNavigation } from "@react-navigation/native"
+import { observer } from "mobx-react-lite"
 import { Button, Header, Screen, Text, Wallpaper } from "../../components"
 import { color, spacing } from "../../theme"
 const bowserLogo = require("./bowser.png")
@@ -74,12 +75,9 @@ const FOOTER_CONTENT: ViewStyle = {
   paddingHorizontal: spacing[4],
 }
 
-export interface WelcomeScreenProps extends NavigationScreenProps<{}> {}
-
-export const WelcomeScreen: React.FunctionComponent<WelcomeScreenProps> = props => {
-  const nextScreen = React.useMemo(() => () => props.navigation.navigate("demo"), [
-    props.navigation,
-  ])
+export const WelcomeScreen: Component = observer(function WelcomeScreen() {
+  const navigation = useNavigation()
+  const nextScreen = () => navigation.navigate("demo")
 
   return (
     <View testID="WelcomeScreen" style={FULL}>
@@ -115,4 +113,4 @@ export const WelcomeScreen: React.FunctionComponent<WelcomeScreenProps> = props
       </SafeAreaView>
     </View>
   )
-}
+})
diff --git a/IgniteDiffApp/app/services/api/api-config.ts b/IgniteDiffApp/app/services/api/api-config.ts
index 1fec60e..3061563 100644
--- a/IgniteDiffApp/app/services/api/api-config.ts
+++ b/IgniteDiffApp/app/services/api/api-config.ts
@@ -1,4 +1,7 @@
-import { API_URL } from "react-native-dotenv"
+// Use this import if you want to use "env.js" file
+// const { API_URL } = require("../../config/env")
+// Or just specify it directly like this:
+const API_URL = "http://example.com"
 
 /**
  * The options used to configure the API.
diff --git a/IgniteDiffApp/app/services/reactotron/reactotron.ts b/IgniteDiffApp/app/services/reactotron/reactotron.ts
index 51e2c79..94af9c7 100644
--- a/IgniteDiffApp/app/services/reactotron/reactotron.ts
+++ b/IgniteDiffApp/app/services/reactotron/reactotron.ts
@@ -5,6 +5,7 @@ import { onSnapshot } from "mobx-state-tree"
 import { ReactotronConfig, DEFAULT_REACTOTRON_CONFIG } from "./reactotron-config"
 import { mst } from "reactotron-mst"
 import { clear } from "../../utils/storage"
+import { RootNavigation } from "../../navigation"
 
 // Teach TypeScript about the bad things we want to do.
 declare global {
@@ -150,12 +151,22 @@ export class Reactotron {
       })
 
       Tron.onCustomCommand({
-        title: "Reset Navigation Store",
-        description: "Resets the navigation store",
+        title: "Reset Navigation State",
+        description: "Resets the navigation state",
         command: "resetNavigation",
         handler: () => {
-          console.tron.log("resetting navigation store")
-          this.rootStore.navigationStore.reset()
+          console.tron.log("resetting navigation state")
+          RootNavigation.resetRoot({ routes: [] })
+        },
+      })
+
+      Tron.onCustomCommand({
+        title: "Go Back",
+        description: "Goes back",
+        command: "goBack",
+        handler: () => {
+          console.tron.log("Going back")
+          RootNavigation.goBack()
         },
       })
 
diff --git a/IgniteDiffApp/app/theme/spacing.ts b/IgniteDiffApp/app/theme/spacing.ts
index 8f3a556..b1b7935 100644
--- a/IgniteDiffApp/app/theme/spacing.ts
+++ b/IgniteDiffApp/app/theme/spacing.ts
@@ -1,7 +1,7 @@
 /**
  * NOTE TO DEVS:
  *
- * Spacing should consistent and whitespace thought of as a first class technique up
+ * Spacing should be consistent and whitespace thought of as a first class technique up
  * there with color and typefaces.
  *
  * Which type of scale you use is based on the design.
diff --git a/IgniteDiffApp/app/utils/ignore-warnings.ts b/IgniteDiffApp/app/utils/ignore-warnings.ts
new file mode 100644
index 0000000..60db24e
--- /dev/null
+++ b/IgniteDiffApp/app/utils/ignore-warnings.ts
@@ -0,0 +1,11 @@
+/**
+ * Ignore some yellowbox warnings. Some of these are for deprecated functions
+ * that we haven't gotten around to replacing yet.
+ */
+import { YellowBox } from "react-native"
+
+YellowBox.ignoreWarnings([
+  "componentWillMount is deprecated",
+  "componentWillReceiveProps is deprecated",
+  "Require cycle:",
+])
diff --git a/IgniteDiffApp/app/utils/keychain.ts b/IgniteDiffApp/app/utils/keychain.ts
index b6e4bf2..34774bb 100644
--- a/IgniteDiffApp/app/utils/keychain.ts
+++ b/IgniteDiffApp/app/utils/keychain.ts
@@ -25,8 +25,8 @@ export async function load(server?: string) {
   if (server) {
     const creds = await ReactNativeKeychain.getInternetCredentials(server)
     return {
-      username: creds.username,
-      password: creds.password,
+      username: creds ? creds.username : null,
+      password: creds ? creds.password : null,
       server,
     }
   } else {
diff --git a/IgniteDiffApp/app/utils/storage/storage.test.ts b/IgniteDiffApp/app/utils/storage/storage.test.ts
index bbee423..b93ac04 100644
--- a/IgniteDiffApp/app/utils/storage/storage.test.ts
+++ b/IgniteDiffApp/app/utils/storage/storage.test.ts
@@ -1,4 +1,5 @@
 import AsyncStorage from "@react-native-community/async-storage"
+
 import { load, loadString, save, saveString, clear, remove } from "./storage"
 
 // fixtures
diff --git a/IgniteDiffApp/babel.config.js b/IgniteDiffApp/babel.config.js
index 5d82a08..ceacb2b 100644
--- a/IgniteDiffApp/babel.config.js
+++ b/IgniteDiffApp/babel.config.js
@@ -1,5 +1,5 @@
 module.exports = {
-  presets: ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
+  presets: ["module:metro-react-native-babel-preset"],
   env: {
     production: {},
   },
diff --git a/IgniteDiffApp/ignite/ignite.json b/IgniteDiffApp/ignite/ignite.json
index 71c2f3a..b9bb9d6 100644
--- a/IgniteDiffApp/ignite/ignite.json
+++ b/IgniteDiffApp/ignite/ignite.json
@@ -1,7 +1,7 @@
 {
   "navigation": "react-navigation",
   "generators": {},
-  "createdWith": "3.4.0",
+  "createdWith": "3.5.1",
   "boilerplate": "ignite-bowser",
-  "boilerplateVersion": "4.11.4"
+  "boilerplateVersion": "5.1.2"
 }
\ No newline at end of file
diff --git a/IgniteDiffApp/index.js b/IgniteDiffApp/index.js
index 461a75b..7d7bb43 100644
--- a/IgniteDiffApp/index.js
+++ b/IgniteDiffApp/index.js
@@ -7,5 +7,24 @@
 // side effect of breaking other tooling like mobile-center and react-native-rename.
 //
 // It's easier just to leave it here.
+import App from "./app/app.tsx"
+import { AppRegistry } from "react-native"
 
-import "./app/app.tsx"
+/**
+ * This needs to match what's found in your app_delegate.m and MainActivity.java.
+ */
+const APP_NAME = "IgniteDiffApp"
+
+// Should we show storybook instead of our app?
+//
+// ⚠️ Leave this as `false` when checking into git.
+const SHOW_STORYBOOK = false
+
+let RootComponent = App
+if (__DEV__ && SHOW_STORYBOOK) {
+  // Only include Storybook if we're in dev mode
+  const { StorybookUIRoot } = require("./storybook")
+  RootComponent = StorybookUIRoot
+}
+
+AppRegistry.registerComponent(APP_NAME, () => RootComponent)
diff --git a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
index 044dabd..d189b71 100644
--- a/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
+++ b/IgniteDiffApp/ios/IgniteDiffApp.xcodeproj/project.pbxproj
@@ -5,38 +5,39 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
 		00E356F31AD99517003FC87E /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
+		115730DA256056AA32E7C46C /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BDAA3AAEC50986D24D2F3993 /* libPods-IgniteDiffApp-tvOS.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		1E9929A65162E34DEC777611 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DC71F71C90A1C8537CAAD155 /* libPods-IgniteDiffApp-tvOSTests.a */; };
-		257303BB632F8B055FFF6054 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38DFBAF747C9D54B6E927A64 /* libPods-IgniteDiffApp-tvOS.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		2DCD954D1E0B4F2C00145EB5 /* IgniteDiffAppTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* IgniteDiffAppTests.m */; };
-		69CF6C89E6AD74AC9D7D0794 /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 30E292DDE80F2EEE17897171 /* libPods-IgniteDiffAppTests.a */; };
-		7D39C7F8475549BBF723167E /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = D7A7A75847198783D22ACC87 /* libPods-IgniteDiffApp.a */; };
-		75DD394A8D994AB18C2D975D /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8AD5E416D74D4386AA37AE40 /* Montserrat-Black.ttf */; };
-		F4EC866BDF03438C8B88EA64 /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A52CAE6C6CB74A7BA34976B4 /* Montserrat-BlackItalic.ttf */; };
-		42BC22F8D3C4454996AF1767 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 230C1284DFAA4A70ABAF900E /* Montserrat-Bold.ttf */; };
-		01A5E15C350F4602B09C9626 /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = C5EBDF3008324F5EB76BA24E /* Montserrat-BoldItalic.ttf */; };
-		A9A475EED99E4E29AD489D47 /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A18E7E190AC345B999925A41 /* Montserrat-ExtraBold.ttf */; };
-		43DA5C17DF6C4DDB8AD0307F /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = FE6808519AD04FF2BB2DBB3A /* Montserrat-ExtraBoldItalic.ttf */; };
-		A20312AE553D4C60B842058C /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 05B0344443984062990DC518 /* Montserrat-ExtraLight.ttf */; };
-		AC6B1A185ED343DC9ED5722E /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D8188F380C98413F9F7C1701 /* Montserrat-ExtraLightItalic.ttf */; };
-		5FA5207019704365B9CEC5DE /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2FACC689D49E40199F983DEC /* Montserrat-Italic.ttf */; };
-		3F2D161D2F764664AC8E333B /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3767F53FCCAD4738AEE20320 /* Montserrat-Light.ttf */; };
-		BE3DE986EAF1472DA4578145 /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 143E335ED2A74A1BB7172832 /* Montserrat-LightItalic.ttf */; };
-		9DAFF217076B4AE988F96690 /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 26BD888651694F02939969BA /* Montserrat-Medium.ttf */; };
-		093D1B89AC9D444393DFDBBA /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 75C021CDA72A4D95B153B064 /* Montserrat-MediumItalic.ttf */; };
-		1930C2341C0A469F9447E008 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BE8361CA8F91419BBE8D969C /* Montserrat-Regular.ttf */; };
-		E605835A31D84F4CBDE38CE6 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 770C1B1207AE4490A4BCEE5F /* Montserrat-SemiBold.ttf */; };
-		BE0ADF6CE2714568A1EAD458 /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 5E3AE221E60840D38149D75E /* Montserrat-SemiBoldItalic.ttf */; };
-		6373E18EDD9443FB9146851D /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BAB5A0EE368E4503BE917427 /* Montserrat-Thin.ttf */; };
-		19AE73A1CA404982B22C721E /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E6987CE6B655475C826A162A /* Montserrat-ThinItalic.ttf */; };
+		5EA5FB75FA93C6FA2A2C4435 /* libPods-IgniteDiffApp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CA3A680E0B10595D56BB7A6F /* libPods-IgniteDiffApp.a */; };
+		8F4DAB67FA98FD120518DB19 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BB59F472D86A98AB32436095 /* libPods-IgniteDiffApp-tvOSTests.a */; };
+		C5D4A9F8FBE6433E02A639DF /* libPods-IgniteDiffAppTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6B8701784FB4229E78DEFDD0 /* libPods-IgniteDiffAppTests.a */; };
+		80BE3161710B4AEFB26A2AB3 /* Montserrat-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = DFF0AF96A5E14A06AD837CB6 /* Montserrat-Black.ttf */; };
+		49F015A99D944EFF82727BCE /* Montserrat-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 65CDE1A1346641E698502920 /* Montserrat-BlackItalic.ttf */; };
+		2BB0854F15A544B9B835E005 /* Montserrat-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B42414093E184137B0B91CE0 /* Montserrat-Bold.ttf */; };
+		4089F68E32034126999A763A /* Montserrat-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = B15B45A43E41473EA7C79A95 /* Montserrat-BoldItalic.ttf */; };
+		4D4CB4F4E5094A00A9638110 /* Montserrat-ExtraBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9A9F7C3499A34A9D9972B45E /* Montserrat-ExtraBold.ttf */; };
+		DA5BAA86A2F6492C8CB9E164 /* Montserrat-ExtraBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1FFA851292424480B330EAAC /* Montserrat-ExtraBoldItalic.ttf */; };
+		EDBB9588A4FF4408B83781C5 /* Montserrat-ExtraLight.ttf in Resources */ = {isa = PBXBuildFile; fileRef = BAF1BDC5BEB747E482A2A4BD /* Montserrat-ExtraLight.ttf */; };
+		5D82858A6FDB490F957FB37E /* Montserrat-ExtraLightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4F98EE948E20493A97B56F06 /* Montserrat-ExtraLightItalic.ttf */; };
+		B2AE5E6338F8484EBDDF9E53 /* Montserrat-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4EED44CB38F84C9AB7F57BD0 /* Montserrat-Italic.ttf */; };
+		CBCCB46A744D422DB8B9CFF6 /* Montserrat-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 87193E7A42F743F0B263AE26 /* Montserrat-Light.ttf */; };
+		A2483C0F4A0940FE9B9F3230 /* Montserrat-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = DA6DCDEE81894C2780C0BDBB /* Montserrat-LightItalic.ttf */; };
+		3C41C789957B445EB05A7EFE /* Montserrat-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4CF025630EEE40E5A5E522EB /* Montserrat-Medium.ttf */; };
+		19372F33A87A4ED29B0605C8 /* Montserrat-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8C68782D04C04DE0BE337C32 /* Montserrat-MediumItalic.ttf */; };
+		4FAFCBAED159430F991F44D8 /* Montserrat-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8978B0EB8D014A12BC39B268 /* Montserrat-Regular.ttf */; };
+		A79E64D37D7C4DD6822AC2F5 /* Montserrat-SemiBold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 1D4ED4AA9E584EA3BE231661 /* Montserrat-SemiBold.ttf */; };
+		14EBDA2A918340AFA144C5DB /* Montserrat-SemiBoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E2AFDC86B99E4E31BEF0C690 /* Montserrat-SemiBoldItalic.ttf */; };
+		616CA2DA3244485E92E53BA2 /* Montserrat-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A97AF426E58D4E1A89CC80FD /* Montserrat-Thin.ttf */; };
+		2E621F5CEC0E4F22B0658458 /* Montserrat-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 04B3E1B8287446BF94B0CE4C /* Montserrat-ThinItalic.ttf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -68,40 +69,40 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = IgniteDiffApp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = IgniteDiffApp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = IgniteDiffApp/main.m; sourceTree = "<group>"; };
+		2B5A40E0B64D8061328CDAC2 /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* IgniteDiffApp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "IgniteDiffApp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* IgniteDiffApp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "IgniteDiffApp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
-		30E292DDE80F2EEE17897171 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		38DFBAF747C9D54B6E927A64 /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		4E738C8565A78981A78FC750 /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
-		608F323E0304797A6E1B3FB2 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		749DF9182FF00113BBFD0DD7 /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
-		761AA10400C60FE989B1A8BE /* Pods-IgniteDiffApp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.debug.xcconfig"; sourceTree = "<group>"; };
-		7A85FCB14A0022692C9687FE /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		A51D5F08634484D1E27D1A23 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
-		ABA300C7C05407423A2A74AD /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		D7A7A75847198783D22ACC87 /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		DC71F71C90A1C8537CAAD155 /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		3699CCA3EF934D91B01AA500 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
+		6B8701784FB4229E78DEFDD0 /* libPods-IgniteDiffAppTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffAppTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		77B457FDB4D019E534187E0E /* Pods-IgniteDiffAppTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.release.xcconfig"; sourceTree = "<group>"; };
+		81D3A08435F3AB6AAD1A3591 /* Pods-IgniteDiffAppTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffAppTests.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffAppTests/Pods-IgniteDiffAppTests.debug.xcconfig"; sourceTree = "<group>"; };
+		B6CD803295BBD8E9C8034716 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		BB59F472D86A98AB32436095 /* libPods-IgniteDiffApp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		BDAA3AAEC50986D24D2F3993 /* libPods-IgniteDiffApp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		BE96DBC3F4BE069C5216FF4C /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOS/Pods-IgniteDiffApp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
+		CA3A680E0B10595D56BB7A6F /* libPods-IgniteDiffApp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-IgniteDiffApp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		D2FFBB85577889C10C5C2FFA /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
 		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
-		F82F766DCC19C0B526A7A26A /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp-tvOSTests/Pods-IgniteDiffApp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
-		8AD5E416D74D4386AA37AE40 /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		A52CAE6C6CB74A7BA34976B4 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		230C1284DFAA4A70ABAF900E /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		C5EBDF3008324F5EB76BA24E /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		A18E7E190AC345B999925A41 /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		FE6808519AD04FF2BB2DBB3A /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		05B0344443984062990DC518 /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		D8188F380C98413F9F7C1701 /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		2FACC689D49E40199F983DEC /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		3767F53FCCAD4738AEE20320 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		143E335ED2A74A1BB7172832 /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		26BD888651694F02939969BA /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		75C021CDA72A4D95B153B064 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		BE8361CA8F91419BBE8D969C /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		770C1B1207AE4490A4BCEE5F /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		5E3AE221E60840D38149D75E /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		BAB5A0EE368E4503BE917427 /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
-		E6987CE6B655475C826A162A /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		FD9B8DC4CB380882C32D97AC /* Pods-IgniteDiffApp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-IgniteDiffApp.release.xcconfig"; path = "Target Support Files/Pods-IgniteDiffApp/Pods-IgniteDiffApp.release.xcconfig"; sourceTree = "<group>"; };
+		DFF0AF96A5E14A06AD837CB6 /* Montserrat-Black.ttf */ = {isa = PBXFileReference; name = "Montserrat-Black.ttf"; path = "../app/theme/fonts/Montserrat-Black.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		65CDE1A1346641E698502920 /* Montserrat-BlackItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BlackItalic.ttf"; path = "../app/theme/fonts/Montserrat-BlackItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		B42414093E184137B0B91CE0 /* Montserrat-Bold.ttf */ = {isa = PBXFileReference; name = "Montserrat-Bold.ttf"; path = "../app/theme/fonts/Montserrat-Bold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		B15B45A43E41473EA7C79A95 /* Montserrat-BoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-BoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-BoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		9A9F7C3499A34A9D9972B45E /* Montserrat-ExtraBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBold.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		1FFA851292424480B330EAAC /* Montserrat-ExtraBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		BAF1BDC5BEB747E482A2A4BD /* Montserrat-ExtraLight.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLight.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLight.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		4F98EE948E20493A97B56F06 /* Montserrat-ExtraLightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ExtraLightItalic.ttf"; path = "../app/theme/fonts/Montserrat-ExtraLightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		4EED44CB38F84C9AB7F57BD0 /* Montserrat-Italic.ttf */ = {isa = PBXFileReference; name = "Montserrat-Italic.ttf"; path = "../app/theme/fonts/Montserrat-Italic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		87193E7A42F743F0B263AE26 /* Montserrat-Light.ttf */ = {isa = PBXFileReference; name = "Montserrat-Light.ttf"; path = "../app/theme/fonts/Montserrat-Light.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		DA6DCDEE81894C2780C0BDBB /* Montserrat-LightItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-LightItalic.ttf"; path = "../app/theme/fonts/Montserrat-LightItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		4CF025630EEE40E5A5E522EB /* Montserrat-Medium.ttf */ = {isa = PBXFileReference; name = "Montserrat-Medium.ttf"; path = "../app/theme/fonts/Montserrat-Medium.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		8C68782D04C04DE0BE337C32 /* Montserrat-MediumItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-MediumItalic.ttf"; path = "../app/theme/fonts/Montserrat-MediumItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		8978B0EB8D014A12BC39B268 /* Montserrat-Regular.ttf */ = {isa = PBXFileReference; name = "Montserrat-Regular.ttf"; path = "../app/theme/fonts/Montserrat-Regular.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		1D4ED4AA9E584EA3BE231661 /* Montserrat-SemiBold.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBold.ttf"; path = "../app/theme/fonts/Montserrat-SemiBold.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		E2AFDC86B99E4E31BEF0C690 /* Montserrat-SemiBoldItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-SemiBoldItalic.ttf"; path = "../app/theme/fonts/Montserrat-SemiBoldItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		A97AF426E58D4E1A89CC80FD /* Montserrat-Thin.ttf */ = {isa = PBXFileReference; name = "Montserrat-Thin.ttf"; path = "../app/theme/fonts/Montserrat-Thin.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
+		04B3E1B8287446BF94B0CE4C /* Montserrat-ThinItalic.ttf */ = {isa = PBXFileReference; name = "Montserrat-ThinItalic.ttf"; path = "../app/theme/fonts/Montserrat-ThinItalic.ttf"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = unknown; explicitFileType = undefined; includeInIndex = 0; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -109,7 +110,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				69CF6C89E6AD74AC9D7D0794 /* libPods-IgniteDiffAppTests.a in Frameworks */,
+				C5D4A9F8FBE6433E02A639DF /* libPods-IgniteDiffAppTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -117,7 +118,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				7D39C7F8475549BBF723167E /* libPods-IgniteDiffApp.a in Frameworks */,
+				5EA5FB75FA93C6FA2A2C4435 /* libPods-IgniteDiffApp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -125,7 +126,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				257303BB632F8B055FFF6054 /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
+				115730DA256056AA32E7C46C /* libPods-IgniteDiffApp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -133,7 +134,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				1E9929A65162E34DEC777611 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
+				8F4DAB67FA98FD120518DB19 /* libPods-IgniteDiffApp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -176,25 +177,25 @@
 			children = (
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
 				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
-				D7A7A75847198783D22ACC87 /* libPods-IgniteDiffApp.a */,
-				38DFBAF747C9D54B6E927A64 /* libPods-IgniteDiffApp-tvOS.a */,
-				DC71F71C90A1C8537CAAD155 /* libPods-IgniteDiffApp-tvOSTests.a */,
-				30E292DDE80F2EEE17897171 /* libPods-IgniteDiffAppTests.a */,
+				CA3A680E0B10595D56BB7A6F /* libPods-IgniteDiffApp.a */,
+				BDAA3AAEC50986D24D2F3993 /* libPods-IgniteDiffApp-tvOS.a */,
+				BB59F472D86A98AB32436095 /* libPods-IgniteDiffApp-tvOSTests.a */,
+				6B8701784FB4229E78DEFDD0 /* libPods-IgniteDiffAppTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		322920B063FBA62B503F610E /* Pods */ = {
+		34DECEDEA409C8A0F5932493 /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				761AA10400C60FE989B1A8BE /* Pods-IgniteDiffApp.debug.xcconfig */,
-				4E738C8565A78981A78FC750 /* Pods-IgniteDiffApp.release.xcconfig */,
-				ABA300C7C05407423A2A74AD /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
-				608F323E0304797A6E1B3FB2 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
-				7A85FCB14A0022692C9687FE /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
-				F82F766DCC19C0B526A7A26A /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
-				A51D5F08634484D1E27D1A23 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
-				749DF9182FF00113BBFD0DD7 /* Pods-IgniteDiffAppTests.release.xcconfig */,
+				2B5A40E0B64D8061328CDAC2 /* Pods-IgniteDiffApp.debug.xcconfig */,
+				FD9B8DC4CB380882C32D97AC /* Pods-IgniteDiffApp.release.xcconfig */,
+				BE96DBC3F4BE069C5216FF4C /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */,
+				B6CD803295BBD8E9C8034716 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */,
+				3699CCA3EF934D91B01AA500 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */,
+				D2FFBB85577889C10C5C2FFA /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */,
+				81D3A08435F3AB6AAD1A3591 /* Pods-IgniteDiffAppTests.debug.xcconfig */,
+				77B457FDB4D019E534187E0E /* Pods-IgniteDiffAppTests.release.xcconfig */,
 			);
 			name = Pods;
 			path = Pods;
@@ -215,8 +216,8 @@
 				00E356EF1AD99517003FC87E /* IgniteDiffAppTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				322920B063FBA62B503F610E /* Pods */,
-				6BD58D950C08498A8F36A7E4 /* Resources */,
+				34DECEDEA409C8A0F5932493 /* Pods */,
+				700D72990A964CAA8938664C /* Resources */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -234,27 +235,27 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		6BD58D950C08498A8F36A7E4 /* Resources */ = {
+		700D72990A964CAA8938664C /* Resources */ = {
 			isa = "PBXGroup";
 			children = (
-				8AD5E416D74D4386AA37AE40 /* Montserrat-Black.ttf */,
-				A52CAE6C6CB74A7BA34976B4 /* Montserrat-BlackItalic.ttf */,
-				230C1284DFAA4A70ABAF900E /* Montserrat-Bold.ttf */,
-				C5EBDF3008324F5EB76BA24E /* Montserrat-BoldItalic.ttf */,
-				A18E7E190AC345B999925A41 /* Montserrat-ExtraBold.ttf */,
-				FE6808519AD04FF2BB2DBB3A /* Montserrat-ExtraBoldItalic.ttf */,
-				05B0344443984062990DC518 /* Montserrat-ExtraLight.ttf */,
-				D8188F380C98413F9F7C1701 /* Montserrat-ExtraLightItalic.ttf */,
-				2FACC689D49E40199F983DEC /* Montserrat-Italic.ttf */,
-				3767F53FCCAD4738AEE20320 /* Montserrat-Light.ttf */,
-				143E335ED2A74A1BB7172832 /* Montserrat-LightItalic.ttf */,
-				26BD888651694F02939969BA /* Montserrat-Medium.ttf */,
-				75C021CDA72A4D95B153B064 /* Montserrat-MediumItalic.ttf */,
-				BE8361CA8F91419BBE8D969C /* Montserrat-Regular.ttf */,
-				770C1B1207AE4490A4BCEE5F /* Montserrat-SemiBold.ttf */,
-				5E3AE221E60840D38149D75E /* Montserrat-SemiBoldItalic.ttf */,
-				BAB5A0EE368E4503BE917427 /* Montserrat-Thin.ttf */,
-				E6987CE6B655475C826A162A /* Montserrat-ThinItalic.ttf */,
+				DFF0AF96A5E14A06AD837CB6 /* Montserrat-Black.ttf */,
+				65CDE1A1346641E698502920 /* Montserrat-BlackItalic.ttf */,
+				B42414093E184137B0B91CE0 /* Montserrat-Bold.ttf */,
+				B15B45A43E41473EA7C79A95 /* Montserrat-BoldItalic.ttf */,
+				9A9F7C3499A34A9D9972B45E /* Montserrat-ExtraBold.ttf */,
+				1FFA851292424480B330EAAC /* Montserrat-ExtraBoldItalic.ttf */,
+				BAF1BDC5BEB747E482A2A4BD /* Montserrat-ExtraLight.ttf */,
+				4F98EE948E20493A97B56F06 /* Montserrat-ExtraLightItalic.ttf */,
+				4EED44CB38F84C9AB7F57BD0 /* Montserrat-Italic.ttf */,
+				87193E7A42F743F0B263AE26 /* Montserrat-Light.ttf */,
+				DA6DCDEE81894C2780C0BDBB /* Montserrat-LightItalic.ttf */,
+				4CF025630EEE40E5A5E522EB /* Montserrat-Medium.ttf */,
+				8C68782D04C04DE0BE337C32 /* Montserrat-MediumItalic.ttf */,
+				8978B0EB8D014A12BC39B268 /* Montserrat-Regular.ttf */,
+				1D4ED4AA9E584EA3BE231661 /* Montserrat-SemiBold.ttf */,
+				E2AFDC86B99E4E31BEF0C690 /* Montserrat-SemiBoldItalic.ttf */,
+				A97AF426E58D4E1A89CC80FD /* Montserrat-Thin.ttf */,
+				04B3E1B8287446BF94B0CE4C /* Montserrat-ThinItalic.ttf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
@@ -267,7 +268,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "IgniteDiffAppTests" */;
 			buildPhases = (
-				5584D6C3F35354651709BF88 /* [CP] Check Pods Manifest.lock */,
+				2F0853FEA26AC99DE44C1F18 /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -286,7 +287,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "IgniteDiffApp" */;
 			buildPhases = (
-				ED6E88874CA5733AEDB1D5E9 /* [CP] Check Pods Manifest.lock */,
+				5D7A19652077239435769482 /* [CP] Check Pods Manifest.lock */,
 				FD10A7F022414F080027D42C /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
@@ -306,7 +307,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOS" */;
 			buildPhases = (
-				70698F59D265FB790FC35C7C /* [CP] Check Pods Manifest.lock */,
+				15A84931CCD88A2E922E9361 /* [CP] Check Pods Manifest.lock */,
 				FD10A7F122414F3F0027D42C /* Start Packager */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
@@ -326,7 +327,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "IgniteDiffApp-tvOSTests" */;
 			buildPhases = (
-				CE17D7B74FEB3E47DE9C808E /* [CP] Check Pods Manifest.lock */,
+				884300C09B71A2FC683FE88F /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -400,24 +401,24 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				75DD394A8D994AB18C2D975D /* Montserrat-Black.ttf in Resources */,
-				F4EC866BDF03438C8B88EA64 /* Montserrat-BlackItalic.ttf in Resources */,
-				42BC22F8D3C4454996AF1767 /* Montserrat-Bold.ttf in Resources */,
-				01A5E15C350F4602B09C9626 /* Montserrat-BoldItalic.ttf in Resources */,
-				A9A475EED99E4E29AD489D47 /* Montserrat-ExtraBold.ttf in Resources */,
-				43DA5C17DF6C4DDB8AD0307F /* Montserrat-ExtraBoldItalic.ttf in Resources */,
-				A20312AE553D4C60B842058C /* Montserrat-ExtraLight.ttf in Resources */,
-				AC6B1A185ED343DC9ED5722E /* Montserrat-ExtraLightItalic.ttf in Resources */,
-				5FA5207019704365B9CEC5DE /* Montserrat-Italic.ttf in Resources */,
-				3F2D161D2F764664AC8E333B /* Montserrat-Light.ttf in Resources */,
-				BE3DE986EAF1472DA4578145 /* Montserrat-LightItalic.ttf in Resources */,
-				9DAFF217076B4AE988F96690 /* Montserrat-Medium.ttf in Resources */,
-				093D1B89AC9D444393DFDBBA /* Montserrat-MediumItalic.ttf in Resources */,
-				1930C2341C0A469F9447E008 /* Montserrat-Regular.ttf in Resources */,
-				E605835A31D84F4CBDE38CE6 /* Montserrat-SemiBold.ttf in Resources */,
-				BE0ADF6CE2714568A1EAD458 /* Montserrat-SemiBoldItalic.ttf in Resources */,
-				6373E18EDD9443FB9146851D /* Montserrat-Thin.ttf in Resources */,
-				19AE73A1CA404982B22C721E /* Montserrat-ThinItalic.ttf in Resources */,
+				80BE3161710B4AEFB26A2AB3 /* Montserrat-Black.ttf in Resources */,
+				49F015A99D944EFF82727BCE /* Montserrat-BlackItalic.ttf in Resources */,
+				2BB0854F15A544B9B835E005 /* Montserrat-Bold.ttf in Resources */,
+				4089F68E32034126999A763A /* Montserrat-BoldItalic.ttf in Resources */,
+				4D4CB4F4E5094A00A9638110 /* Montserrat-ExtraBold.ttf in Resources */,
+				DA5BAA86A2F6492C8CB9E164 /* Montserrat-ExtraBoldItalic.ttf in Resources */,
+				EDBB9588A4FF4408B83781C5 /* Montserrat-ExtraLight.ttf in Resources */,
+				5D82858A6FDB490F957FB37E /* Montserrat-ExtraLightItalic.ttf in Resources */,
+				B2AE5E6338F8484EBDDF9E53 /* Montserrat-Italic.ttf in Resources */,
+				CBCCB46A744D422DB8B9CFF6 /* Montserrat-Light.ttf in Resources */,
+				A2483C0F4A0940FE9B9F3230 /* Montserrat-LightItalic.ttf in Resources */,
+				3C41C789957B445EB05A7EFE /* Montserrat-Medium.ttf in Resources */,
+				19372F33A87A4ED29B0605C8 /* Montserrat-MediumItalic.ttf in Resources */,
+				4FAFCBAED159430F991F44D8 /* Montserrat-Regular.ttf in Resources */,
+				A79E64D37D7C4DD6822AC2F5 /* Montserrat-SemiBold.ttf in Resources */,
+				14EBDA2A918340AFA144C5DB /* Montserrat-SemiBoldItalic.ttf in Resources */,
+				616CA2DA3244485E92E53BA2 /* Montserrat-Thin.ttf in Resources */,
+				2E621F5CEC0E4F22B0658458 /* Montserrat-ThinItalic.ttf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -453,43 +454,43 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
+		15A84931CCD88A2E922E9361 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
+			inputFileListPaths = (
+			);
 			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
 			);
-			name = "Bundle React Native Code And Images";
 			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
 		};
-		5584D6C3F35354651709BF88 /* [CP] Check Pods Manifest.lock */ = {
+		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputFileListPaths = (
-			);
 			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
 			);
+			name = "Bundle React Native Code And Images";
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffAppTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
+			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		70698F59D265FB790FC35C7C /* [CP] Check Pods Manifest.lock */ = {
+		2F0853FEA26AC99DE44C1F18 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -504,14 +505,14 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOS-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffAppTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		CE17D7B74FEB3E47DE9C808E /* [CP] Check Pods Manifest.lock */ = {
+		5D7A19652077239435769482 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -526,14 +527,14 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		ED6E88874CA5733AEDB1D5E9 /* [CP] Check Pods Manifest.lock */ = {
+		884300C09B71A2FC683FE88F /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -548,7 +549,7 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-IgniteDiffApp-tvOSTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
@@ -660,7 +661,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = A51D5F08634484D1E27D1A23 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
+			baseConfigurationReference = 81D3A08435F3AB6AAD1A3591 /* Pods-IgniteDiffAppTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -683,7 +684,7 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 749DF9182FF00113BBFD0DD7 /* Pods-IgniteDiffAppTests.release.xcconfig */;
+			baseConfigurationReference = 77B457FDB4D019E534187E0E /* Pods-IgniteDiffAppTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
@@ -703,7 +704,7 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 761AA10400C60FE989B1A8BE /* Pods-IgniteDiffApp.debug.xcconfig */;
+			baseConfigurationReference = 2B5A40E0B64D8061328CDAC2 /* Pods-IgniteDiffApp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -723,7 +724,7 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 4E738C8565A78981A78FC750 /* Pods-IgniteDiffApp.release.xcconfig */;
+			baseConfigurationReference = FD9B8DC4CB380882C32D97AC /* Pods-IgniteDiffApp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CURRENT_PROJECT_VERSION = 1;
@@ -742,7 +743,7 @@
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = ABA300C7C05407423A2A74AD /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
+			baseConfigurationReference = BE96DBC3F4BE069C5216FF4C /* Pods-IgniteDiffApp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -770,7 +771,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 608F323E0304797A6E1B3FB2 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
+			baseConfigurationReference = B6CD803295BBD8E9C8034716 /* Pods-IgniteDiffApp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -798,7 +799,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 7A85FCB14A0022692C9687FE /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
+			baseConfigurationReference = 3699CCA3EF934D91B01AA500 /* Pods-IgniteDiffApp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -825,7 +826,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = F82F766DCC19C0B526A7A26A /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
+			baseConfigurationReference = D2FFBB85577889C10C5C2FFA /* Pods-IgniteDiffApp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index eb68692..4944e17 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -7,90 +7,90 @@
     "ios": "react-native run-ios",
     "start": "react-native start",
     "test": "jest",
-    "lint": "eslint index.js app --fix --ext .js,.ts,.tsx",
+    "lint": "eslint index.js app storybook test --fix --ext .js,.ts,.tsx",
     "test:e2e": "detox test -c ios.sim.debug",
     "build:e2e": "detox build -c ios.sim.debug",
     "ci:test:e2e": "detox test -c ios.sim.release -l verbose --cleanup",
     "ci:build:e2e": "detox build -c ios.sim.release",
     "compile": "tsc --noEmit -p . --pretty",
     "format": "npm-run-all format:*",
-    "format:js": "prettier --write {.,**}/*.js",
-    "format:json": "prettier --write {.,**}/*.json",
-    "format:md": "prettier --write {.,**}/*.md",
-    "format:ts": "prettier --write {.,**}/*.{ts,tsx}",
+    "format:js": "prettier --write '**/*.js'",
+    "format:json": "prettier --write '**/*.json'",
+    "format:md": "prettier --write '**/*.md'",
+    "format:ts": "prettier --write '**/*.ts{,x}'",
     "hack:types-react-navigation": "rimraf node_modules/@types/react-navigation/node_modules/@types",
     "hack:types-react-native": "rimraf node_modules/@types/react-native/node_modules/@types",
     "hack:types-react-test-renderer": "rimraf node_modules/@types/react-test-renderer/node_modules/@types",
     "patch": "patch-package",
     "postinstall": "node ./bin/postInstall",
     "prepare": "npm-run-all patch hack:*",
-    "storybook": "storybook start -p 9001 --skip-packager",
+    "storybook": "start-storybook -p 9001 -c ./storybook",
     "adb": "adb reverse tcp:9090 tcp:9090 && adb reverse tcp:3000 tcp:3000 && adb reverse tcp:9001 tcp:9001 && adb reverse tcp:8081 tcp:8081"
   },
   "dependencies": {
-    "@react-native-community/async-storage": "^1.5.1",
-    "apisauce": "1.0.3",
+    "@react-native-community/async-storage": "^1.9.0",
+    "@react-native-community/masked-view": "0.1.5",
+    "@react-navigation/native": "^5.1.5",
+    "apisauce": "1.1.1",
     "i18n-js": "^3.0.11",
     "lodash.throttle": "4.1.1",
-    "mobx": "^4.13.0",
+    "mobx": "^4.15.4",
     "mobx-react-lite": "^1.4.1",
     "mobx-state-tree": "^3.14.1",
-    "ramda": "0.26.1",
+    "ramda": "0.27.0",
     "react": "16.9.0",
-    "react-native": "0.61.2",
+    "react-native": "0.61.5",
     "react-native-gesture-handler": "^1.5.0",
-    "react-native-keychain": "3.1.3",
+    "react-native-keychain": "5.0.1",
     "react-native-localize": "^1.0.0",
-    "react-native-screens": "^2.0.0-alpha.6",
-    "react-native-splash-screen": "3.1.1",
-    "react-navigation": "3.11.1",
+    "react-native-safe-area-context": "0.7.3",
+    "react-native-safe-area-view": "1.0.0",
+    "react-native-screens": "^2.5.0",
+    "react-native-splash-screen": "3.2.0",
     "reactotron-mst": "^3.1.1",
     "reactotron-react-native": "^4.0.0-beta.1",
     "validate.js": "0.13.1"
   },
   "devDependencies": {
-    "@babel/core": "^7.7.5",
+    "@babel/core": "^7.10.2",
     "@babel/plugin-proposal-decorators": "^7.0.0",
     "@babel/plugin-proposal-optional-catch-binding": "^7.0.0",
-    "@babel/runtime": "^7.7.6",
-    "@emotion/core": "^10.0.15",
-    "@storybook/addon-storyshots": "5.1.11",
-    "@storybook/react-native": "5.1.11",
-    "@types/jest": "24.0.18",
-    "@types/ramda": "0.26.18",
-    "@types/react": "16.8.24",
-    "@types/react-native": "0.60.19",
-    "@types/react-navigation": "3.0.7",
-    "@types/react-test-renderer": "16.8.3",
-    "@typescript-eslint/eslint-plugin": "^2.11.0",
-    "@typescript-eslint/parser": "^2.11.0",
-    "babel-jest": "^24.9.0",
-    "detox": "^14.0.1",
-    "emotion-theming": "^10.0.14",
+    "@babel/runtime": "^7.10.2",
+    "@storybook/addon-storyshots": "5.3.17",
+    "@storybook/react-native": "5.3.17",
+    "@storybook/react-native-server": "5.3.17",
+    "@types/jest": "25.2.2",
+    "@types/ramda": "0.26.44",
+    "@types/react": "16.9.23",
+    "@types/react-native": "0.61.23",
+    "@types/react-test-renderer": "16.9.2",
+    "@typescript-eslint/eslint-plugin": "^2.24.0",
+    "@typescript-eslint/parser": "^2.24.0",
+    "babel-jest": "^26.0.1",
+    "detox": "^16.0.0",
     "eslint": "^6.6.0",
     "eslint-config-prettier": "^6.0.0",
-    "eslint-config-standard": "^13.0.1",
+    "eslint-config-standard": "^14.1.0",
     "eslint-plugin-import": "^2.15.0",
-    "eslint-plugin-node": "^9.1.0",
+    "eslint-plugin-node": "^11.0.0",
     "eslint-plugin-promise": "^4.0.1",
     "eslint-plugin-react": "^7.12.4",
     "eslint-plugin-react-native": "^3.6.0",
     "eslint-plugin-standard": "^4.0.0",
-    "ignite-bowser": "4.11.4",
-    "jest": "^24.9.0",
+    "ignite-bowser": "5.1.2",
+    "jest": "25.5.4",
     "jetifier": "^1.6.1",
-    "metro-react-native-babel-preset": "^0.57.0",
+    "metro-react-native-babel-preset": "^0.59.0",
     "npm-run-all": "4.1.5",
-    "patch-package": "6.1.2",
+    "patch-package": "6.2.1",
     "postinstall-prepare": "1.0.1",
-    "prettier": "1.18.2",
-    "react-devtools-core": "3.6.3",
-    "react-native-dotenv": "^0.2.0",
+    "prettier": "1.19.1",
+    "react-devtools-core": "4.5.0",
     "react-powerplug": "1.0.0",
     "react-test-renderer": "16.9.0",
-    "rimraf": "2.6.3",
+    "rimraf": "3.0.2",
     "solidarity": "2.3.1",
-    "typescript": "3.5.3"
+    "typescript": "3.9.3"
   },
   "jest": {
     "preset": "react-native",
@@ -103,7 +103,7 @@
       "/e2e"
     ],
     "transformIgnorePatterns": [
-      "node_modules/(?!(jest-)?react-native|react-native|react-navigation|@react-navigation|@storybook|@react-native-community)"
+      "node_modules/(?!(jest-)?react-native|react-native|@react-navigation|@storybook|@react-native-community)"
     ]
   },
   "prettier": {
diff --git a/IgniteDiffApp/storybook/storybook.tsx b/IgniteDiffApp/storybook/storybook.tsx
index 725be9b..e84d97a 100644
--- a/IgniteDiffApp/storybook/storybook.tsx
+++ b/IgniteDiffApp/storybook/storybook.tsx
@@ -1,23 +1,29 @@
-import React, { useEffect } from "react"
+import React, { useEffect, FunctionComponent } from "react"
 import { getStorybookUI, configure } from "@storybook/react-native"
-import SplashScreen from "react-native-splash-screen"
 
-declare var module
+declare let module
 
 configure(() => {
   require("./storybook-registry")
 }, module)
 
-const StorybookUI = getStorybookUI({ port: 9001, host: "localhost", onDeviceUI: true })
+const StorybookUI = getStorybookUI({
+  port: 9001,
+  host: "localhost",
+  onDeviceUI: true,
 
-export const StorybookUIRoot: React.FunctionComponent = () => {
+  asyncStorage: require("@react-native-community/async-storage").default,
+})
+
+export const StorybookUIRoot: FunctionComponent = () => {
   useEffect(() => {
-    SplashScreen.hide()
-    if (typeof __TEST__ === "undefined" || !__TEST__) {
-      const Reactotron = require("../app/services/reactotron")
-      const reactotron = new Reactotron.Reactotron()
-      reactotron.setup()
-    }
+    ;(async () => {
+      if (typeof __TEST__ === "undefined" || !__TEST__) {
+        const Reactotron = require("../app/services/reactotron")
+        const reactotron = new Reactotron.Reactotron()
+        reactotron.setup()
+      }
+    })()
   }, [])
 
   return <StorybookUI />
diff --git a/IgniteDiffApp/test/i18n.test.ts b/IgniteDiffApp/test/i18n.test.ts
index fc373b5..376cfdf 100644
--- a/IgniteDiffApp/test/i18n.test.ts
+++ b/IgniteDiffApp/test/i18n.test.ts
@@ -7,6 +7,20 @@ const EXCEPTIONS = [
   // "welcomeScreen.readyForLaunch",
 ]
 
+function iterate(obj, stack, array) {
+  for (const property in obj) {
+    if (Object.prototype.hasOwnProperty.call(obj, property)) {
+      if (typeof obj[property] === "object") {
+        iterate(obj[property], `${stack}.${property}`, array)
+      } else {
+        array.push(`${stack.slice(1)}.${property}`)
+      }
+    }
+  }
+
+  return array
+}
+
 /**
  * This tests your codebase for missing i18n strings so you can avoid error strings at render time
  *
@@ -46,17 +60,3 @@ describe("i18n", () => {
     })
   }, 240000)
 })
-
-function iterate(obj, stack, array) {
-  for (const property in obj) {
-    if (obj.hasOwnProperty(property)) {
-      if (typeof obj[property] === "object") {
-        iterate(obj[property], `${stack}.${property}`, array)
-      } else {
-        array.push(`${stack.slice(1)}.${property}`)
-      }
-    }
-  }
-
-  return array
-}
diff --git a/IgniteDiffApp/test/mock-reactotron.ts b/IgniteDiffApp/test/mock-reactotron.ts
index 832ec7b..6366dae 100644
--- a/IgniteDiffApp/test/mock-reactotron.ts
+++ b/IgniteDiffApp/test/mock-reactotron.ts
@@ -1,2 +1 @@
-declare var tron
-tron = null
+declare const tron
diff --git a/IgniteDiffApp/test/setup.ts b/IgniteDiffApp/test/setup.ts
index 21a5db9..1bb0a69 100644
--- a/IgniteDiffApp/test/setup.ts
+++ b/IgniteDiffApp/test/setup.ts
@@ -8,5 +8,5 @@ import "./mock-react-native-localize"
 import "./mock-reactotron"
 
 declare global {
-  var __TEST__
+  let __TEST__
 }
diff --git a/IgniteDiffApp/tsconfig.json b/IgniteDiffApp/tsconfig.json
index 436d2c9..ea13117 100644
--- a/IgniteDiffApp/tsconfig.json
+++ b/IgniteDiffApp/tsconfig.json
@@ -11,8 +11,8 @@
     "noImplicitThis": true,
     "noUnusedLocals": true,
     "sourceMap": true,
-    "target": "es2015",
-    "lib": ["es7"],
+    "target": "esnext",
+    "lib": ["esnext"],
     "skipLibCheck": true
   },
   "exclude": ["node_modules"],
